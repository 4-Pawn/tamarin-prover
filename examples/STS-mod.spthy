theory STSmod
begin

section{* The Station-To-Station Protocol, modified version *}


// Public key infrastructure
rule Register_pk:
  [ Fr(~ltk) ] 
  --> 
  [ !Ltk($A, ~ltk), !Pk($A, pk(~ltk)) ]

rule Get_pk:
  [ !Pk(A, pk) ] 
  --> 
  [ Out(pk) ]

rule Reveal_ltk:
    [ !Ltk(A, ltk) ]
  --[ LtkReveal(A) ]->
    [ Out(ltk) ]

// Protocol
rule Init_1:
  [ Fr(~ekI), !Ltk($I, ltkI) ]
  -->
  [ Init_1( $I, $R, ltkI, ~ekI )
  , Out( <$I, $R, 'g' ^ ~ekI> ) ]

rule Init_2:
    [ Init_1( $I, $R, ltkI, ~ekI )
    , !Pk($R, pk(ltkR))
    , In( <$R, $I, Y, sign{'1', h(< $I, 'g'^~ekI, Y >) }ltkR> ) ]
  --[ SessionKey($I,$R, h(Y ^ ~ekI)) ]->
    [ Out( <$I, $R, sign{'2', h(< $R, 'g' ^ ~ekI, Y >) }ltkI> ) ]

rule Resp_1:
    [ !Pk($I, pk(ltkI))
    , !Ltk($R, ltkR)
    , Fr(~ekR)
    , In( <$I, $R, X > ) ]
  -->
    [ Resp_1( $I, $R, ltkI, ltkR, ~ekR, X )
    , Out( <$R, $I, 'g' ^ ~ekR, sign{'1', h(< $I, X, 'g' ^ ~ekR >) }ltkR > ) ]

rule Resp_2:
    [ Resp_1( $I, $R, ltkI, ltkR, ~ekR, X )
    , In( <$I, $R, X, sign{'2', h(< $R, X, 'g'^~ekR >) }ltkI> ) ]
  --[ SessionKey($I,$R, h(X ^ ~ekR) ) ]->
    []

lemma Perfect_Forward_Secrecy:
  "All I R sessKey #i #k. 
     SessionKey(I,R,sessKey) @ i &
     K(sessKey) @ k
     ==>
     ( (Ex #r. LtkReveal(I) @ r & r < i)
     | (Ex #r. LtkReveal(R) @ r & r < i)
     )
  "


end
