## Example protocol where unforced pair is problematic

# Initiator: x1=tid x2=Init x3=Resp
thread:
Init0: [] -[x1]-> [P[Init,0](x1)]
step:
Init1: [P[Init,0](x1)] -[]-> [P[Init,1](x1,x2,x3),S(encA(pk(x3),pair(a1,pair(agent(hon(x2)),non(a1,x1)))))]
Init2: [P[Init,1](x1,x2,x3),K(encA(pk(agent(hon(x2))),pair(a2,pair(x3,non(a1,x1)))))] -[]-> [P[Init,2](x1,x2,x3)]

# Responder:
thread:
Resp0: [] -[x1]-> [P[Resp,0](x1)]
step:
Resp1: [P[Resp,0](x1),K(encA(pk(agent(hon(x3))),pair(a1,pair(x2,x4))))] -[]-> [P[Resp,1](x1,x2,x3,x4),S(encA(pk(x2),pair(a2,pair(agent(hon(x3)),x4))))]

goal:
Characterization_Init: [P[Init,2](x1,x2,agent(hon(x3)))] -[]-> []
Characterization_Resp: [P[Resp,1](x1,agent(hon(x2)),x3,x4)] -[]-> []
Secrecy_Init_nonce: [K(non(a1,x1)),P[Init,1](x1,x2,agent(hon(x3)))] -[]-> []

