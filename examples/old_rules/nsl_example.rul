## NSL Protocol rules

# Initiator: x1=tid, x2=I, x3=R, x4=NR
thread:
NSL_Init0: [] -[x1]-> [P[Init,0](x1)]
step:
NSL_Init1: [P[Init,0](x1),EQ(x3,agent(x5))] -[]-> [P[Init,1](x1,x2,x3),S(encA(pk(x3),pair(agent(hon(x2)),non(a1,x1))))]
NSL_Init2: [P[Init,1](x1,x2,x3),K(encA(pk(agent(hon(x2))),pair(non(a1,x1),pair(x3,x4)))),EQ(x4,non(x5,x6))] -[]-> [P[Init,2](x1,x2,x3,x4),S(encA(pk(x3),x4))]

# Responder: x1=tid, x2=I, x3=R, x4=NI
thread:
NSL_Resp0: [] -[x1]-> [P[Resp,0](x1)]
step:
NSL_Resp1: [P[Resp,0](x1),K(encA(pk(agent(hon(x3))),pair(x2,x4))),EQ(x2,agent(x7)),EQ(x4,non(x5,x6))] -[]-> [P[Resp,1](x1,x2,x3,x4),S(encA(pk(x2),pair(x4,pair(agent(hon(x3)),non(a2,x1)))))]
NSL_Resp2: [P[Resp,1](x1,x2,x3,x4),K(encA(pk(agent(hon(x3))),non(a2,x1)))] -[]-> [P[Resp,2](x1,x2,x3,x4)]

goal:
Characterizations_Init: [P[Init,2](x1,x2,agent(hon(x3)),x4)] -[]-> []
Characterizations_Resp: [P[Resp,2](x1,agent(hon(x2)),x3,x4)] -[]-> []
Secrecy_Init_NI: [K(non(a1,x1)),P[Init,2](x1,x2,agent(hon(x3)),x4)] -[]-> []
Secrecy_Init_NR: [K(x4),P[Init,2](x1,x2,agent(hon(x3)),x4)] -[]-> []
Secrecy_Resp_NI: [K(x4),P[Resp,2](x1,agent(hon(x2)),x3,x4)] -[]-> []
Secrecy_Resp_NR: [K(non(a2,x1)),P[Resp,2](x1,agent(hon(x2)),x3,x4)] -[]-> []
# Ni_known: [] -[]-> []
