filename; progsverif-tamarin result ; progsverif-tamarin time
./SSH/ssh-with-one-forwarding.spthy;RESULT not (event(AcceptS2(a,b,skS,skP,source[]))@i && event(Honnest(a))@j) is false. RESULT not (event(AcceptS2(a,b,skS,skP,nested[]))@i && event(Honnest(a))@j) is false. RESULT not (event(KeyP(k))@i && attacker(k)@j) is true. RESULT event(AcceptP(a,b,skS,skP,t))@i ==> i > j && event(AcceptS(a,b,skS,skP2))@j is true. RESULT event(AcceptP(a,b,skS,skP,t))@i && event(AcceptP(a,b,skS,skP,t))@j ==> i = j is true. RESULT event(AcceptS2(a,b,skS,skP,t))@i && event(AcceptS2(a,b,skS,skP,t))@j ==> i = j is true. RESULT event(AcceptP2(a,b,skS,skP,t))@i && event(AcceptP2(a,b,skS,skP,t))@j ==> i = j cannot be proved. RESULT event(AcceptS2(a,b,skS,skP,t))@i ==> i > j && event(AcceptP2(a,b,skS,skP,t))@j is true. RESULT not (event(KeyS2(k))@i && attacker(k)@j) is true. ;4.057147216;
./SSH/ssh-without-forwarding.spthy;RESULT not (event(KeyP(k_2))@i && attacker(k_2)@j) is true. RESULT event(AcceptP(a_1,b_1,skS_1,skP))@i ==> i > j && event(AcceptS(a_1,b_1,skS_1,skP2))@j is true. RESULT event(AcceptP(a_1,b_1,skS_1,skP))@i && event(AcceptP(a_1,b_1,skS_1,skP))@j ==> i = j is true. RESULT event(AcceptS2(a_1,b_1,skS_1,skP))@i && event(AcceptS2(a_1,b_1,skS_1,skP))@j ==> i = j is true. RESULT event(AcceptP2(a_1,b_1,skS_1,skP))@i && event(AcceptP2(a_1,b_1,skS_1,skP))@j ==> i = j is true. RESULT event(AcceptS2(a_1,b_1,skS_1,skP))@i ==> i > j && event(AcceptP2(a_1,b_1,skS_1,skP))@j is true. RESULT not (event(KeyS2(k_2))@i && attacker(k_2)@j) is true. RESULT not event(AcceptS2(k_2,h_2,skS_1,skP))@i is false. ;.347959675;
./privacypass.spthy;RESULT event(Accept(x_2))@i ==> i > j && event(Issue(MVBlind(x_2,r_1)))@j is true. RESULT not event(Accept(x_2))@i is false. ;.062951303;
./ex1.spthy;RESULT not (event(Secret(x)) && attacker(x)) is true. RESULT not (event(Secret(x))@i && attacker(x)@j) is true. RESULT not event(Received(x))@i is false. ;.075000783;
./ExistingSapicModels/OTP.spthy;RESULT not event(SessionV(pka,k))@t1 is false. RESULT not (event(Key(k))@t1 && attacker(k)@t2) is true. RESULT event(SessionV(pka,k))@t1 ==> event(SessionP(pka,k))@t2 && t1 > t2 is true. RESULT not (event(SessionV(pka,k))@t1 && attacker(k)@t2) is true. RESULT event(AskU(pw,fr))@t1 && event(AskU(pw,fr))@t2 ==> t1 = t2 is true. RESULT not (event(Ask(pw,chal,fr,k))@t1 && attacker(chal)@t2) is true. RESULT event(Accept(pw,ch))@t1 ==> event(Ask(pw,ch,fr,k))@t2 && event(AskU(pw,fr))@t3 && t1 > t2 is true. RESULT event(Ask(pw,ch,fr,k))@t1 && event(Ask(pw,ch,fr,k))@t2 ==> t1 = t2 is true. ;.143766994;
./ExistingSapicModels/nsl-no_as-untagged.spthy;RESULT not event(SessionA(pka,pkb,k))@t1 is false. RESULT not event(SessionB(pka,pkb,k))@t1 is false. RESULT not (event(SessionA(pka,pkb,k))@t1 && attacker(k)@t2 && event(HonestA(pka))@i1 && event(HonestB(pkb))@i2) is true. ;.076096853;
./ExistingSapicModels/AC_sid_with_attack.spthy;RESULT event(Voutput(h))@t1 ==> event(Poutput(h))@t2 && t1 > t2 cannot be proved. ;.064286102;
./ExistingSapicModels/AKE.spthy;RESULT not event(Poutput(h1,h2))@t is false. RESULT not event(Voutput(h1,h2))@t is false. RESULT not event(SessionP(pka,k))@t1 is false. RESULT not event(SessionV(pka,k))@t1 is false. RESULT event(SessionV(pka,k))@t1 ==> event(SessionP(pka,k))@t2 && t1 > t2 is true. RESULT not (event(SessionV(pka,k))@t1 && attacker(k)@t2) is true. ;.064660701;
./ExistingSapicModels/AC.spthy;RESULT not event(Local(m,loc[]))@i_2 is false. RESULT event(Local(m,loc[]))@i_2 ==> event(Remote(m,loc[]))@j is true. ;.067579818;
./ExistingSapicModels/AC_counter_with_attack.spthy;RESULT event(Voutput((o2,(i2,(o,list(i_2,init[]))))))@t1 ==> event(Poutput((o2,(i2,(o,list(i_2,init[]))))))@t2 && t1 > t2 is false. ;.073183486;
./States/scytl-voting-system.spthy;RESULT not event(InsertBB(Id,B1))@i is false. RESULT event(InsertBB(Id,B1))@i && event(InsertBB(Id,B2))@j ==> B1 = B2 cannot be proved. RESULT event(HasVoted(Pke,K1,Sks,honest(Id1),B3,FC1,CRFid1))@i ==> event(Confirmed(honest(Id1),K1,Z_J))@j && B3 = (C,(W1,(EC0,(pub(sk(honest(Id1))),P1)))) && C = enc(Pke,phi(v(Z_J)),R) is true. RESULT event(HappyUser(Id2,K2,T_J))@i ==> event(HasVoted(Pke,K2,Sks,Id2,B4,FC2,CRFid2))@j && B4 = (C2,(W2,(EC1,(pub(sk(Id2)),P2)))) && C2 = enc(Pke,phi(v(T_J)),R) && W2 = w(sk(Id2),v(T_J)) && (EC1 = w(sk(Id2),cut(enc(Pke,phi(v(T_J)),R))) || EC1 = cut(enc(Pke,phi(w(sk(Id2),v(T_J))),R))) && P2 = zkp(Pke,pub(sk(Id2)),C2,EC2,W2,R,sk(Id2)) && (EC2 = w(sk(Id2),cut(enc(Pke,phi(v(T_J)),R))) || EC2 = cut(enc(Pke,phi(w(sk(Id2),v(T_J))),R))) && CRFid2 = sign(Sks,FC2) is true. ;.411858883;
./States/secure-device.spthy;RESULT event(Access(m))@i_2 ==> (attacker(m)@j2 && i_2 > j2) || event(Exclusive(x,m))@j2 || event(Exclusive(m,y))@j2 cannot be proved. RESULT event(InitDevice(s))@t1 && event(InitDevice(s))@t2 ==> t1 = t2 is true. RESULT not (event(Exclusive(x,y))@i_2 && attacker(x)@j) is false. RESULT not (event(Exclusive(x,y))@i_2 && attacker(y)@k) is false. RESULT not (event(Exclusive(x,y))@i_2 && attacker(x)@k1 && attacker(y)@k2) is true. ;.095846252;
./States/canauth.spthy;RESULT not event(Received(sk_1,msg,i))@u is false. RESULT event(Received(sk_1,msg,i))@u ==> event(Sent(sk_1,msg,i))@v is true. RESULT event(Received(sk_1,msg1,i1))@u && event(Received(sk_1,msg2,i2))@v ==> (msg1 = msg2 && i1 = i2) || (msg1 â‰  msg2 && i1 â‰  i2) cannot be proved. ;.092698971;
./LAKE/lake-edhoc.spthy;RESULT not (event(AcceptR((pkI_1,(pkR_1,k4))))@i && attacker(k4)@j && event(Honnest((pkI_1,Init[])))@l) is true. RESULT not (event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i && attacker(k4)@j && event(Honnest((pkR_1,Resp[])))@l) is true. RESULT not event(AcceptR((pkI_1,(pkR_1,k3))))@i is false. RESULT not event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i is false. RESULT not (event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i && event(Honnest((pkR_1,Resp[])))@l) is false. RESULT not (event(AcceptR((pkI_1,(pkR_1,k4))))@i && event(Honnest((pkI_1,Init[])))@l) is false. RESULT event(AcceptR((pkI_1,(pkR_1,k4))))@i ==> i > j && event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@j is false. RESULT event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i ==> i > j && event(DerivedR((pkR_1,k3)))@j is false. RESULT event(AcceptR((pkI_1,(pkR_1,k4))))@i && event(Honnest((pkI_1,Init[])))@l ==> i > j && event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@j is true. RESULT event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i && event(Honnest((pkR_1,Resp[])))@l ==> i > j && event(DerivedR((pkR_1,k3)))@j is true. ;1.748146903;
./LAKE/lake-edhoc-DHmode-KCI.spthy;RESULT not (event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i && attacker(k4)@j && event(HonnestDH((pkR_1,Resp[])))@l) is true. RESULT not (event(AcceptR((pkI_1,(pkR_1,k4))))@i && attacker(k4)@j && event(HonnestDH((pkI_1,Init[])))@l) is false. RESULT event(AcceptR((pkI_1,(pkR_1,k4))))@i && event(HonnestDH((pkI_1,Init[])))@l ==> i > j && event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@j is false. RESULT event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i && event(HonnestDH((pkR_1,Resp[])))@l ==> i > j && event(DerivedR((pkR_1,k3)))@j is true. ;6.874351868;
./LAKE/lake-edhoc-DHmode-FS.spthy;RESULT not event(AcceptR((pkI_1,(pkR_1,k3))))@i is false. RESULT not event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i is false. RESULT event(AcceptR((pkI_1,(pkR_1,k4))))@i && attacker(k4)@j && event(Honnest((pkI_1,Init[])))@l ==> event(Compromise((pkI_1,Comp[])))@t is true. RESULT event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i && attacker(k4)@j && event(Honnest((pkR_1,Resp[])))@l ==> event(Compromise((pkR_1,Comp[])))@t is true. RESULT event(AcceptR((pkI_1,(pkR_1,k4))))@i && event(Honnest((pkI_1,Init[])))@l ==> (i > j && event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@j) || event(Compromise((pkI_1,Comp[])))@t is true. RESULT event(AcceptI((pkI_1,(pkR_1,(k3,k4)))))@i && event(Honnest((pkR_1,Resp[])))@l ==> (i > j && event(DerivedR((pkR_1,k3)))@j) || event(Compromise((pkR_1,Comp[])))@t is true. ;15.378464855;
./KEMTLS/kemtls.spthy;RESULT not event(AcceptP)@t is false. RESULT not event(AcceptS)@t is false. RESULT event(AcceptP)@t ==> (event(AcceptS)@s && t > s) || event(Compromise)@s2 is true. RESULT not (event(ServerKey(sk))@t1 && attacker(sk)@t2) is false. RESULT event(ClientKey(sk))@t1 && attacker(sk)@t2 ==> event(Compromise)@t3 && t1 > t3 is true. ;.465450093;
./KEMTLS/kemtls-noaead.spthy;RESULT not event(AcceptP)@t is false. RESULT not event(AcceptS)@t is false. RESULT event(AcceptP)@t ==> event(AcceptS)@s && t > s is true. RESULT not (event(ServerKey(sk))@t1 && attacker(sk)@t2) is false. RESULT not (event(ClientKey(sk))@t1 && attacker(sk)@t2) is true. ;.385842070;
./KEMTLS/kemtls-clientauth.spthy;RESULT not (event(AcceptP((pkS_1,(pkP_1,k))))@t && event(Honnest((pkS_1,Serv[])))@t2) is false. RESULT not (event(AcceptS((pkS_1,(pkP_1,k))))@t && event(Honnest((pkP_1,Client[])))@t2) is false. RESULT not (event(TestE((pkS_1,pkP_1)))@t && event(Honnest((pkP_1,Client[])))@t2) is false. RESULT not (event(TestP((pkS_1,pkP_1)))@t && event(Honnest((pkS_1,Serv[])))@t2) is false. RESULT event(AcceptP((pkS_1,(pkP_1,key))))@t && event(Honnest((pkS_1,Serv[])))@t2 ==> event(AcceptS((pkS_1,(pkP_1,key))))@s && t > s is true. RESULT event(AcceptS((pkS_1,(pkP_1,key))))@t && event(Honnest((pkP_1,Client[])))@t2 ==> event(DerivedP((pkS_1,(pkP_1,key))))@s && t > s is true. ;1.261332476;
