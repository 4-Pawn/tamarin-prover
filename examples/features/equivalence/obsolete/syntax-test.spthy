theory SyntaxTest
begin

/*
 * Protocol:	 Test of different syntactic constructs
 * Modeler: 	 Jannik Dreier and Ralf Sasse
 * Described in: 
 * Date: 	 April 2014
 *
 * Status: 	 ?
 */

functions: h/1, aenc/2, adec/2, pk/1
equations: adec(aenc(m, pk(k)), k) = m


// Registering a public key
rule Register_pk:
  [ Fr(~ltk) ]
  -->
  [ Out(diff(h(<$A,diff($B,~ltk)>),<~ltk,$B>)) ]
/*  Out(diff(h(<$A,$B>),<~ltk,$B>)) */
/*The above line is the same as the one in the actual rule as the diff(..diff(..)) only picks the left/right part of the inner diff, depending on whether it was in left or right part of the outer diff - but this is good for checking syntax */

rule Register_pk1:
  [ Fr(~ltk) ]
  --[ DiffProtoRegister_pk() ]->
  [ Out(~ltk) ]
/* Testing rule name and fact name clash identification */
  
/*
lemma testLeftEq [left]:
  "Ex #i. DiffIntrEquality() @i"
*/

lemma Client_session_key_secrecy [left]:
  " /* It cannot be that a  */
    not(
      Ex k #j.
        K(k) @ #j
    )
  "

// This lemma uses an automatically generated Fact "DiffIntrEquality"
// which the parser does not know about, and thus complains, which can be
// safely ignored.
lemma Diff_test:
  all-traces
  "
  not( Ex #i. DiffIntrEquality() @ i)
  "

//this axiom eliminates any communication on the RHS!
axiom test [right]:
  " /* It cannot be that a  */
    not(
      Ex k #j.
        K(k) @ #j
    )
  "

/* axiom test2:
  " /* It cannot be that a  */
    not(
      Ex k #j.
        K(k) @ #j
    )
  " */

end
