theory minimal_predicates begin

builtins: multiset

predicates: Smaller(x,y) <=> Ex z. x + z = y, Equal(x,y) <=> All z. A(z)@_now =>  (x=z) & (y=z)

rule A:
  [In(x), In(y)] --[ _restrict(Smaller(x,y)), A(), B('1','1'+'1')]-> [ X('A')]

lemma one_smaller_two:
    "All x y #i. B(x,y)@i ==> Smaller(x,y)"

/* lemma equal: */
/*     "All x y. Equal(y,x)" */

end

