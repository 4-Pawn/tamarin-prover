theory LAK06_UK_weak begin

// Function signature and definition of the equational theory E

builtins: multiset, xor
functions: fst/1, h/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2

rule (modulo E) setup:
   [ Fr( ~k1 ), Fr( ~k2 ) ]
  --[ OnlyOnce( 'setup' ), Create( ~k1 ), Create( ~k2 ) ]->
   [
   TagRun( ~k1, 'learning' ), TagRun( ~k2, 'learning' ),
   TagRun( diff(~k1, ~k2), 'guessing' )
   ]

rule (modulo E) initiatereader:
   [ ReaderRun( ~k, phase ), Fr( ~r0 ) ]
  --[ Phase( phase ) ]->
   [ ReaderState1( ~k, ~r0, phase ), Out( ~r0 ) ]

rule (modulo E) tag1:
   [ TagRun( ~k, phase ), Fr( ~r1 ), In( r0 ) ]
  --[ Running( <'R', 'T', ~k, r0, ~r1> ), Phase( phase ) ]->
   [ TagState1( ~k, ~r1, r0, phase ), Out( <~r1, h((~k⊕~r1⊕r0))> ) ]

rule (modulo E) acceptreader:
   [ ReaderState1( ~k, ~r0, phase ), In( <r1, h((~k⊕~r0⊕r1))> ) ]
  --[
  Commit( <'R', 'T', ~k, ~r0, r1> ),
  Running( <'T', 'R', ~k, ~r0, r1> ), Phase( phase )
  ]->
   [ Out( h((~k⊕~r0⊕h((~k⊕~r0⊕r1)))) ) ]

rule (modulo E) accepttag:
   [ TagState1( ~k, ~r1, r0, phase ), In( h((~k⊕r0⊕h((~k⊕~r1⊕r0)))) )
   ]
  --[ Commit( <'T', 'R', ~k, r0, ~r1> ), FinTag( ), Phase( phase )
  ]->
   [ ]

restriction onylOnce [right]:
  "∀ x #i1 #i2.
    ((OnlyOnce( x ) @ #i1) ∧ (OnlyOnce( x ) @ #i2)) ⇒ (#i1 = #i2)"
  // safety formula

restriction onylOnce [left]:
  "∀ x #i1 #i2.
    ((OnlyOnce( x ) @ #i1) ∧ (OnlyOnce( x ) @ #i2)) ⇒ (#i1 = #i2)"
  // safety formula

lemma executable [right]:
  exists-trace
  "(∃ #i. FinTag( ) @ #i) ∧
   (∀ x #i1 #i2.
     ((OnlyOnce( x ) @ #i1) ∧ (OnlyOnce( x ) @ #i2)) ⇒ (#i1 = #i2))"
/*
guarded formula characterizing all satisfying traces:
"(∃ #i. (FinTag( ) @ #i)) ∧
 (∀ x #i1 #i2.
   (OnlyOnce( x ) @ #i1) ∧ (OnlyOnce( x ) @ #i2) ⇒ #i1 = #i2)"
*/
by sorry

lemma executable [left]:
  exists-trace
  "(∃ #i. FinTag( ) @ #i) ∧
   (∀ x #i1 #i2.
     ((OnlyOnce( x ) @ #i1) ∧ (OnlyOnce( x ) @ #i2)) ⇒ (#i1 = #i2))"
/*
guarded formula characterizing all satisfying traces:
"(∃ #i. (FinTag( ) @ #i)) ∧
 (∀ x #i1 #i2.
   (OnlyOnce( x ) @ #i1) ∧ (OnlyOnce( x ) @ #i2) ⇒ #i1 = #i2)"
*/
by sorry

lemma helpingSecrecy [right, reuse]:
  all-traces "∀ k #i. (Create( k ) @ #i) ⇒ (¬(∃ #j. K( k ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ k #i. (Create( k ) @ #i) ∧ ∃ #j. (K( k ) @ #j)"
*/
by sorry

lemma helpingSecrecy [left, reuse]:
  all-traces "∀ k #i. (Create( k ) @ #i) ⇒ (¬(∃ #j. K( k ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ k #i. (Create( k ) @ #i) ∧ ∃ #j. (K( k ) @ #j)"
*/
by sorry

/* All well-formedness checks were successful. */

diffLemma Observational_equivalence:
rule-equivalence
  case Rule_Destrd_0_fst
  by sorry
next
  case Rule_Destrd_0_snd
  by sorry
next
  case Rule_Destrd_union
  by sorry
next
  case Rule_Destrd_xor
  by sorry
next
  case Rule_Equality
  by sorry
next
  case Rule_Send
  by sorry
next
  case Rule_acceptreader
  by sorry
next
  case Rule_accepttag
  backward-search
    case LHS
    step( simplify )
    step( solve( TagState1( ~k, ~r1, r0, phase ) ▶₀ #i ) )
      case tag1_case_1
      step( solve( !KU( h(z) ) @ #vk ) )
        case c_h
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KD( (~r1⊕~z⊕h(~z)) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_03
          step( solve( !KD( (~z⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KD( (~r1⊕~z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_06
          step( solve( !KU( ~r1 ) @ #vk.2 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_09
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~r1⊕h(zero)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_13
          step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_18
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (x⊕h((~r1⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_21
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_22
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~k⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KD( (~k⊕~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_43
          step( solve( !KD( (~k⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_44
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_45
          step( solve( !KD( (~k⊕~r1⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_46
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_47
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_48
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_49
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_50
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_51
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_52
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_53
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_54
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_55
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_56
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_57
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_58
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_59
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_60
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_61
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_62
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_63
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_64
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_65
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_66
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_67
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_68
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_69
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_70
          step( solve( !KD( (~r1⊕z⊕h(z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_71
          step( solve( !KD( (z⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_72
          step( solve( !KD( (~r1⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_73
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_74
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_1
        by step( solve( splitEqs(0) ) )
      next
        case tag1_case_2
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_001
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_002
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_003
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_004
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_005
            by step( solve( !KU( ~k2 ) @ #vk.2 ) )
          next
            case split_case_006
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_007
            step( solve( !KD( (~k2⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_008
            step( solve( !KD( (~k⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_009
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_010
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_011
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_012
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_013
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_014
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_015
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_016
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_017
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_018
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_019
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_020
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_021
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_022
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_023
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_024
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_025
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_026
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_027
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_028
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_029
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_030
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_031
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_032
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_033
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_034
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_035
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_036
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_037
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_038
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_039
            by step( solve( !KU( ~k2 ) @ #vk.5 ) )
          next
            case split_case_040
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_041
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_042
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_043
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_044
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_045
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_046
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_047
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_048
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_049
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_050
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_051
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_052
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_053
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_054
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_055
            step( solve( !KD( (~k⊕x⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_056
            step( solve( !KD( (x⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_057
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_058
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_059
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_060
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_061
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_062
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_063
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_064
            step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_065
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_066
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_067
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_068
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_069
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_070
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_071
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_072
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_073
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_074
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_075
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_076
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_077
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_078
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_079
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_080
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_081
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_082
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_083
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_084
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_085
            step( solve( !KD( (~k⊕~k2⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_086
            step( solve( !KD( (~k2⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_087
            step( solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_088
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_089
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_090
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_091
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_092
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_093
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_094
            step( solve( !KD( (~k⊕~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_095
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_096
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_097
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_098
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_099
            by step( solve( !KU( ~k2 ) @ #vk.6 ) )
          next
            case split_case_100
            step( solve( !KD( (~k⊕~k2⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_101
            step( solve( !KD( (~k2⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_102
            step( solve( !KD( (~k⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_103
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_104
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_105
            step( solve( !KD( (~k⊕~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_106
            step( solve( !KD( (~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_107
            step( solve( !KD( (~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_108
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_109
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_110
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_111
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_112
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_113
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_114
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_115
            step( solve( !KD( (~k⊕~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_116
            step( solve( !KD( (~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_117
            step( solve( !KD( (~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_118
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_119
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_120
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_121
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_122
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_123
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_124
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_125
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_126
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_127
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_128
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_129
            step( solve( !KD( (~k⊕~k2⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_130
            step( solve( !KD( (~k2⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_131
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_132
            step( solve( !KD( (~k⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_133
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_134
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_135
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_136
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_137
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_138
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_139
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_140
            step( solve( !KD( (~k⊕~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_141
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_142
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_143
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_144
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_145
            step( solve( !KD( (~k⊕~k2⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_146
            step( solve( !KD( (~k2⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_147
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_148
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_149
            step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_150
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_151
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~x ) @ #vk.3 ) )
            case fresh
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_1
            step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.6, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case tag1_case_2
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_3
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.7, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_12
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_13
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_3
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_01
            step( solve( !KU( ~r0 ) @ #vk.1 ) )
              case tag1
              step( solve( !KU( h((~k⊕~r0⊕~r1)) ) @ #vk.2 ) )
                case c_h_case_1
                step( solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.3 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                  qed
                qed
              next
                case c_h_case_2
                step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.4, 0) ) )
                  qed
                qed
              next
                case c_h_case_3
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_4
                step( solve( !KD( (~k⊕~r0) ) ▶₀ #vk.4 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.4, 0) ) )
                  qed
                qed
              next
                case c_h_case_5
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_1
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_2
                step( solve( splitEqs(6) ) )
                  case split_case_01
                  step( solve( !KD( (~k⊕~k2⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.3 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.3, 0) ) )
                    qed
                  qed
                next
                  case split_case_02
                  step( solve( !KD( (~k2⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_03
                  step( solve( !KD( (~k⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_04
                  step( solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_05
                  step( solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_06
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_07
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_08
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_09
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_10
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_11
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_12
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_13
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_14
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_15
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_16
                  step( solve( !KD( (~k⊕~k2⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_17
                  step( solve( !KD( (~k2⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_18
                  step( solve( !KD( (~k2⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_19
                  step( solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_20
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_21
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_22
                  step( solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_23
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_24
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_25
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_26
                  step( solve( !KD( (~k⊕~k2⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_27
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_28
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_29
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_30
                  step( solve( !KD( (~k⊕~k2⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_31
                  step( solve( !KD( (~k2⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_32
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_33
                  step( solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_34
                  step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_35
                  step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_36
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_37
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_38
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_39
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_40
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_41
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_42
                  step( solve( !KD( (~k2⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_43
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_44
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_45
                  step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_46
                  step( solve( !KD( (~k⊕~k2⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_47
                  step( solve( !KD( (~k2⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_48
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_49
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_50
                  step( solve( !KD( (~k⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_51
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_52
                  by step( contradiction /* cyclic */ )
                qed
              qed
            qed
          next
            case split_case_02
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_03
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_04
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_05
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_06
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          next
            case split_case_07
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_08
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_09
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_10
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              step( solve( !KU( h((~k⊕~r1⊕x⊕~r1.1)) ) @ #vk.5 ) )
                case c_h_case_01
                step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.5, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.5, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.5, 0) ) )
                  qed
                qed
              next
                case c_h_case_02
                step( solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_03
                step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_04
                step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_05
                step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_06
                step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_07
                step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_08
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_09
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_10
                step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_11
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_12
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_13
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_01
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_02
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_03
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_04
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_05
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_06
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_07
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_08
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_09
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_10
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_11
                step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.5 ) )
                  case acceptreader
                  by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                  qed
                qed
              next
                case tag1_case_12
                step( solve( splitEqs(6) ) )
                  case split_case_0001
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0002
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0003
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0004
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0005
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0006
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0007
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0008
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0009
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0010
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0011
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0012
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0013
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0014
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0015
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0016
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0017
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0018
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0019
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0020
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0021
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0022
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0023
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0024
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0025
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0026
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0027
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0028
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0029
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0030
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0031
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0032
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0033
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0034
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0035
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0036
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0037
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0038
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0039
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0040
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0041
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0042
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0043
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0044
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0045
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0046
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0047
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0048
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0049
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0050
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0051
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0052
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0053
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0054
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0055
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0056
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0057
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0058
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0059
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0060
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0061
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0062
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0063
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0064
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0065
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0066
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0067
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0068
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0069
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0070
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0071
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0072
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0073
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0074
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0075
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0076
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0077
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0078
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0079
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0080
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0081
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0082
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0083
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0084
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0085
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0086
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0087
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0088
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0089
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0090
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0091
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0092
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0093
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0094
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0095
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0096
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0097
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0098
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0099
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0100
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0101
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0102
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0103
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0104
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0105
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0106
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0107
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0108
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0109
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0110
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0111
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0112
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0113
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0114
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0115
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0116
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0117
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0118
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0119
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0120
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0121
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0122
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0123
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0124
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0125
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0126
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0127
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0128
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0129
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0130
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0131
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0132
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0133
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0134
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0135
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0136
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0137
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0138
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0139
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0140
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0141
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0142
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0143
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0144
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0145
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0146
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0147
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0148
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0149
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0150
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0151
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0152
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0153
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0154
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0155
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0156
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0157
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0158
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0159
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0160
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0161
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0162
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0163
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0164
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0165
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0166
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0167
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0168
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0169
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0170
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0171
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0172
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0173
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0174
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0175
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0176
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0177
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0178
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0179
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0180
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0181
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0182
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0183
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0184
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0185
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0186
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0187
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0188
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0189
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0190
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0191
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0192
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0193
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0194
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0195
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0196
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0197
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0198
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0199
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0200
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0201
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0202
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0203
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0204
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0205
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0206
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0207
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0208
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0209
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0210
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0211
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0212
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0213
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0214
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0215
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0216
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0217
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0218
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0219
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0220
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0221
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0222
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0223
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0224
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0225
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0226
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0227
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0228
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0229
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0230
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0231
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0232
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0233
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0234
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0235
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0236
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0237
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0238
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0239
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0240
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0241
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0242
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0243
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0244
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0245
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0246
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0247
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0248
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0249
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0250
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0251
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0252
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0253
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0254
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0255
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0256
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0257
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0258
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0259
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0260
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0261
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0262
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0263
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0264
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0265
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0266
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0267
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0268
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0269
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0270
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0271
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0272
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0273
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0274
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0275
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0276
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0277
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0278
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0279
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0280
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0281
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0282
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0283
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0284
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0285
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0286
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0287
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0288
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0289
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0290
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0291
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0292
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0293
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0294
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0295
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0296
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0297
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0298
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0299
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0300
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0301
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0302
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0303
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0304
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0305
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0306
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0307
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0308
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0309
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0310
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0311
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0312
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0313
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0314
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0315
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0316
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0317
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0318
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0319
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0320
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0321
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0322
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0323
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0324
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0325
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0326
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0327
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0328
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0329
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0330
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0331
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0332
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0333
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0334
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0335
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0336
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0337
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0338
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0339
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0340
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0341
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0342
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0343
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0344
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0345
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0346
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0347
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0348
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0349
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0350
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0351
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0352
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0353
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0354
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0355
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0356
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0357
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0358
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0359
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0360
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0361
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0362
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0363
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0364
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0365
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0366
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0367
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0368
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0369
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0370
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0371
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0372
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0373
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0374
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0375
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0376
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0377
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0378
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0379
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0380
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0381
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0382
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0383
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0384
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0385
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0386
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0387
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0388
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0389
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0390
                  step( solve( !KD( (~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0391
                  step( solve( !KD( (~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0392
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0393
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0394
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0395
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0396
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0397
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0398
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0399
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0400
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0401
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0402
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0403
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0404
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0405
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0406
                  step( solve( !KD( (~r1⊕x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0407
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0408
                  step( solve( !KD( (~k2⊕x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0409
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0410
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0411
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0412
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0413
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0414
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0415
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0416
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0417
                  step( solve( !KD( (~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0418
                  step( solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0419
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0420
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0421
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0422
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0423
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0424
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0425
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0426
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0427
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0428
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0429
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0430
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0431
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0432
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0433
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0434
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0435
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0436
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0437
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0438
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0439
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0440
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0441
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0442
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0443
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0444
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0445
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0446
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0447
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0448
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0449
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0450
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0451
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0452
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0453
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0454
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0455
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0456
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0457
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0458
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0459
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0460
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0461
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0462
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0463
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0464
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0465
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0466
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0467
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0468
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0469
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0470
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0471
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0472
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0473
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0474
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0475
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0476
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0477
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0478
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0479
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0480
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0481
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0482
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0483
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0484
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0485
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0486
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0487
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0488
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0489
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0490
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0491
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0492
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0493
                  step( solve( !KD( (~k2⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0494
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0495
                  step( solve( !KD( (~k2⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0496
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0497
                  step( solve( !KD( (~k2⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0498
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0499
                  step( solve( !KD( (~k2⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0500
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0501
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0502
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0503
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0504
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0505
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0506
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0507
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0508
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0509
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0510
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0511
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0512
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0513
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0514
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0515
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0516
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0517
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0518
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0519
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0520
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0521
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0522
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0523
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0524
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0525
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0526
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0527
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0528
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0529
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0530
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0531
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0532
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0533
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0534
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0535
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0536
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0537
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0538
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0539
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0540
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0541
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0542
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0543
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0544
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0545
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0546
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0547
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0548
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0549
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0550
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0551
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0552
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0553
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0554
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0555
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0556
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0557
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0558
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0559
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0560
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0561
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0562
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0563
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0564
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0565
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0566
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0567
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0568
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0569
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0570
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0571
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0572
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0573
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0574
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0575
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0576
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0577
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0578
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0579
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0580
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0581
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0582
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0583
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0584
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0585
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0586
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0587
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0588
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0589
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0590
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0591
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0592
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0593
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0594
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0595
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0596
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0597
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0598
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0599
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0600
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0601
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0602
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0603
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0604
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0605
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0606
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0607
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0608
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0609
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0610
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0611
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0612
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0613
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0614
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0615
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0616
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0617
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0618
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0619
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0620
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0621
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0622
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0623
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0624
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0625
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0626
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0627
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0628
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0629
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0630
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0631
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0632
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0633
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0634
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0635
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0636
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0637
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0638
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0639
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0640
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0641
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0642
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0643
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0644
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0645
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0646
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0647
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0648
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0649
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0650
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0651
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0652
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0653
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0654
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0655
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0656
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0657
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0658
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0659
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0660
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0661
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0662
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0663
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0664
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0665
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0666
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0667
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0668
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0669
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0670
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0671
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0672
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0673
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0674
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0675
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0676
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0677
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0678
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0679
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0680
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0681
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0682
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0683
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0684
                  step( solve( !KD( (~k2⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0685
                  step( solve( !KD( (~k2⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0686
                  step( solve( !KD( (~k2⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0687
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0688
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0689
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0690
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0691
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0692
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0693
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0694
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0695
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0696
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0697
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0698
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0699
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0700
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0701
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0702
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0703
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0704
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0705
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0706
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0707
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0708
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0709
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0710
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0711
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0712
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0713
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0714
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0715
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0716
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0717
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0718
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0719
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0720
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0721
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0722
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0723
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0724
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0725
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0726
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0727
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0728
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0729
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0730
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0731
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0732
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0733
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0734
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0735
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0736
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0737
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0738
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0739
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0740
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0741
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0742
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0743
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0744
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0745
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0746
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0747
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0748
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0749
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0750
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0751
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0752
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0753
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0754
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0755
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0756
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0757
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0758
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0759
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0760
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0761
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0762
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0763
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0764
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0765
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0766
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0767
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0768
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0769
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0770
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0771
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0772
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0773
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0774
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0775
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0776
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0777
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0778
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0779
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0780
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0781
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0782
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0783
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0784
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0785
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0786
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0787
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0788
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0789
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0790
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0791
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0792
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0793
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0794
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0795
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0796
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0797
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0798
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0799
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0800
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0801
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0802
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0803
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0804
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0805
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0806
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0807
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0808
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0809
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0810
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0811
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0812
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0813
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0814
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0815
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0816
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0817
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0818
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0819
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0820
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0821
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0822
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0823
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0824
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0825
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0826
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0827
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0828
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0829
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0830
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0831
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0832
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0833
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0834
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0835
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0836
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0837
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0838
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0839
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0840
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0841
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0842
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0843
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0844
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0845
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0846
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0847
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0848
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0849
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0850
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0851
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0852
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0853
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0854
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0855
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0856
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0857
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0858
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0859
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0860
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0861
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0862
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0863
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0864
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0865
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0866
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0867
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0868
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0869
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0870
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0871
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0872
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0873
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0874
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0875
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0876
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0877
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0878
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0879
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0880
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0881
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0882
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0883
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0884
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0885
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0886
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0887
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0888
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0889
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0890
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0891
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0892
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0893
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0894
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0895
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0896
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0897
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0898
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0899
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0900
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0901
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0902
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0903
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0904
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0905
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0906
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0907
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0908
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0909
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0910
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0911
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0912
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0913
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0914
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0915
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0916
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0917
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0918
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0919
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0920
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0921
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0922
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0923
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0924
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0925
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0926
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0927
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0928
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0929
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0930
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0931
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0932
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0933
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0934
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0935
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0936
                  step( solve( !KD( (~k⊕~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0937
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0938
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0939
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0940
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0941
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0942
                  step( solve( !KD( (~k⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0943
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0944
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0945
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0946
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0947
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0948
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0949
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0950
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0951
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0952
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0953
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0954
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0955
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0956
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0957
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0958
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0959
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0960
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0961
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0962
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0963
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0964
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0965
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0966
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0967
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0968
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0969
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0970
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0971
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0972
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0973
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0974
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0975
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0976
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0977
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0978
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0979
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0980
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0981
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0982
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0983
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0984
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0985
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0986
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0987
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0988
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0989
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0990
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0991
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0992
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0993
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0994
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0995
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0996
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0997
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0998
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0999
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1000
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1001
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1002
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1003
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1004
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1005
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1006
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1007
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1008
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1009
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1010
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1011
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1012
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1013
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1014
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1015
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1016
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1017
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1018
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1019
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1020
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1021
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1022
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1023
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1024
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1025
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1026
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1027
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1028
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1029
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1030
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1031
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1032
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1033
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1034
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1035
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1036
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1037
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1038
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1039
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1040
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1041
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1042
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1043
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1044
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1045
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1046
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1047
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1048
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1049
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1050
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1051
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1052
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1053
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1054
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1055
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1056
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1057
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1058
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1059
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1060
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1061
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1062
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1063
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1064
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1065
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1066
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1067
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1068
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1069
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1070
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1071
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1072
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1073
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1074
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1075
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1076
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1077
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1078
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1079
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1080
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1081
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1082
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1083
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1084
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1085
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1086
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1087
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1088
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1089
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1090
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1091
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1092
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1093
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1094
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1095
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1096
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1097
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1098
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1099
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1100
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1101
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1102
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1103
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1104
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1105
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1106
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1107
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1108
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1109
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1110
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1111
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1112
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1113
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1114
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1115
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1116
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1117
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1118
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1119
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1120
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1121
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1122
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1123
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1124
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1125
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1126
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1127
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1128
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1129
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1130
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1131
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1132
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1133
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1134
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1135
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1136
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1137
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1138
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1139
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1140
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1141
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1142
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1143
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1144
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1145
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1146
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1147
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1148
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1149
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1150
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1151
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1152
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1153
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1154
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1155
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1156
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1157
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1158
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1159
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1160
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1161
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1162
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1163
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1164
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1165
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1166
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1167
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1168
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1169
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1170
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1171
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1172
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1173
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1174
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_1175
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1176
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1177
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1178
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1179
                  step( solve( !KD( (~k⊕~k2⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1180
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1181
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1182
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1183
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1184
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1185
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1186
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1187
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1188
                  by step( contradiction /* cyclic */ )
                qed
              qed
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1.1⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_13
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_14
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_21
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_22
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~x⊕x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (x⊕x.1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (~x⊕x.1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (~x.1⊕x.2) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      qed
    next
      case tag1_case_2
      step( solve( !KU( h(z) ) @ #vk ) )
        case c_h
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KD( (~r1⊕~z⊕h(~z)) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_03
          step( solve( !KD( (~z⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KD( (~r1⊕~z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_06
          step( solve( !KU( ~r1 ) @ #vk.2 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_09
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~r1⊕h(zero)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_13
          step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_18
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (x⊕h((~r1⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_21
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_22
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~k⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KD( (~k⊕~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_43
          step( solve( !KD( (~k⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_44
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_45
          step( solve( !KD( (~k⊕~r1⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_46
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_47
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_48
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_49
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_50
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_51
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_52
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_53
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_54
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_55
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_56
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_57
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_58
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_59
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_60
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_61
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_62
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_63
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_64
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_65
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_66
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_67
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_68
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_69
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_70
          step( solve( !KD( (~r1⊕z⊕h(z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_71
          step( solve( !KD( (z⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_72
          step( solve( !KD( (~r1⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_73
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_74
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_1
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_001
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_002
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_003
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_004
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_005
            by step( solve( !KU( ~k1 ) @ #vk.2 ) )
          next
            case split_case_006
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_007
            step( solve( !KD( (~k1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_008
            step( solve( !KD( (~k⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_009
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_010
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_011
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_012
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_013
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_014
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_015
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_016
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_017
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_018
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_019
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_020
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_021
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_022
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_023
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_024
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_025
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_026
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_027
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_028
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_029
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_030
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_031
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_032
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_033
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_034
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_035
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_036
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_037
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_038
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_039
            by step( solve( !KU( ~k1 ) @ #vk.5 ) )
          next
            case split_case_040
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_041
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_042
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_043
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_044
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_045
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_046
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_047
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_048
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_049
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_050
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_051
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_052
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_053
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_054
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_055
            step( solve( !KD( (~k⊕x⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_056
            step( solve( !KD( (x⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_057
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_058
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_059
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_060
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_061
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_062
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_063
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_064
            step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_065
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_066
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_067
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_068
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_069
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_070
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_071
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_072
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_073
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_074
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_075
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_076
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_077
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_078
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_079
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_080
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_081
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_082
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_083
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_084
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_085
            step( solve( !KD( (~k⊕~k1⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_086
            step( solve( !KD( (~k1⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_087
            step( solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_088
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_089
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_090
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_091
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_092
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_093
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_094
            step( solve( !KD( (~k⊕~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_095
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_096
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_097
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_098
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_099
            by step( solve( !KU( ~k1 ) @ #vk.6 ) )
          next
            case split_case_100
            step( solve( !KD( (~k⊕~k1⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_101
            step( solve( !KD( (~k1⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_102
            step( solve( !KD( (~k⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_103
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_104
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_105
            step( solve( !KD( (~k⊕~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_106
            step( solve( !KD( (~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_107
            step( solve( !KD( (~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_108
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_109
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_110
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_111
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_112
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_113
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_114
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_115
            step( solve( !KD( (~k⊕~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_116
            step( solve( !KD( (~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_117
            step( solve( !KD( (~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_118
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_119
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_120
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_121
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_122
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_123
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_124
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_125
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_126
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_127
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_128
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_129
            step( solve( !KD( (~k⊕~k1⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_130
            step( solve( !KD( (~k1⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_131
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_132
            step( solve( !KD( (~k⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_133
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_134
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_135
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_136
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_137
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_138
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_139
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_140
            step( solve( !KD( (~k⊕~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_141
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_142
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_143
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_144
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_145
            step( solve( !KD( (~k⊕~k1⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_146
            step( solve( !KD( (~k1⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_147
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_148
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_149
            step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_150
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_151
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~x ) @ #vk.3 ) )
            case fresh
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_1
            step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.6, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case tag1_case_2
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_3
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.7, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_12
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_13
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_2
        by step( solve( splitEqs(0) ) )
      next
        case tag1_case_3
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_001
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_002
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_003
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_004
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_005
            by step( solve( !KU( ~k1 ) @ #vk.2 ) )
          next
            case split_case_006
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_007
            step( solve( !KD( (~k1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_008
            step( solve( !KD( (~k⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_009
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_010
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_011
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_012
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_013
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_014
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_015
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_016
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_017
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_018
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_019
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_020
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_021
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_022
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_023
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_024
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_025
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_026
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_027
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_028
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_029
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_030
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_031
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_032
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_033
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_034
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_035
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_036
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_037
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_038
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_039
            by step( solve( !KU( ~k1 ) @ #vk.5 ) )
          next
            case split_case_040
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_041
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_042
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_043
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_044
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_045
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_046
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_047
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_048
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_049
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_050
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_051
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_052
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_053
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_054
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_055
            step( solve( !KD( (~k⊕x⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_056
            step( solve( !KD( (x⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_057
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_058
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_059
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_060
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_061
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_062
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_063
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_064
            step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_065
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_066
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_067
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_068
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_069
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_070
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_071
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_072
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_073
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_074
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_075
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_076
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_077
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_078
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_079
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_080
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_081
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_082
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_083
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_084
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_085
            step( solve( !KD( (~k⊕~k1⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_086
            step( solve( !KD( (~k1⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_087
            step( solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_088
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_089
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_090
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_091
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_092
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_093
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_094
            step( solve( !KD( (~k⊕~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_095
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_096
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_097
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_098
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_099
            by step( solve( !KU( ~k1 ) @ #vk.6 ) )
          next
            case split_case_100
            step( solve( !KD( (~k⊕~k1⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_101
            step( solve( !KD( (~k1⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_102
            step( solve( !KD( (~k⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_103
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_104
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_105
            step( solve( !KD( (~k⊕~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_106
            step( solve( !KD( (~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_107
            step( solve( !KD( (~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_108
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_109
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_110
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_111
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_112
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_113
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_114
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_115
            step( solve( !KD( (~k⊕~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_116
            step( solve( !KD( (~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_117
            step( solve( !KD( (~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_118
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_119
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_120
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_121
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_122
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_123
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_124
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_125
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_126
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_127
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_128
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_129
            step( solve( !KD( (~k⊕~k1⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_130
            step( solve( !KD( (~k1⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_131
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_132
            step( solve( !KD( (~k⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_133
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_134
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_135
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_136
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_137
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_138
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_139
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_140
            step( solve( !KD( (~k⊕~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_141
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_142
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_143
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_144
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_145
            step( solve( !KD( (~k⊕~k1⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_146
            step( solve( !KD( (~k1⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_147
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_148
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_149
            step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_150
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_151
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~x ) @ #vk.3 ) )
            case fresh
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_1
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.7, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_2
            step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.6, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case tag1_case_3
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_12
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_13
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      qed
    next
      case tag1_case_3
      step( solve( !KU( h(z) ) @ #vk ) )
        case c_h
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KD( (~r1⊕~z⊕h(~z)) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_03
          step( solve( !KD( (~z⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KD( (~r1⊕~z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_06
          step( solve( !KU( ~r1 ) @ #vk.2 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_09
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~r1⊕h(zero)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_13
          step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_18
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (x⊕h((~r1⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_21
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_22
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~k⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KD( (~k⊕~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_43
          step( solve( !KD( (~k⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_44
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_45
          step( solve( !KD( (~k⊕~r1⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_46
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_47
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_48
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_49
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_50
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_51
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_52
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_53
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_54
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_55
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_56
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_57
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_58
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_59
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_60
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_61
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_62
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_63
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_64
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_65
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_66
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_67
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_68
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_69
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_70
          step( solve( !KD( (~r1⊕z⊕h(z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_71
          step( solve( !KD( (z⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_72
          step( solve( !KD( (~r1⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_73
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_74
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_1
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_01
            step( solve( !KU( ~r0 ) @ #vk.1 ) )
              case tag1
              step( solve( !KU( h((~k⊕~r0⊕~r1)) ) @ #vk.2 ) )
                case c_h_case_1
                step( solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.3 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                  qed
                qed
              next
                case c_h_case_2
                step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.4, 0) ) )
                  qed
                qed
              next
                case c_h_case_3
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_4
                step( solve( !KD( (~k⊕~r0) ) ▶₀ #vk.4 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.4, 0) ) )
                  qed
                qed
              next
                case c_h_case_5
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_1
                step( solve( splitEqs(6) ) )
                  case split_case_01
                  step( solve( !KD( (~k⊕~k2⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.3 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.3, 0) ) )
                    qed
                  qed
                next
                  case split_case_02
                  step( solve( !KD( (~k2⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_03
                  step( solve( !KD( (~k⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_04
                  step( solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_05
                  step( solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_06
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_07
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_08
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_09
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_10
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_11
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_12
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_13
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_14
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_15
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_16
                  step( solve( !KD( (~k⊕~k2⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_17
                  step( solve( !KD( (~k2⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_18
                  step( solve( !KD( (~k2⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_19
                  step( solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_20
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_21
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_22
                  step( solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_23
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_24
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_25
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_26
                  step( solve( !KD( (~k⊕~k2⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_27
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_28
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_29
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_30
                  step( solve( !KD( (~k⊕~k2⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_31
                  step( solve( !KD( (~k2⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_32
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_33
                  step( solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_34
                  step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_35
                  step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_36
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_37
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_38
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_39
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_40
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_41
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_42
                  step( solve( !KD( (~k2⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_43
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_44
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_45
                  step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_46
                  step( solve( !KD( (~k⊕~k2⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_47
                  step( solve( !KD( (~k2⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_48
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_49
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_50
                  step( solve( !KD( (~k⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_51
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_52
                  by step( contradiction /* cyclic */ )
                qed
              next
                case tag1_case_2
                by step( contradiction /* cyclic */ )
              qed
            qed
          next
            case split_case_02
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_03
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_04
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_05
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_06
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          next
            case split_case_07
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_08
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_09
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_10
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              step( solve( !KU( h((~k⊕~r1⊕x⊕~r1.1)) ) @ #vk.5 ) )
                case c_h_case_01
                step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.5, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.5, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.5, 0) ) )
                  qed
                qed
              next
                case c_h_case_02
                step( solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_03
                step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_04
                step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_05
                step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_06
                step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_07
                step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_08
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_09
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_10
                step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_11
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_12
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_13
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_01
                step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.5 ) )
                  case acceptreader
                  by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                  qed
                qed
              next
                case tag1_case_02
                step( solve( splitEqs(6) ) )
                  case split_case_0001
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0002
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0003
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0004
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0005
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0006
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0007
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0008
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0009
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0010
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0011
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0012
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0013
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0014
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0015
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0016
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0017
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0018
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0019
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0020
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0021
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0022
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0023
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0024
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0025
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0026
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0027
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0028
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0029
                  step( solve( !KD( (~k2⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0030
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0031
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0032
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0033
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0034
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0035
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0036
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0037
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0038
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0039
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0040
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0041
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0042
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0043
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0044
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0045
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0046
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0047
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0048
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0049
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0050
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0051
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0052
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0053
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0054
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0055
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0056
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0057
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0058
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0059
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0060
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0061
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0062
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0063
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0064
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0065
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0066
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0067
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0068
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0069
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0070
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0071
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0072
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0073
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0074
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0075
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0076
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0077
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0078
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0079
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0080
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0081
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0082
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0083
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0084
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0085
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0086
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0087
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0088
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0089
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0090
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0091
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0092
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0093
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0094
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0095
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0096
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0097
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0098
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0099
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0100
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0101
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0102
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0103
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0104
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0105
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0106
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0107
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0108
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0109
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0110
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0111
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0112
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0113
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0114
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0115
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0116
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0117
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0118
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0119
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0120
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0121
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0122
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0123
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0124
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0125
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0126
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0127
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0128
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0129
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0130
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0131
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0132
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0133
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0134
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0135
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0136
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0137
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0138
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0139
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0140
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0141
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0142
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0143
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0144
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0145
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0146
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0147
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0148
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0149
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0150
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0151
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0152
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0153
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0154
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0155
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0156
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0157
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0158
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0159
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0160
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0161
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0162
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0163
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0164
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0165
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0166
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0167
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0168
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0169
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0170
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0171
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0172
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0173
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0174
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0175
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0176
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0177
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0178
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0179
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0180
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0181
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0182
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0183
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0184
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0185
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0186
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0187
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0188
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0189
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0190
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0191
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0192
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0193
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0194
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0195
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0196
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0197
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0198
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0199
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0200
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0201
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0202
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0203
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0204
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0205
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0206
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0207
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0208
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0209
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0210
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0211
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0212
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0213
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0214
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0215
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0216
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0217
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0218
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0219
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0220
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0221
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0222
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0223
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0224
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0225
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0226
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0227
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0228
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0229
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0230
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0231
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0232
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0233
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0234
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0235
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0236
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0237
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0238
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0239
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0240
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0241
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0242
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0243
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0244
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0245
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0246
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0247
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0248
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0249
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0250
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0251
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0252
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0253
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0254
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0255
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0256
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0257
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0258
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0259
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0260
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0261
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0262
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0263
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0264
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0265
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0266
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0267
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0268
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0269
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0270
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0271
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0272
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0273
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0274
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0275
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0276
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0277
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0278
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0279
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0280
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0281
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0282
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0283
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0284
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0285
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0286
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0287
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0288
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0289
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0290
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0291
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0292
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0293
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0294
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0295
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0296
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0297
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0298
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0299
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0300
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0301
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0302
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0303
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0304
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0305
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0306
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0307
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0308
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0309
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0310
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0311
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0312
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0313
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0314
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0315
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0316
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0317
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0318
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0319
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0320
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0321
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0322
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0323
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0324
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0325
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0326
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0327
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0328
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0329
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0330
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0331
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0332
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0333
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0334
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0335
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0336
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0337
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0338
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0339
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0340
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0341
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0342
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0343
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0344
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0345
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0346
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0347
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0348
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0349
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0350
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0351
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0352
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0353
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0354
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0355
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0356
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0357
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0358
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0359
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0360
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0361
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0362
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0363
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0364
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0365
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0366
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0367
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0368
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0369
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0370
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0371
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0372
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0373
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0374
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0375
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0376
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0377
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0378
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0379
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0380
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0381
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0382
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0383
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0384
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0385
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0386
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0387
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0388
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0389
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0390
                  step( solve( !KD( (~k2⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0391
                  step( solve( !KD( (~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0392
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0393
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0394
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0395
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0396
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0397
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0398
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0399
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0400
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0401
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0402
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0403
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0404
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0405
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0406
                  step( solve( !KD( (~r1⊕x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0407
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0408
                  step( solve( !KD( (~k2⊕x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0409
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0410
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0411
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0412
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0413
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0414
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0415
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0416
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0417
                  step( solve( !KD( (~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0418
                  step( solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0419
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0420
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0421
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0422
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0423
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0424
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0425
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0426
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0427
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0428
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0429
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0430
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0431
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0432
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0433
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0434
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0435
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0436
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0437
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0438
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0439
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0440
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0441
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0442
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0443
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0444
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0445
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0446
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0447
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0448
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0449
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0450
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0451
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0452
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0453
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0454
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0455
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0456
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0457
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0458
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0459
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0460
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0461
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0462
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0463
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0464
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0465
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0466
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0467
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0468
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0469
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0470
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0471
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0472
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0473
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0474
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0475
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0476
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0477
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0478
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0479
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0480
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0481
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0482
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0483
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0484
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0485
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0486
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0487
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0488
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0489
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0490
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0491
                  step( solve( !KD( (~k2⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0492
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0493
                  step( solve( !KD( (~k2⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0494
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0495
                  step( solve( !KD( (~k2⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0496
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0497
                  step( solve( !KD( (~k2⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0498
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0499
                  step( solve( !KD( (~k2⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0500
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0501
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0502
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0503
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0504
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0505
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0506
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0507
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0508
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0509
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0510
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0511
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0512
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0513
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0514
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0515
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0516
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0517
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0518
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0519
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0520
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0521
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0522
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0523
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0524
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0525
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0526
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0527
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0528
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0529
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0530
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0531
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0532
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0533
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0534
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0535
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0536
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0537
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0538
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0539
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0540
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0541
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0542
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0543
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0544
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0545
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0546
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0547
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0548
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0549
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0550
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0551
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0552
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0553
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0554
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0555
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0556
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0557
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0558
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0559
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0560
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0561
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0562
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0563
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0564
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0565
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0566
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0567
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0568
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0569
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0570
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0571
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0572
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0573
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0574
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0575
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0576
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0577
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0578
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0579
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0580
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0581
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0582
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0583
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0584
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0585
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0586
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0587
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0588
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0589
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0590
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0591
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0592
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0593
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0594
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0595
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0596
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0597
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0598
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0599
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0600
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0601
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0602
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0603
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0604
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0605
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0606
                  step( solve( !KD( (~k2⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0607
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0608
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0609
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0610
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0611
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0612
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0613
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0614
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0615
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0616
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0617
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0618
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0619
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0620
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0621
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0622
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0623
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0624
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0625
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0626
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0627
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0628
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0629
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0630
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0631
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0632
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0633
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0634
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0635
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0636
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0637
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0638
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0639
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0640
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0641
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0642
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0643
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0644
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0645
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0646
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0647
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0648
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0649
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0650
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0651
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0652
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0653
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0654
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0655
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0656
                  step( solve( !KD( (~k2⊕x⊕~r1.2⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0657
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0658
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0659
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0660
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0661
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0662
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0663
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0664
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0665
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0666
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0667
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0668
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0669
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0670
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0671
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0672
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0673
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0674
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0675
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0676
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0677
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0678
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0679
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0680
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0681
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0682
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0683
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0684
                  step( solve( !KD( (~k2⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0685
                  step( solve( !KD( (~k2⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0686
                  step( solve( !KD( (~k2⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0687
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0688
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0689
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0690
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0691
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0692
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0693
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0694
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0695
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0696
                  step( solve( !KD( (~k2⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0697
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0698
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0699
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0700
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0701
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0702
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0703
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0704
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0705
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0706
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0707
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0708
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0709
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0710
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0711
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0712
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0713
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0714
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0715
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0716
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0717
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0718
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0719
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0720
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0721
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0722
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0723
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0724
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0725
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0726
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0727
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0728
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0729
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0730
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0731
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0732
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0733
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0734
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0735
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0736
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0737
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0738
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0739
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0740
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0741
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0742
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0743
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0744
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0745
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0746
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0747
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0748
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0749
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0750
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0751
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0752
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0753
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0754
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0755
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0756
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0757
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0758
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0759
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0760
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0761
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0762
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0763
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0764
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0765
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0766
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0767
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0768
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0769
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0770
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0771
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0772
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0773
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0774
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0775
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0776
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0777
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0778
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0779
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0780
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0781
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0782
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0783
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0784
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0785
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0786
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0787
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0788
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0789
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0790
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0791
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0792
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0793
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0794
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0795
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0796
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0797
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0798
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0799
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0800
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0801
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0802
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0803
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0804
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0805
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0806
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0807
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0808
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0809
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0810
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0811
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0812
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0813
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0814
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0815
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0816
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0817
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0818
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0819
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0820
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0821
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0822
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0823
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0824
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0825
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0826
                  step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0827
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0828
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0829
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0830
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0831
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0832
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0833
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0834
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0835
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0836
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0837
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0838
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0839
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0840
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0841
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0842
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0843
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0844
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0845
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0846
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0847
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0848
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0849
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0850
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0851
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0852
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0853
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0854
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0855
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0856
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0857
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0858
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0859
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0860
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0861
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0862
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0863
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0864
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0865
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0866
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0867
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0868
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0869
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0870
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0871
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0872
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0873
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0874
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0875
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0876
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0877
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0878
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0879
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0880
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0881
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0882
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0883
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0884
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0885
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0886
                  step( solve( !KD( (~k2⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0887
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0888
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0889
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0890
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0891
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0892
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0893
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0894
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0895
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0896
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0897
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0898
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0899
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0900
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0901
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0902
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0903
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0904
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0905
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0906
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0907
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0908
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0909
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0910
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0911
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0912
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0913
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0914
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0915
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0916
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0917
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0918
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0919
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0920
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0921
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0922
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0923
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0924
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0925
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0926
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0927
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0928
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0929
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0930
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0931
                  step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0932
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0933
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0934
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0935
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0936
                  step( solve( !KD( (~k⊕~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0937
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0938
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0939
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0940
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0941
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0942
                  step( solve( !KD( (~k⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0943
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0944
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0945
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0946
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0947
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0948
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0949
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0950
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0951
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0952
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0953
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0954
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0955
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0956
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0957
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0958
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0959
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0960
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0961
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0962
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0963
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0964
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0965
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0966
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0967
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0968
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0969
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0970
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0971
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0972
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0973
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0974
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0975
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0976
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0977
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0978
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0979
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0980
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0981
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0982
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0983
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0984
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0985
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0986
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0987
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0988
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0989
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0990
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0991
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0992
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0993
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0994
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0995
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0996
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0997
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0998
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0999
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1000
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1001
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1002
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1003
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1004
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1005
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1006
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1007
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1008
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1009
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1010
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1011
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1012
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1013
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1014
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1015
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1016
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1017
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1018
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1019
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1020
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1021
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1022
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1023
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1024
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1025
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1026
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1027
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1028
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1029
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1030
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1031
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1032
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1033
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1034
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1035
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1036
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1037
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1038
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1039
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1040
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1041
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1042
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1043
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1044
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1045
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1046
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1047
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1048
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1049
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1050
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1051
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1052
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1053
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1054
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1055
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1056
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1057
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1058
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1059
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1060
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1061
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1062
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1063
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1064
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1065
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1066
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1067
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1068
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1069
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1070
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1071
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1072
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1073
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1074
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1075
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1076
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1077
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1078
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1079
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1080
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1081
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1082
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1083
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1084
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1085
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1086
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1087
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1088
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1089
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1090
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1091
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1092
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1093
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1094
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1095
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1096
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1097
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1098
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1099
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1100
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1101
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1102
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1103
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1104
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1105
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1106
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1107
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1108
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1109
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1110
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1111
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1112
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1113
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1114
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1115
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1116
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1117
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1118
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1119
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1120
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1121
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1122
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1123
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1124
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1125
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1126
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1127
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1128
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1129
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1130
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1131
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1132
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1133
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1134
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1135
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1136
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1137
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1138
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1139
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1140
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1141
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1142
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1143
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1144
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1145
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1146
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1147
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1148
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1149
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1150
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1151
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1152
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1153
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1154
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1155
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1156
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1157
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1158
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1159
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1160
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1161
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1162
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1163
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1164
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1165
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1166
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1167
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1168
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1169
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1170
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1171
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1172
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1173
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1174
                  step( solve( !KD( (~k⊕~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_1175
                  step( solve( !KD( (~k2⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1176
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1177
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1178
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1179
                  step( solve( !KD( (~k⊕~k2⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1180
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1181
                  step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1182
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1183
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1184
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1185
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1186
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1187
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1188
                  by step( contradiction /* cyclic */ )
                qed
              next
                case tag1_case_03
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_04
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_05
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_06
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_07
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_08
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_09
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_10
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_11
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_12
                by step( contradiction /* cyclic */ )
              qed
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1.1⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_13
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_14
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_21
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_22
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~x⊕x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (x⊕x.1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (~x⊕x.1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (~x.1⊕x.2) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_2
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_001
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_002
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_003
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_004
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_005
            by step( solve( !KU( ~k2 ) @ #vk.2 ) )
          next
            case split_case_006
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_007
            step( solve( !KD( (~k2⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_008
            step( solve( !KD( (~k⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_009
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_010
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_011
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_012
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_013
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_014
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_015
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_016
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_017
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_018
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_019
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_020
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_021
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_022
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_023
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_024
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_025
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_026
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_027
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_028
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_029
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_030
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_031
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_032
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_033
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_034
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_035
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_036
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_037
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_038
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_039
            by step( solve( !KU( ~k2 ) @ #vk.5 ) )
          next
            case split_case_040
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_041
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_042
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_043
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_044
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_045
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_046
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_047
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_048
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_049
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_050
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_051
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_052
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_053
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_054
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_055
            step( solve( !KD( (~k⊕x⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_056
            step( solve( !KD( (x⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_057
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_058
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_059
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_060
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_061
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_062
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_063
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_064
            step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_065
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_066
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_067
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_068
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_069
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_070
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_071
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_072
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_073
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_074
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_075
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_076
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_077
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_078
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_079
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_080
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_081
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_082
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_083
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_084
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_085
            step( solve( !KD( (~k⊕~k2⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_086
            step( solve( !KD( (~k2⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_087
            step( solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_088
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_089
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_090
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_091
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_092
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_093
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_094
            step( solve( !KD( (~k⊕~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_095
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_096
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_097
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_098
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_099
            by step( solve( !KU( ~k2 ) @ #vk.6 ) )
          next
            case split_case_100
            step( solve( !KD( (~k⊕~k2⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_101
            step( solve( !KD( (~k2⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_102
            step( solve( !KD( (~k⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_103
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_104
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_105
            step( solve( !KD( (~k⊕~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_106
            step( solve( !KD( (~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_107
            step( solve( !KD( (~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_108
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_109
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_110
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_111
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_112
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_113
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_114
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_115
            step( solve( !KD( (~k⊕~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_116
            step( solve( !KD( (~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_117
            step( solve( !KD( (~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_118
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_119
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_120
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_121
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_122
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_123
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_124
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_125
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_126
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_127
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_128
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_129
            step( solve( !KD( (~k⊕~k2⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_130
            step( solve( !KD( (~k2⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_131
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_132
            step( solve( !KD( (~k⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_133
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_134
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_135
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_136
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_137
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_138
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_139
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_140
            step( solve( !KD( (~k⊕~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_141
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_142
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_143
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_144
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_145
            step( solve( !KD( (~k⊕~k2⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_146
            step( solve( !KD( (~k2⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_147
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_148
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_149
            step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_150
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_151
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~x ) @ #vk.3 ) )
            case fresh
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_1
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.7, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_2
            step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.6, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case tag1_case_3
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_12
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_13
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_3
        by step( solve( splitEqs(0) ) )
      qed
    qed
  next
    case RHS
    step( simplify )
    step( solve( TagState1( ~k, ~r1, r0, phase ) ▶₀ #i ) )
      case tag1_case_1
      step( solve( !KU( h(z) ) @ #vk ) )
        case c_h
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KD( (~r1⊕~z⊕h(~z)) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_03
          step( solve( !KD( (~z⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KD( (~r1⊕~z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_06
          step( solve( !KU( ~r1 ) @ #vk.2 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_09
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~r1⊕h(zero)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_13
          step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_18
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (x⊕h((~r1⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_21
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_22
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~k⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KD( (~k⊕~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_43
          step( solve( !KD( (~k⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_44
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_45
          step( solve( !KD( (~k⊕~r1⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_46
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_47
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_48
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_49
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_50
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_51
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_52
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_53
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_54
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_55
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_56
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_57
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_58
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_59
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_60
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_61
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_62
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_63
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_64
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_65
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_66
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_67
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_68
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_69
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_70
          step( solve( !KD( (~r1⊕z⊕h(z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_71
          step( solve( !KD( (z⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_72
          step( solve( !KD( (~r1⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_73
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_74
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_1
        by step( solve( splitEqs(0) ) )
      next
        case tag1_case_2
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_001
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_002
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_003
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_004
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_005
            by step( solve( !KU( ~k2 ) @ #vk.2 ) )
          next
            case split_case_006
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_007
            step( solve( !KD( (~k2⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_008
            step( solve( !KD( (~k⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_009
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_010
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_011
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_012
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_013
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_014
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_015
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_016
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_017
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_018
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_019
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_020
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_021
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_022
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_023
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_024
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_025
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_026
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_027
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_028
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_029
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_030
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_031
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_032
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_033
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_034
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_035
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_036
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_037
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_038
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_039
            by step( solve( !KU( ~k2 ) @ #vk.5 ) )
          next
            case split_case_040
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_041
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_042
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_043
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_044
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_045
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_046
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_047
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_048
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_049
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_050
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_051
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_052
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_053
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_054
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_055
            step( solve( !KD( (~k⊕x⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_056
            step( solve( !KD( (x⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_057
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_058
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_059
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_060
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_061
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_062
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_063
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_064
            step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_065
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_066
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_067
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_068
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_069
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_070
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_071
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_072
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_073
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_074
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_075
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_076
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_077
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_078
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_079
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_080
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_081
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_082
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_083
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_084
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_085
            step( solve( !KD( (~k⊕~k2⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_086
            step( solve( !KD( (~k2⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_087
            step( solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_088
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_089
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_090
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_091
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_092
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_093
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_094
            step( solve( !KD( (~k⊕~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_095
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_096
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_097
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_098
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_099
            by step( solve( !KU( ~k2 ) @ #vk.6 ) )
          next
            case split_case_100
            step( solve( !KD( (~k⊕~k2⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_101
            step( solve( !KD( (~k2⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_102
            step( solve( !KD( (~k⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_103
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_104
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_105
            step( solve( !KD( (~k⊕~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_106
            step( solve( !KD( (~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_107
            step( solve( !KD( (~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_108
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_109
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_110
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_111
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_112
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_113
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_114
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_115
            step( solve( !KD( (~k⊕~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_116
            step( solve( !KD( (~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_117
            step( solve( !KD( (~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_118
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_119
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_120
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_121
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_122
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_123
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_124
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_125
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_126
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_127
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_128
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_129
            step( solve( !KD( (~k⊕~k2⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_130
            step( solve( !KD( (~k2⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_131
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_132
            step( solve( !KD( (~k⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_133
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_134
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_135
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_136
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_137
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_138
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_139
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_140
            step( solve( !KD( (~k⊕~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_141
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_142
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_143
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_144
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_145
            step( solve( !KD( (~k⊕~k2⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_146
            step( solve( !KD( (~k2⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_147
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_148
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_149
            step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_150
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_151
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~x ) @ #vk.3 ) )
            case fresh
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_1
            step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.6, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case tag1_case_2
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_3
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.7, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_12
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_13
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_3
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_001
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_002
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_003
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_004
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_005
            by step( solve( !KU( ~k2 ) @ #vk.2 ) )
          next
            case split_case_006
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_007
            step( solve( !KD( (~k2⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_008
            step( solve( !KD( (~k⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_009
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_010
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_011
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_012
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_013
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_014
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_015
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_016
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_017
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_018
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_019
            step( solve( !KD( (~k2⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_020
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_021
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_022
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_023
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_024
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_025
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_026
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_027
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_028
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_029
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_030
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_031
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_032
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_033
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_034
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_035
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_036
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_037
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_038
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_039
            by step( solve( !KU( ~k2 ) @ #vk.5 ) )
          next
            case split_case_040
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_041
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_042
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_043
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_044
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_045
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_046
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_047
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_048
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_049
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_050
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_051
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_052
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_053
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_054
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_055
            step( solve( !KD( (~k⊕x⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_056
            step( solve( !KD( (x⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_057
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_058
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_059
            step( solve( !KD( (x⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_060
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_061
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_062
            step( solve( !KD( (~r1.1⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_063
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_064
            step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_065
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_066
            step( solve( !KD( (~k⊕h((~k⊕~k2⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_067
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_068
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_069
            by step( solve( !KU( ~k2 ) @ #vk.4 ) )
          next
            case split_case_070
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_071
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_072
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_073
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_074
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_075
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_076
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_077
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_078
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_079
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_080
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_081
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_082
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_083
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_084
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_085
            step( solve( !KD( (~k⊕~k2⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_086
            step( solve( !KD( (~k2⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_087
            step( solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_088
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_089
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_090
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_091
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_092
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_093
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_094
            step( solve( !KD( (~k⊕~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_095
            step( solve( !KD( (~k2⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_096
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_097
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_098
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_099
            by step( solve( !KU( ~k2 ) @ #vk.6 ) )
          next
            case split_case_100
            step( solve( !KD( (~k⊕~k2⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_101
            step( solve( !KD( (~k2⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_102
            step( solve( !KD( (~k⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_103
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_104
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_105
            step( solve( !KD( (~k⊕~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_106
            step( solve( !KD( (~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_107
            step( solve( !KD( (~k2⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_108
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_109
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_110
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_111
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_112
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_113
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_114
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_115
            step( solve( !KD( (~k⊕~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_116
            step( solve( !KD( (~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_117
            step( solve( !KD( (~k2⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_118
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_119
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_120
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_121
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_122
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_123
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_124
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_125
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_126
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_127
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_128
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_129
            step( solve( !KD( (~k⊕~k2⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_130
            step( solve( !KD( (~k2⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_131
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_132
            step( solve( !KD( (~k⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_133
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_134
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_135
            step( solve( !KD( (~k⊕~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_136
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_137
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_138
            step( solve( !KD( (~k2⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_139
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_140
            step( solve( !KD( (~k⊕~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_141
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_142
            step( solve( !KD( (~k2⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_143
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_144
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_145
            step( solve( !KD( (~k⊕~k2⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_146
            step( solve( !KD( (~k2⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_147
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_148
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_149
            step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_150
            step( solve( !KD( (~k⊕~k2) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_151
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~x ) @ #vk.3 ) )
            case fresh
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_1
            step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.6, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case tag1_case_2
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_3
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.7, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_12
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_13
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      qed
    next
      case tag1_case_2
      step( solve( !KU( h(z) ) @ #vk ) )
        case c_h
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KD( (~r1⊕~z⊕h(~z)) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_03
          step( solve( !KD( (~z⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KD( (~r1⊕~z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_06
          step( solve( !KU( ~r1 ) @ #vk.2 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_09
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~r1⊕h(zero)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_13
          step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_18
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (x⊕h((~r1⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_21
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_22
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~k⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KD( (~k⊕~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_43
          step( solve( !KD( (~k⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_44
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_45
          step( solve( !KD( (~k⊕~r1⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_46
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_47
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_48
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_49
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_50
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_51
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_52
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_53
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_54
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_55
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_56
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_57
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_58
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_59
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_60
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_61
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_62
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_63
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_64
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_65
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_66
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_67
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_68
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_69
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_70
          step( solve( !KD( (~r1⊕z⊕h(z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_71
          step( solve( !KD( (z⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_72
          step( solve( !KD( (~r1⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_73
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_74
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_1
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_001
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_002
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_003
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_004
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_005
            by step( solve( !KU( ~k1 ) @ #vk.2 ) )
          next
            case split_case_006
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_007
            step( solve( !KD( (~k1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_008
            step( solve( !KD( (~k⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_009
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_010
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_011
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_012
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_013
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_014
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_015
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_016
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_017
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_018
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_019
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_020
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_021
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_022
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_023
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_024
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_025
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_026
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_027
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_028
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_029
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_030
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_031
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_032
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_033
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_034
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_035
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_036
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_037
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_038
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_039
            by step( solve( !KU( ~k1 ) @ #vk.5 ) )
          next
            case split_case_040
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_041
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_042
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_043
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_044
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_045
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_046
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_047
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_048
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_049
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_050
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_051
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_052
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_053
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_054
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_055
            step( solve( !KD( (~k⊕x⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_056
            step( solve( !KD( (x⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_057
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_058
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_059
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_060
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_061
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_062
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_063
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_064
            step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_065
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_066
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_067
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_068
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_069
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_070
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_071
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_072
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_073
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_074
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_075
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_076
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_077
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_078
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_079
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_080
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_081
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_082
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_083
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_084
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_085
            step( solve( !KD( (~k⊕~k1⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_086
            step( solve( !KD( (~k1⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_087
            step( solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_088
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_089
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_090
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_091
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_092
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_093
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_094
            step( solve( !KD( (~k⊕~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_095
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_096
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_097
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_098
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_099
            by step( solve( !KU( ~k1 ) @ #vk.6 ) )
          next
            case split_case_100
            step( solve( !KD( (~k⊕~k1⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_101
            step( solve( !KD( (~k1⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_102
            step( solve( !KD( (~k⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_103
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_104
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_105
            step( solve( !KD( (~k⊕~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_106
            step( solve( !KD( (~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_107
            step( solve( !KD( (~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_108
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_109
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_110
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_111
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_112
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_113
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_114
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_115
            step( solve( !KD( (~k⊕~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_116
            step( solve( !KD( (~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_117
            step( solve( !KD( (~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_118
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_119
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_120
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_121
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_122
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_123
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_124
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_125
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_126
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_127
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_128
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_129
            step( solve( !KD( (~k⊕~k1⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_130
            step( solve( !KD( (~k1⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_131
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_132
            step( solve( !KD( (~k⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_133
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_134
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_135
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_136
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_137
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_138
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_139
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_140
            step( solve( !KD( (~k⊕~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_141
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_142
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_143
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_144
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_145
            step( solve( !KD( (~k⊕~k1⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_146
            step( solve( !KD( (~k1⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_147
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_148
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_149
            step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_150
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_151
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~x ) @ #vk.3 ) )
            case fresh
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_1
            step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.6, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case tag1_case_2
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_3
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.7, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_12
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_13
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_2
        by step( solve( splitEqs(0) ) )
      next
        case tag1_case_3
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_01
            step( solve( !KU( ~r0 ) @ #vk.1 ) )
              case tag1
              step( solve( !KU( h((~k⊕~r0⊕~r1)) ) @ #vk.2 ) )
                case c_h_case_1
                step( solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.3 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                  qed
                qed
              next
                case c_h_case_2
                step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.4, 0) ) )
                  qed
                qed
              next
                case c_h_case_3
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_4
                step( solve( !KD( (~k⊕~r0) ) ▶₀ #vk.4 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.4, 0) ) )
                  qed
                qed
              next
                case c_h_case_5
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_1
                step( solve( splitEqs(6) ) )
                  case split_case_01
                  step( solve( !KD( (~k⊕~k1⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.3 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.3, 0) ) )
                    qed
                  qed
                next
                  case split_case_02
                  step( solve( !KD( (~k1⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_03
                  step( solve( !KD( (~k⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_04
                  step( solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_05
                  step( solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_06
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_07
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_08
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_09
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_10
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_11
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_12
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_13
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_14
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_15
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_16
                  step( solve( !KD( (~k⊕~k1⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_17
                  step( solve( !KD( (~k1⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_18
                  step( solve( !KD( (~k1⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_19
                  step( solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_20
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_21
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_22
                  step( solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_23
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_24
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_25
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_26
                  step( solve( !KD( (~k⊕~k1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_27
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_28
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_29
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_30
                  step( solve( !KD( (~k⊕~k1⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_31
                  step( solve( !KD( (~k1⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_32
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_33
                  step( solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_34
                  step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_35
                  step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_36
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_37
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_38
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_39
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_40
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_41
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_42
                  step( solve( !KD( (~k1⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_43
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_44
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_45
                  step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_46
                  step( solve( !KD( (~k⊕~k1⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_47
                  step( solve( !KD( (~k1⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_48
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_49
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_50
                  step( solve( !KD( (~k⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_51
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_52
                  by step( contradiction /* cyclic */ )
                qed
              next
                case tag1_case_2
                by step( contradiction /* cyclic */ )
              qed
            qed
          next
            case split_case_02
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_03
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_04
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_05
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_06
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          next
            case split_case_07
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_08
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_09
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_10
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              step( solve( !KU( h((~k⊕~r1⊕x⊕~r1.1)) ) @ #vk.5 ) )
                case c_h_case_01
                step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.5, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.5, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.5, 0) ) )
                  qed
                qed
              next
                case c_h_case_02
                step( solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_03
                step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_04
                step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_05
                step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_06
                step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_07
                step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_08
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_09
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_10
                step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_11
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_12
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_13
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_01
                step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.5 ) )
                  case acceptreader
                  by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                  qed
                qed
              next
                case tag1_case_02
                step( solve( splitEqs(6) ) )
                  case split_case_0001
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0002
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0003
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0004
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0005
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0006
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0007
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0008
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0009
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0010
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0011
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0012
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0013
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0014
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0015
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0016
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0017
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0018
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0019
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0020
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0021
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0022
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0023
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0024
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0025
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0026
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0027
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0028
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0029
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0030
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0031
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0032
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0033
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0034
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0035
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0036
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0037
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0038
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0039
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0040
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0041
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0042
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0043
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0044
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0045
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0046
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0047
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0048
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0049
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0050
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0051
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0052
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0053
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0054
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0055
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0056
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0057
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0058
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0059
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0060
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0061
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0062
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0063
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0064
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0065
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0066
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0067
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0068
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0069
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0070
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0071
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0072
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0073
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0074
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0075
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0076
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0077
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0078
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0079
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0080
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0081
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0082
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0083
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0084
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0085
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0086
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0087
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0088
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0089
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0090
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0091
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0092
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0093
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0094
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0095
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0096
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0097
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0098
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0099
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0100
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0101
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0102
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0103
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0104
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0105
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0106
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0107
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0108
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0109
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0110
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0111
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0112
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0113
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0114
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0115
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0116
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0117
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0118
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0119
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0120
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0121
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0122
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0123
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0124
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0125
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0126
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0127
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0128
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0129
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0130
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0131
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0132
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0133
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0134
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0135
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0136
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0137
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0138
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0139
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0140
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0141
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0142
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0143
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0144
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0145
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0146
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0147
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0148
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0149
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0150
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0151
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0152
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0153
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0154
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0155
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0156
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0157
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0158
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0159
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0160
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0161
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0162
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0163
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0164
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0165
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0166
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0167
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0168
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0169
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0170
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0171
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0172
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0173
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0174
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0175
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0176
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0177
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0178
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0179
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0180
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0181
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0182
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0183
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0184
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0185
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0186
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0187
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0188
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0189
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0190
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0191
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0192
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0193
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0194
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0195
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0196
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0197
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0198
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0199
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0200
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0201
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0202
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0203
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0204
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0205
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0206
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0207
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0208
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0209
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0210
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0211
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0212
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0213
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0214
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0215
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0216
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0217
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0218
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0219
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0220
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0221
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0222
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0223
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0224
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0225
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0226
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0227
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0228
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0229
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0230
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0231
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0232
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0233
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0234
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0235
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0236
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0237
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0238
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0239
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0240
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0241
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0242
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0243
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0244
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0245
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0246
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0247
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0248
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0249
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0250
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0251
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0252
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0253
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0254
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0255
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0256
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0257
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0258
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0259
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0260
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0261
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0262
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0263
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0264
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0265
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0266
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0267
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0268
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0269
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0270
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0271
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0272
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0273
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0274
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0275
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0276
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0277
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0278
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0279
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0280
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0281
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0282
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0283
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0284
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0285
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0286
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0287
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0288
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0289
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0290
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0291
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0292
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0293
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0294
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0295
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0296
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0297
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0298
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0299
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0300
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0301
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0302
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0303
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0304
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0305
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0306
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0307
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0308
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0309
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0310
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0311
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0312
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0313
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0314
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0315
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0316
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0317
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0318
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0319
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0320
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0321
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0322
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0323
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0324
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0325
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0326
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0327
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0328
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0329
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0330
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0331
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0332
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0333
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0334
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0335
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0336
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0337
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0338
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0339
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0340
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0341
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0342
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0343
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0344
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0345
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0346
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0347
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0348
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0349
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0350
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0351
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0352
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0353
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0354
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0355
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0356
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0357
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0358
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0359
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0360
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0361
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0362
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0363
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0364
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0365
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0366
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0367
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0368
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0369
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0370
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0371
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0372
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0373
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0374
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0375
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0376
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0377
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0378
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0379
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0380
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0381
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0382
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0383
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0384
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0385
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0386
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0387
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0388
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0389
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0390
                  step( solve( !KD( (~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0391
                  step( solve( !KD( (~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0392
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0393
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0394
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0395
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0396
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0397
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0398
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0399
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0400
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0401
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0402
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0403
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0404
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0405
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0406
                  step( solve( !KD( (~r1⊕x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0407
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0408
                  step( solve( !KD( (~k1⊕x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0409
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0410
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0411
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0412
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0413
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0414
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0415
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0416
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0417
                  step( solve( !KD( (~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0418
                  step( solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0419
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0420
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0421
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0422
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0423
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0424
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0425
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0426
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0427
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0428
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0429
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0430
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0431
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0432
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0433
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0434
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0435
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0436
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0437
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0438
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0439
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0440
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0441
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0442
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0443
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0444
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0445
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0446
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0447
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0448
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0449
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0450
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0451
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0452
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0453
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0454
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0455
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0456
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0457
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0458
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0459
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0460
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0461
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0462
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0463
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0464
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0465
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0466
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0467
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0468
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0469
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0470
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0471
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0472
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0473
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0474
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0475
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0476
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0477
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0478
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0479
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0480
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0481
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0482
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0483
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0484
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0485
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0486
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0487
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0488
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0489
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0490
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0491
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0492
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0493
                  step( solve( !KD( (~k1⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0494
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0495
                  step( solve( !KD( (~k1⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0496
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0497
                  step( solve( !KD( (~k1⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0498
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0499
                  step( solve( !KD( (~k1⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0500
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0501
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0502
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0503
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0504
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0505
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0506
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0507
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0508
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0509
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0510
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0511
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0512
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0513
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0514
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0515
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0516
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0517
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0518
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0519
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0520
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0521
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0522
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0523
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0524
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0525
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0526
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0527
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0528
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0529
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0530
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0531
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0532
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0533
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0534
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0535
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0536
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0537
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0538
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0539
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0540
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0541
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0542
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0543
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0544
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0545
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0546
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0547
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0548
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0549
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0550
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0551
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0552
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0553
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0554
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0555
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0556
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0557
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0558
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0559
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0560
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0561
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0562
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0563
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0564
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0565
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0566
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0567
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0568
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0569
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0570
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0571
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0572
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0573
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0574
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0575
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0576
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0577
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0578
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0579
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0580
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0581
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0582
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0583
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0584
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0585
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0586
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0587
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0588
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0589
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0590
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0591
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0592
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0593
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0594
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0595
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0596
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0597
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0598
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0599
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0600
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0601
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0602
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0603
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0604
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0605
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0606
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0607
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0608
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0609
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0610
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0611
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0612
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0613
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0614
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0615
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0616
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0617
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0618
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0619
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0620
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0621
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0622
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0623
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0624
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0625
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0626
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0627
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0628
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0629
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0630
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0631
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0632
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0633
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0634
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0635
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0636
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0637
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0638
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0639
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0640
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0641
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0642
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0643
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0644
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0645
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0646
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0647
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0648
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0649
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0650
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0651
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0652
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0653
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0654
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0655
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0656
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0657
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0658
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0659
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0660
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0661
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0662
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0663
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0664
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0665
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0666
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0667
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0668
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0669
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0670
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0671
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0672
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0673
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0674
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0675
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0676
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0677
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0678
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0679
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0680
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0681
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0682
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0683
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0684
                  step( solve( !KD( (~k1⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0685
                  step( solve( !KD( (~k1⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0686
                  step( solve( !KD( (~k1⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0687
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0688
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0689
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0690
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0691
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0692
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0693
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0694
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0695
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0696
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0697
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0698
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0699
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0700
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0701
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0702
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0703
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0704
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0705
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0706
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0707
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0708
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0709
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0710
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0711
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0712
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0713
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0714
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0715
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0716
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0717
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0718
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0719
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0720
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0721
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0722
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0723
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0724
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0725
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0726
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0727
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0728
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0729
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0730
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0731
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0732
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0733
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0734
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0735
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0736
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0737
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0738
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0739
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0740
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0741
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0742
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0743
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0744
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0745
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0746
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0747
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0748
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0749
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0750
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0751
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0752
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0753
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0754
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0755
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0756
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0757
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0758
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0759
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0760
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0761
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0762
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0763
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0764
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0765
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0766
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0767
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0768
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0769
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0770
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0771
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0772
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0773
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0774
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0775
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0776
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0777
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0778
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0779
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0780
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0781
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0782
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0783
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0784
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0785
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0786
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0787
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0788
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0789
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0790
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0791
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0792
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0793
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0794
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0795
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0796
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0797
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0798
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0799
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0800
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0801
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0802
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0803
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0804
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0805
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0806
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0807
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0808
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0809
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0810
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0811
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0812
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0813
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0814
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0815
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0816
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0817
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0818
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0819
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0820
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0821
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0822
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0823
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0824
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0825
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0826
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0827
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0828
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0829
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0830
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0831
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0832
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0833
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0834
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0835
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0836
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0837
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0838
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0839
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0840
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0841
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0842
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0843
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0844
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0845
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0846
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0847
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0848
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0849
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0850
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0851
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0852
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0853
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0854
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0855
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0856
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0857
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0858
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0859
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0860
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0861
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0862
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0863
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0864
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0865
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0866
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0867
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0868
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0869
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0870
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0871
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0872
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0873
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0874
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0875
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0876
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0877
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0878
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0879
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0880
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0881
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0882
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0883
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0884
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0885
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0886
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0887
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0888
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0889
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0890
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0891
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0892
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0893
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0894
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0895
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0896
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0897
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0898
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0899
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0900
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0901
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0902
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0903
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0904
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0905
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0906
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0907
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0908
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0909
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0910
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0911
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0912
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0913
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0914
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0915
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0916
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0917
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0918
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0919
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0920
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0921
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0922
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0923
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0924
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0925
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0926
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0927
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0928
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0929
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0930
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0931
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0932
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0933
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0934
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0935
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0936
                  step( solve( !KD( (~k⊕~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0937
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0938
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0939
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0940
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0941
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0942
                  step( solve( !KD( (~k⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0943
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0944
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0945
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0946
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0947
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0948
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0949
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0950
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0951
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0952
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0953
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0954
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0955
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0956
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0957
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0958
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0959
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0960
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0961
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0962
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0963
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0964
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0965
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0966
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0967
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0968
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0969
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0970
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0971
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0972
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0973
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0974
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0975
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0976
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0977
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0978
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0979
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0980
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0981
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0982
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0983
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0984
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0985
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0986
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0987
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0988
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0989
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0990
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0991
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0992
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0993
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0994
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0995
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0996
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0997
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0998
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0999
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1000
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1001
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1002
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1003
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1004
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1005
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1006
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1007
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1008
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1009
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1010
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1011
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1012
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1013
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1014
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1015
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1016
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1017
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1018
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1019
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1020
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1021
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1022
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1023
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1024
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1025
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1026
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1027
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1028
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1029
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1030
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1031
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1032
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1033
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1034
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1035
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1036
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1037
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1038
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1039
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1040
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1041
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1042
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1043
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1044
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1045
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1046
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1047
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1048
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1049
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1050
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1051
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1052
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1053
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1054
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1055
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1056
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1057
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1058
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1059
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1060
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1061
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1062
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1063
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1064
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1065
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1066
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1067
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1068
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1069
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1070
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1071
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1072
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1073
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1074
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1075
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1076
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1077
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1078
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1079
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1080
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1081
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1082
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1083
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1084
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1085
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1086
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1087
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1088
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1089
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1090
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1091
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1092
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1093
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1094
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1095
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1096
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1097
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1098
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1099
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1100
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1101
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1102
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1103
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1104
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1105
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1106
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1107
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1108
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1109
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1110
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1111
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1112
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1113
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1114
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1115
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1116
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1117
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1118
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1119
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1120
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1121
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1122
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1123
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1124
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1125
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1126
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1127
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1128
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1129
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1130
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1131
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1132
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1133
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1134
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1135
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1136
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1137
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1138
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1139
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1140
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1141
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1142
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1143
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1144
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1145
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1146
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1147
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1148
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1149
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1150
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1151
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1152
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1153
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1154
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1155
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1156
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1157
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1158
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1159
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1160
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1161
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1162
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1163
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1164
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1165
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1166
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1167
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1168
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1169
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1170
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1171
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1172
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1173
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1174
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_1175
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1176
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1177
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1178
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1179
                  step( solve( !KD( (~k⊕~k1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1180
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1181
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1182
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1183
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1184
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1185
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1186
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1187
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1188
                  by step( contradiction /* cyclic */ )
                qed
              next
                case tag1_case_03
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_04
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_05
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_06
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_07
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_08
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_09
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_10
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_11
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_12
                by step( contradiction /* cyclic */ )
              qed
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1.1⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_13
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_14
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_21
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_22
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~x⊕x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (x⊕x.1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (~x⊕x.1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (~x.1⊕x.2) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      qed
    next
      case tag1_case_3
      step( solve( !KU( h(z) ) @ #vk ) )
        case c_h
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KD( (~r1⊕~z⊕h(~z)) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_03
          step( solve( !KD( (~z⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1⊕h(~z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KD( (~r1⊕~z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_06
          step( solve( !KU( ~r1 ) @ #vk.2 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_09
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~r1⊕h(zero)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_13
          step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_18
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (x⊕h((~r1⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_21
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_22
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~k⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (~r1⊕x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (x⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KD( (~k⊕~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_43
          step( solve( !KD( (~k⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_44
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_45
          step( solve( !KD( (~k⊕~r1⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_46
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_47
          step( solve( !KD( (~r1⊕h((~k⊕x))) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_48
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_49
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_50
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_51
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_52
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_53
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_54
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_55
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_56
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_57
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_58
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_59
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_60
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_61
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_62
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_63
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_64
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_65
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_66
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_67
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_68
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_69
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_70
          step( solve( !KD( (~r1⊕z⊕h(z)) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_71
          step( solve( !KD( (z⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_72
          step( solve( !KD( (~r1⊕h(z)) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_73
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.3, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_74
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_1
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_001
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_002
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_003
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_004
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_005
            by step( solve( !KU( ~k1 ) @ #vk.2 ) )
          next
            case split_case_006
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_007
            step( solve( !KD( (~k1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_008
            step( solve( !KD( (~k⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_009
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_010
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_011
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_012
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_013
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_014
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_015
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_016
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_017
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_018
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_019
            step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_020
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_021
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_022
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_023
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_024
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_025
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_026
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_027
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_028
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_029
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_030
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_031
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_032
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_033
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_034
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_035
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_036
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_037
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_038
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_039
            by step( solve( !KU( ~k1 ) @ #vk.5 ) )
          next
            case split_case_040
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_041
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_042
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_043
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_044
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_045
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_046
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_047
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_048
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_049
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_050
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_051
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_052
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_053
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_054
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_055
            step( solve( !KD( (~k⊕x⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_056
            step( solve( !KD( (x⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_057
            step( solve( !KD( (~k⊕x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_058
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_059
            step( solve( !KD( (x⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_060
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_061
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_062
            step( solve( !KD( (~r1.1⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_063
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_064
            step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_065
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_066
            step( solve( !KD( (~k⊕h((~k⊕~k1⊕~r1⊕x))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_067
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_068
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_069
            by step( solve( !KU( ~k1 ) @ #vk.4 ) )
          next
            case split_case_070
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_071
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_072
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_073
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_074
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_075
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_076
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_077
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_078
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_079
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_080
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_081
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_082
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_083
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_084
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_085
            step( solve( !KD( (~k⊕~k1⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_086
            step( solve( !KD( (~k1⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_087
            step( solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_088
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_089
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_090
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_091
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_092
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_093
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_094
            step( solve( !KD( (~k⊕~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_095
            step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_096
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_097
            step( solve( !KD( (~k⊕x) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_098
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.3 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
              qed
            qed
          next
            case split_case_099
            by step( solve( !KU( ~k1 ) @ #vk.6 ) )
          next
            case split_case_100
            step( solve( !KD( (~k⊕~k1⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_101
            step( solve( !KD( (~k1⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_102
            step( solve( !KD( (~k⊕r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_103
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_104
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_105
            step( solve( !KD( (~k⊕~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_106
            step( solve( !KD( (~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_107
            step( solve( !KD( (~k1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_108
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_109
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_110
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_111
            step( solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_112
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_113
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_114
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_115
            step( solve( !KD( (~k⊕~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_116
            step( solve( !KD( (~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_117
            step( solve( !KD( (~k1⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_118
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_119
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_120
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_121
            step( solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_122
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_123
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_124
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_125
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_126
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_127
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_128
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_129
            step( solve( !KD( (~k⊕~k1⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_130
            step( solve( !KD( (~k1⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_131
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_132
            step( solve( !KD( (~k⊕r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_133
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_134
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_135
            step( solve( !KD( (~k⊕~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_136
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_137
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_138
            step( solve( !KD( (~k1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_139
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_140
            step( solve( !KD( (~k⊕~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_141
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_142
            step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_143
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_144
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_145
            step( solve( !KD( (~k⊕~k1⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_146
            step( solve( !KD( (~k1⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_147
            step( solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_148
            step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_149
            step( solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_150
            step( solve( !KD( (~k⊕~k1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_151
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~x ) @ #vk.3 ) )
            case fresh
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_1
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.7, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          next
            case tag1_case_2
            step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.6, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case tag1_case_3
            step( solve( !KU( zero ) @ #vk.3 ) )
              case c_zero
              by step( solve( splitEqs(2) ) )
            next
              case coerce
              step( solve( !KD( zero ) ▶₀ #vk.3 ) )
                case acceptreader
                by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
              next
                case initiatereader
                by step( contradiction /* impossible chain */ )
              next
                case tag1
                step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  case d_0_fst
                  by step( contradiction /* impossible chain */ )
                next
                  case d_0_snd
                  by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                qed
              qed
            qed
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_12
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_13
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_14
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_16
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_2
        step( solve( splitEqs(0) ) )
          case split_case_01
          by step( solve( !KU( ~k ) @ #vk.1 ) )
        next
          case split_case_02
          step( solve( !KU( ~r1 ) @ #vk.1 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_03
          step( solve( splitEqs(2) ) )
            case split_case_01
            step( solve( !KU( ~r0 ) @ #vk.1 ) )
              case tag1
              step( solve( !KU( h((~k⊕~r0⊕~r1)) ) @ #vk.2 ) )
                case c_h_case_1
                step( solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.3 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.3, 0) ) )
                  qed
                qed
              next
                case c_h_case_2
                step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.4, 0) ) )
                  qed
                qed
              next
                case c_h_case_3
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_4
                step( solve( !KD( (~k⊕~r0) ) ▶₀ #vk.4 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.4, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.4, 0) ) )
                  qed
                qed
              next
                case c_h_case_5
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_1
                step( solve( splitEqs(6) ) )
                  case split_case_01
                  step( solve( !KD( (~k⊕~k1⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.3 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.3, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.3, 0) ) )
                    qed
                  qed
                next
                  case split_case_02
                  step( solve( !KD( (~k1⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_03
                  step( solve( !KD( (~k⊕~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_04
                  step( solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_05
                  step( solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_06
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_07
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_08
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_09
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_10
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_11
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_12
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_13
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_14
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_15
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_16
                  step( solve( !KD( (~k⊕~k1⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_17
                  step( solve( !KD( (~k1⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_18
                  step( solve( !KD( (~k1⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_19
                  step( solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_20
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_21
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_22
                  step( solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_23
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_24
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_25
                  step( solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_26
                  step( solve( !KD( (~k⊕~k1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_27
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_28
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_29
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_30
                  step( solve( !KD( (~k⊕~k1⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_31
                  step( solve( !KD( (~k1⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_32
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_33
                  step( solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_34
                  step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_35
                  step( solve( !KD( (~r0⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_36
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_37
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_38
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_39
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_40
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_41
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_42
                  step( solve( !KD( (~k1⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_43
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_44
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_45
                  step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_46
                  step( solve( !KD( (~k⊕~k1⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_47
                  step( solve( !KD( (~k1⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_48
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_49
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_50
                  step( solve( !KD( (~k⊕~r0) ) ▶₀ #vk.4 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.4, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.4, 0) ) )
                    qed
                  qed
                next
                  case split_case_51
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_52
                  by step( contradiction /* cyclic */ )
                qed
              next
                case tag1_case_2
                by step( contradiction /* cyclic */ )
              qed
            qed
          next
            case split_case_02
            step( solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_03
            step( solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_04
            step( solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_05
            step( solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_06
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              by step( contradiction /* cyclic */ )
            qed
          next
            case split_case_07
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_08
            step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
              qed
            qed
          next
            case split_case_09
            step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
              case acceptreader
              by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
            next
              case initiatereader
              by step( contradiction /* impossible chain */ )
            next
              case tag1
              step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
                case d_0_fst
                by step( contradiction /* impossible chain */ )
              next
                case d_0_snd
                by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
              qed
            qed
          next
            case split_case_10
            step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
              case tag1
              step( solve( !KU( h((~k⊕~r1⊕x⊕~r1.1)) ) @ #vk.5 ) )
                case c_h_case_01
                step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.5, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.5, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.5, 0) ) )
                  qed
                qed
              next
                case c_h_case_02
                step( solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_03
                step( solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_04
                step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_05
                step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_06
                step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_07
                step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_08
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_09
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_10
                step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 ) )
                  case acceptreader
                  by step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.1, 0) ~~> (#vk.6, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.6, 0) ~~> (#vk.6, 0) ) )
                  qed
                qed
              next
                case c_h_case_11
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_12
                by step( contradiction /* cyclic */ )
              next
                case c_h_case_13
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_01
                step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.5 ) )
                  case acceptreader
                  by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                next
                  case initiatereader
                  by step( contradiction /* impossible chain */ )
                next
                  case tag1
                  step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                    case d_0_fst
                    by step( contradiction /* impossible chain */ )
                  next
                    case d_0_snd
                    by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                  qed
                qed
              next
                case tag1_case_02
                step( solve( splitEqs(6) ) )
                  case split_case_0001
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0002
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0003
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0004
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0005
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0006
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0007
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0008
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0009
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0010
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0011
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0012
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0013
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0014
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0015
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0016
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0017
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0018
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0019
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0020
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0021
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0022
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0023
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0024
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0025
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0026
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0027
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0028
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0029
                  step( solve( !KD( (~k1⊕h((~k⊕~k1⊕~r1⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0030
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0031
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0032
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0033
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0034
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0035
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0036
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0037
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0038
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0039
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0040
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0041
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0042
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0043
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0044
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0045
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0046
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0047
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0048
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0049
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0050
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0051
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0052
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0053
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0054
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0055
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0056
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0057
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0058
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0059
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0060
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0061
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0062
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0063
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0064
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0065
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0066
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0067
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0068
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0069
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0070
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0071
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0072
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0073
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0074
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0075
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0076
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0077
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0078
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0079
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0080
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0081
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0082
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0083
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0084
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0085
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0086
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0087
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0088
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0089
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0090
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0091
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0092
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0093
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0094
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0095
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0096
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0097
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0098
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0099
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0100
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0101
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0102
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0103
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0104
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0105
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0106
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0107
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0108
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0109
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0110
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0111
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0112
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0113
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0114
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0115
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0116
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0117
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0118
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0119
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0120
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0121
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0122
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0123
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0124
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0125
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0126
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0127
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0128
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0129
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0130
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0131
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0132
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0133
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0134
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0135
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0136
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0137
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0138
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0139
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0140
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0141
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0142
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0143
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0144
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0145
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0146
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0147
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0148
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0149
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0150
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0151
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0152
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0153
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0154
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0155
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0156
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0157
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0158
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0159
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0160
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0161
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0162
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0163
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0164
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0165
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0166
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0167
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0168
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0169
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0170
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0171
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0172
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0173
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0174
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0175
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0176
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0177
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0178
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0179
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0180
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0181
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0182
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0183
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0184
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0185
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0186
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0187
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0188
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0189
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0190
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0191
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0192
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0193
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0194
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0195
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0196
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0197
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0198
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0199
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0200
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0201
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0202
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0203
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0204
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0205
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0206
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0207
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0208
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0209
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0210
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0211
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0212
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0213
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0214
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0215
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0216
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0217
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0218
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0219
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0220
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0221
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0222
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0223
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0224
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0225
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0226
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0227
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0228
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0229
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0230
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0231
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0232
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0233
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0234
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0235
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0236
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0237
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0238
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0239
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0240
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0241
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0242
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0243
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0244
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0245
                  step( solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0246
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0247
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0248
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0249
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0250
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0251
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0252
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0253
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0254
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0255
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0256
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0257
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0258
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0259
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0260
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0261
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0262
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0263
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0264
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0265
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0266
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0267
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0268
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0269
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0270
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0271
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0272
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0273
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0274
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0275
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0276
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0277
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0278
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0279
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0280
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0281
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0282
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0283
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0284
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0285
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0286
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0287
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0288
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0289
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0290
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0291
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0292
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0293
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0294
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0295
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0296
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0297
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0298
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0299
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0300
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0301
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0302
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0303
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0304
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0305
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0306
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0307
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0308
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0309
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0310
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0311
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0312
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0313
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0314
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0315
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0316
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0317
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0318
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0319
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0320
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0321
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0322
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0323
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0324
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0325
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0326
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0327
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0328
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0329
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0330
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0331
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0332
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0333
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0334
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0335
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0336
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0337
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0338
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0339
                  step( solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0340
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0341
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0342
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0343
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0344
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0345
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0346
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0347
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0348
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0349
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0350
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0351
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0352
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0353
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0354
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0355
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0356
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0357
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0358
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0359
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0360
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0361
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0362
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0363
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0364
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0365
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0366
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0367
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0368
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0369
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0370
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0371
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0372
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0373
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0374
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0375
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0376
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0377
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0378
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0379
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0380
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0381
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0382
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0383
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0384
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0385
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0386
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0387
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0388
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0389
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0390
                  step( solve( !KD( (~k1⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0391
                  step( solve( !KD( (~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0392
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0393
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0394
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0395
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0396
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0397
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0398
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0399
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0400
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0401
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0402
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0403
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0404
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0405
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0406
                  step( solve( !KD( (~r1⊕x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0407
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0408
                  step( solve( !KD( (~k1⊕x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0409
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0410
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0411
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0412
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0413
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0414
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0415
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0416
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0417
                  step( solve( !KD( (~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0418
                  step( solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0419
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0420
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0421
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0422
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0423
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0424
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0425
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0426
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0427
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0428
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0429
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0430
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0431
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0432
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0433
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0434
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0435
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0436
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0437
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0438
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0439
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0440
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0441
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0442
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0443
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0444
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0445
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0446
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0447
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0448
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0449
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0450
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0451
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0452
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0453
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0454
                  step( solve( !KD( (~x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0455
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0456
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0457
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0458
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0459
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0460
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0461
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0462
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0463
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0464
                  step( solve( !KD( (~x⊕h((~k⊕~r1⊕~x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0465
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0466
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0467
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0468
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0469
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0470
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0471
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0472
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0473
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0474
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0475
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0476
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0477
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0478
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0479
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0480
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0481
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0482
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0483
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0484
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0485
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0486
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0487
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0488
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0489
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0490
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0491
                  step( solve( !KD( (~k1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0492
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0493
                  step( solve( !KD( (~k1⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0494
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0495
                  step( solve( !KD( (~k1⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0496
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0497
                  step( solve( !KD( (~k1⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0498
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0499
                  step( solve( !KD( (~k1⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0500
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0501
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0502
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0503
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0504
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0505
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0506
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0507
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0508
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0509
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0510
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0511
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0512
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0513
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0514
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0515
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0516
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0517
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0518
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0519
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0520
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0521
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0522
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0523
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0524
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0525
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0526
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0527
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0528
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0529
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0530
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0531
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0532
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0533
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0534
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0535
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0536
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0537
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0538
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0539
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0540
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0541
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0542
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0543
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0544
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0545
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0546
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0547
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0548
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0549
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0550
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0551
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0552
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0553
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0554
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0555
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0556
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0557
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0558
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0559
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0560
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0561
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0562
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0563
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0564
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0565
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0566
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0567
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0568
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0569
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0570
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0571
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0572
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0573
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0574
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0575
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0576
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0577
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0578
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0579
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0580
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0581
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0582
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0583
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0584
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0585
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0586
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0587
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0588
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0589
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0590
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0591
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0592
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0593
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0594
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0595
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0596
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0597
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0598
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0599
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0600
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0601
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0602
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0603
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0604
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0605
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0606
                  step( solve( !KD( (~k1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0607
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0608
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0609
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0610
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0611
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0612
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0613
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0614
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0615
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0616
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0617
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0618
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0619
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0620
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0621
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0622
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0623
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0624
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0625
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0626
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0627
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0628
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0629
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0630
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0631
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0632
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0633
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0634
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0635
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0636
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0637
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0638
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0639
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0640
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0641
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0642
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0643
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0644
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0645
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0646
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0647
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0648
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0649
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0650
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0651
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0652
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0653
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0654
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0655
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0656
                  step( solve( !KD( (~k1⊕x⊕~r1.2⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0657
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0658
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0659
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0660
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0661
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0662
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0663
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0664
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0665
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0666
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0667
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0668
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0669
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0670
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0671
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0672
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0673
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0674
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0675
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0676
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0677
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0678
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0679
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0680
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0681
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0682
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0683
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0684
                  step( solve( !KD( (~k1⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0685
                  step( solve( !KD( (~k1⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0686
                  step( solve( !KD( (~k1⊕x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0687
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0688
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0689
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0690
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0691
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0692
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0693
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0694
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0695
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0696
                  step( solve( !KD( (~k1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0697
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0698
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0699
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0700
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0701
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0702
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0703
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0704
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0705
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0706
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0707
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0708
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0709
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0710
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0711
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0712
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0713
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0714
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0715
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0716
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0717
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0718
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0719
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0720
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0721
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0722
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0723
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0724
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0725
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0726
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0727
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0728
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0729
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0730
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0731
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0732
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0733
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0734
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0735
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0736
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0737
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0738
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0739
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0740
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0741
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0742
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0743
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0744
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0745
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0746
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0747
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0748
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0749
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0750
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0751
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0752
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0753
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0754
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0755
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0756
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0757
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0758
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0759
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0760
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0761
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0762
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0763
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0764
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0765
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0766
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0767
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0768
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0769
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0770
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0771
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0772
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0773
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0774
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0775
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0776
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0777
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0778
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0779
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0780
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0781
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0782
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0783
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0784
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0785
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0786
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0787
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0788
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0789
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0790
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0791
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0792
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0793
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0794
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0795
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0796
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0797
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0798
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0799
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0800
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0801
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0802
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0803
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0804
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0805
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0806
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0807
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0808
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0809
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0810
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0811
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0812
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0813
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0814
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0815
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0816
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0817
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0818
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0819
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0820
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0821
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0822
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0823
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0824
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0825
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0826
                  step( solve( !KD( (~k1⊕x⊕~r1.1) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0827
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0828
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0829
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0830
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0831
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0832
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0833
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0834
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0835
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0836
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0837
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0838
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0839
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0840
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0841
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0842
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0843
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0844
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0845
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0846
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0847
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0848
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0849
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0850
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0851
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0852
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0853
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0854
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0855
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0856
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0857
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0858
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0859
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0860
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0861
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0862
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0863
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0864
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0865
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0866
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0867
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0868
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0869
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0870
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0871
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0872
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0873
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0874
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0875
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0876
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0877
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0878
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0879
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0880
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0881
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0882
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0883
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0884
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0885
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0886
                  step( solve( !KD( (~k1⊕x⊕h((~k⊕~k1⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_0887
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0888
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0889
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0890
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0891
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0892
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0893
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0894
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0895
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0896
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0897
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0898
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0899
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0900
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0901
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0902
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0903
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0904
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0905
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0906
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0907
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0908
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0909
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0910
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0911
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0912
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0913
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0914
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0915
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0916
                  step( solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_0917
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0918
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0919
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0920
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0921
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0922
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0923
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0924
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0925
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0926
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0927
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0928
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0929
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0930
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0931
                  step( solve( !KD( (~k1⊕x) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_0932
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0933
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0934
                  step( solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_0935
                  step( solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0936
                  step( solve( !KD( (~k⊕~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0937
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0938
                  step( solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0939
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0940
                  step( solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0941
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0942
                  step( solve( !KD( (~k⊕~r1.2) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0943
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0944
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0945
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0946
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_0947
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0948
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0949
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0950
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0951
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0952
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0953
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0954
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0955
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0956
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0957
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0958
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0959
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0960
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0961
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0962
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0963
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0964
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0965
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0966
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0967
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0968
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0969
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0970
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0971
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0972
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0973
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0974
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0975
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0976
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0977
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0978
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0979
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0980
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0981
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0982
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0983
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0984
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0985
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0986
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0987
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0988
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0989
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0990
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0991
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0992
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0993
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_0994
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0995
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0996
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0997
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0998
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_0999
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1000
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1001
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1002
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1003
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1004
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1005
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1006
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1007
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1008
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1009
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1010
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1011
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1012
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1013
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1014
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1015
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1016
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1017
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1018
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1019
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1020
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1021
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1022
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1023
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1024
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1025
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1026
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1027
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1028
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1029
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1030
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1031
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1032
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1033
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1034
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1035
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1036
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1037
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1038
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1039
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1040
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1041
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1042
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1043
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1044
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1045
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1046
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1047
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1048
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1049
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1050
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1051
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1052
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1053
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1054
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1055
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1056
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1057
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1058
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1059
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1060
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1061
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1062
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1063
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1064
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1065
                  step( solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.1 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.1, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.1, 0) ) )
                    qed
                  qed
                next
                  case split_case_1066
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1067
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1068
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1069
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1070
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1071
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1072
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1073
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1074
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1075
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1076
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1077
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1078
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1079
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1080
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1081
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1082
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1083
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1084
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1085
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1086
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1087
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1088
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1089
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1090
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1091
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1092
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1093
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1094
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1095
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1096
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1097
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1098
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1099
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1100
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1101
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1102
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1103
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1104
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1105
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1106
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1107
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1108
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1109
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1110
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1111
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1112
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1113
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1114
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1115
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1116
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1117
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1118
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1119
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1120
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1121
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1122
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1123
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1124
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1125
                  step( solve( !KD( (x⊕~r1.2⊕h((~k⊕~r1⊕x⊕~r1.1⊕~r1.2)))
                               ) ▶₀ #vk.2 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.2, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.2, 0) ) )
                    qed
                  qed
                next
                  case split_case_1126
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1127
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1128
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1129
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1130
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1131
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1132
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1133
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1134
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1135
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1136
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1137
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1138
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1139
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1140
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1141
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1142
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1143
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1144
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1145
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1146
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1147
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1148
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1149
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1150
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1151
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1152
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1153
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1154
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1155
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.5, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.5, 0) ) )
                    qed
                  qed
                next
                  case split_case_1156
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1157
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1158
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1159
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1160
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1161
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1162
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1163
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1164
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1165
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1166
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1167
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1168
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1169
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1170
                  step( solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.6 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.6, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.6, 0) ) )
                    qed
                  qed
                next
                  case split_case_1171
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1172
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1173
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1174
                  step( solve( !KD( (~k⊕~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.7 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.7, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.7, 0) ) )
                    qed
                  qed
                next
                  case split_case_1175
                  step( solve( !KD( (~k1⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1176
                  step( solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1177
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1178
                  step( solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1179
                  step( solve( !KD( (~k⊕~k1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1180
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1181
                  step( solve( !KD( (~k1⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1182
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1183
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1184
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1185
                  step( solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.8 ) )
                    case acceptreader
                    by step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                  next
                    case initiatereader
                    by step( contradiction /* impossible chain */ )
                  next
                    case tag1
                    step( solve( (#vl.2, 0) ~~> (#vk.8, 0) ) )
                      case d_0_fst
                      by step( contradiction /* impossible chain */ )
                    next
                      case d_0_snd
                      by step( solve( (#vr.8, 0) ~~> (#vk.8, 0) ) )
                    qed
                  qed
                next
                  case split_case_1186
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1187
                  by step( contradiction /* cyclic */ )
                next
                  case split_case_1188
                  by step( contradiction /* cyclic */ )
                qed
              next
                case tag1_case_03
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_04
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_05
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_06
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_07
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_08
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_09
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_10
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_11
                by step( contradiction /* cyclic */ )
              next
                case tag1_case_12
                by step( contradiction /* cyclic */ )
              qed
            qed
          qed
        next
          case split_case_04
          step( solve( !KD( (~r1.1⊕h((~k⊕~r1))) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_05
          step( solve( !KU( ~r1.1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_06
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_07
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_08
          step( solve( !KD( (x⊕~x.1) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_09
          step( solve( !KU( ~r1 ) @ #vk.3 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_10
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_11
          step( solve( !KD( (~k⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_12
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_13
          by step( solve( !KU( ~k ) @ #vk.4 ) )
        next
          case split_case_14
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_15
          step( solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_16
          step( solve( !KD( (x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_17
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        next
          case split_case_18
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_19
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_20
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_21
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_22
          step( solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.1, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.1, 0) ) )
            qed
          qed
        next
          case split_case_23
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_24
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_25
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_26
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_27
          step( solve( !KD( (~r1⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_28
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_29
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_30
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_31
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_32
          step( solve( !KD( (~k⊕z) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_33
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_34
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_35
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_36
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_37
          step( solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_38
          step( solve( !KD( (~x⊕x.1⊕x.2) ) ▶₀ #vk.2 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.2, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.2, 0) ) )
            qed
          qed
        next
          case split_case_39
          step( solve( !KD( (x⊕x.1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_40
          step( solve( !KD( (~x⊕x.1) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_41
          step( solve( !KD( (~x.1⊕x.2) ) ▶₀ #vk.3 ) )
            case acceptreader
            by step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
          next
            case initiatereader
            by step( contradiction /* impossible chain */ )
          next
            case tag1
            step( solve( (#vl.1, 0) ~~> (#vk.3, 0) ) )
              case d_0_fst
              by step( contradiction /* impossible chain */ )
            next
              case d_0_snd
              by step( solve( (#vr.5, 0) ~~> (#vk.3, 0) ) )
            qed
          qed
        next
          case split_case_42
          step( solve( !KU( ~r1 ) @ #vk.4 ) )
            case tag1
            by step( contradiction /* cyclic */ )
          qed
        qed
      next
        case tag1_case_3
        by step( solve( splitEqs(0) ) )
      qed
    qed
  qed
next
  case Rule_initiatereader
  by sorry
next
  case Rule_setup
  by sorry
next
  case Rule_tag1
  by sorry
qed

end