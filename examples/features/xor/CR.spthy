theory CR
begin

/*
A&B:
A->B: na
B->A: <h(na, k,nb), nb>
achieves recent aliveness
*/

builtins: hashing

rule Setup:
  [ Fr(~k) ]
--[ OnlyOnce() ]->
  [ !InitLTK(~k), !RespLTK(~k) ]

rule initiator:
  [ Fr(~na) ]
--[ Challenge(~na) ]->
  [ Out(~na), Initiated(~na) ]

rule responder:
  [ In(na), Fr(~nb), !RespLTK(~k) ]
--[ Response(na)]->
  [Out(<h(na,~k,~nb), ~nb>) ]

rule initiator2:
  [ Initiated(~na), !InitLTK(~k), In(<m,nb>) ]
--[ Alive(~na) , Eq(h(~na,~k,nb),m) ]->
  []

restriction equality:
  "All x y #i. Eq(x,y)@i ==> x=y"

/*
restriction unique:
  "All #i #j. OnlyOnce() @i & OnlyOnce() @j ==> #i = #j"
*/

// FINDS PROOF AUTOMATICALLY (2017-11-02, aa65be43cd4965ffa1c51a991d9139e98ec1662e)
lemma alive:
  "All x #i. Alive(x) @i ==> Ex #j. Response(x)@j"

// FINDS PROOF AUTOMATICALLY (2017-11-02, aa65be43cd4965ffa1c51a991d9139e98ec1662e)
lemma recentalive:
  "All x #i #k. Challenge(x)@i & Alive(x)@k ==> Ex #j. Response(x)@j & i < j & j < k"
  
// SHOWS CORRECT EXECUTION (2017-11-02, aa65be43cd4965ffa1c51a991d9139e98ec1662e)
lemma executable:
  exists-trace
  "Ex x #i #j. Alive(x)@i & Response(x)@j"

end
