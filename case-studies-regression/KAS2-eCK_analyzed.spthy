theory KAS2_eCK begin

// Function signature and definition of the equational theory E

functions: KDF/1, MAC/2, adec/2, aenc/2, fst/1, h/1, pair/2, pk/1, snd/1
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2

section{* KAS2 *}

rule (modulo E) Register_pk:
   [ Fr( ~ltkA ) ]
  -->
   [ !Ltk( $A, ~ltkA ), !Pk( $A, pk(~ltkA) ), Out( pk(~ltkA) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~m1 ), !Ltk( $I, ~lkI ), !Pk( $R, pkR ) ]
  --[ Sid( ~m1, $I, $R, <$I, $R, 'Init', aenc(~m1, pkR)> ) ]->
   [
   Init_1( ~m1, $I, $R, ~lkI, ~m1, aenc(~m1, pkR) ), !Ephk( ~m1, ~m1 ),
   Out( aenc(~m1, pkR) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Resp_1:
   [ Fr( ~m2 ), In( c1 ), !Ltk( $R, ~lkR ), !Pk( $I, pkI ) ]
  --[
  Sid( ~m2, $R, $I, <$R, $I, 'Resp', aenc(~m2, pkI), c1> ),
  Match( ~m2, <$I, $R, 'Init', c1> ),
  Match( ~m2, <$I, $R, 'Init', c1, aenc(~m2, pkI)> )
  ]->
   [
   Resp_1( ~m2, $I, $R, ~lkR, adec(c1, ~lkR), ~m2, c1, aenc(~m2, pkI) ),
   !Ephk( ~m2, ~m2 ),
   Out( <aenc(~m2, pkI), 
         MAC(KDF(<adec(c1, ~lkR), ~m2, $I, $R, c1, aenc(~m2, pkI)>),
             <'Resp', $R, $I, aenc(~m2, pkI), c1>)
        >
   )
   ]

  /*
  rule (modulo AC) Resp_1:
     [ Fr( ~m2.4 ), In( c1.5 ), !Ltk( $R.2, ~lkR.3 ), !Pk( $I.1, pkI.6 ) ]
    --[
    Sid( ~m2.4, $R.2, $I.1, <$R.2, $I.1, 'Resp', aenc(~m2.4, pkI.6), c1.5> ),
    Match( ~m2.4, <$I.1, $R.2, 'Init', c1.5> ),
    Match( ~m2.4, <$I.1, $R.2, 'Init', c1.5, aenc(~m2.4, pkI.6)> )
    ]->
     [
     Resp_1( ~m2.4, $I.1, $R.2, ~lkR.3, z.7, ~m2.4, c1.5, aenc(~m2.4, pkI.6)
     ),
     !Ephk( ~m2.4, ~m2.4 ),
     Out( <aenc(~m2.4, pkI.6), 
           MAC(KDF(<z.7, ~m2.4, $I.1, $R.2, c1.5, aenc(~m2.4, pkI.6)>),
               <'Resp', $R.2, $I.1, aenc(~m2.4, pkI.6), c1.5>)
          >
     )
     ]
  
    variants (modulo AC)
    1. ~lkR.3
             = ~lkR.38
       c1.5  = c1.40
       z.7   = adec(c1.40, ~lkR.38)
    
    2. ~lkR.3
             = ~lkR.42
       c1.5  = aenc(z.46, pk(~lkR.42))
       z.7   = z.46
  */

rule (modulo E) Init_2:
   [
   Init_1( ~m1, $I, $R, ~lkI, ~m1, c1 ),
   In( <c2, 
        MAC(KDF(<~m1, adec(c2, ~lkI), $I, $R, c1, c2>), <'Resp', $R, $I, c2, c1>)
       >
   )
   ]
  --[
  Sid( ~m1, $I, $R, <$I, $R, 'Init', c1, c2> ),
  Match( ~m1, <$R, $I, 'Resp', c2, c1> ),
  Accept( ~m1, KDF(<~m1, adec(c2, ~lkI), $I, $R, c1, c2>) )
  ]->
   [
   Out( MAC(KDF(<~m1, adec(c2, ~lkI), $I, $R, c1, c2>),
            <'Init', $I, $R, c1, c2>)
   ),
   !Sessk( ~m1, KDF(<~m1, adec(c2, ~lkI), $I, $R, c1, c2>) )
   ]

  /*
  rule (modulo AC) Init_2:
     [
     Init_1( ~m1.4, $I.1, $R.2, ~lkI.3, ~m1.4, c1.5 ),
     In( <c2.6, 
          MAC(KDF(<~m1.4, z.7, $I.1, $R.2, c1.5, c2.6>),
              <'Resp', $R.2, $I.1, c2.6, c1.5>)
         >
     )
     ]
    --[
    Sid( ~m1.4, $I.1, $R.2, <$I.1, $R.2, 'Init', c1.5, c2.6> ),
    Match( ~m1.4, <$R.2, $I.1, 'Resp', c2.6, c1.5> ),
    Accept( ~m1.4, KDF(<~m1.4, z.7, $I.1, $R.2, c1.5, c2.6>) )
    ]->
     [
     Out( MAC(KDF(<~m1.4, z.7, $I.1, $R.2, c1.5, c2.6>),
              <'Init', $I.1, $R.2, c1.5, c2.6>)
     ),
     !Sessk( ~m1.4, KDF(<~m1.4, z.7, $I.1, $R.2, c1.5, c2.6>) )
     ]
  
    variants (modulo AC)
    1. ~lkI.3
             = ~lkI.39
       c2.6  = c2.42
       z.7   = adec(c2.42, ~lkI.39)
    
    2. ~lkI.3
             = ~lkI.42
       c2.6  = aenc(z.46, pk(~lkI.42))
       z.7   = z.46
  */

rule (modulo E) Resp_2:
   [
   Resp_1( ~m2, $I, $R, ~lkR, m1, ~m2, c1, c2 ),
   In( MAC(KDF(<m1, ~m2, $I, $R, c1, c2>), <'Init', $I, $R, c1, c2>) )
   ]
  --[ Accept( ~m2, KDF(<m1, ~m2, $I, $R, c1, c2>) ) ]->
   [ !Sessk( ~m2, KDF(<m1, ~m2, $I, $R, c1, c2>) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Sessk_reveal:
   [ !Sessk( ~tid, k ) ] --[ SesskRev( ~tid ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ltk_reveal:
   [ !Ltk( $A, lkA ) ] --[ LtkRev( $A ) ]-> [ Out( lkA ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ephk_reveal:
   [ !Ephk( ~s, ~ek ) ] --[ EphkRev( ~s ) ]-> [ Out( ~ek ) ]

  /* has exactly the trivial AC variant */

lemma (modulo E) eCK_key_secrecy:
  all-traces
  "not(Ex #i1 #i2.1 #i3.2 s.3 A.4 B.5 minfo.6 k.7.
        (((((Sid( s.3, A.4, B.5, minfo.6 ) @ #i1) & (K( k.7 ) @ #i2.1)) &
           (Accept( s.3, k.7 ) @ #i3.2)) &
          (not(Ex #i4.8. SesskRev( s.3 ) @ #i4.8))) &
         (All ss.9 #i4.10 #i5.11 C.12 D.13 ms.14.
           ((Sid( ss.9, C.12, D.13, ms.14 ) @ #i4.10) &
            (Match( s.3, ms.14 ) @ #i5.11)) ==>
           (((not(Ex #i6.15 #i7.16 kpartner.17.
                   (Accept( ss.9, kpartner.17 ) @ #i6.15) & (SesskRev( ss.9 ) @ #i7.16))) &
             (not(Ex #i6.18 #i7.19.
                   (LtkRev( A.4 ) @ #i6.18) & (EphkRev( s.3 ) @ #i7.19)))) &
            (not(Ex #i6.20 #i7.21.
                  (LtkRev( B.5 ) @ #i6.20) & (EphkRev( ss.9 ) @ #i7.21)))))) &
        ((not(Ex ss.22 #i4.23 #i5.24 C.25 D.26 ms.27.
               (Sid( ss.22, C.25, D.26, ms.27 ) @ #i4.23) &
               (Match( s.3, ms.27 ) @ #i5.24))) ==>
         ((not(Ex #i6.28. LtkRev( B.5 ) @ #i6.28)) &
          (not(Ex #i6.29 #i7.30.
                (LtkRev( A.4 ) @ #i6.29) & (EphkRev( s.3 ) @ #i7.30))))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex #i1 #i2.1 #i3.2 s.3 A.4 B.5 minfo.6 k.7.
  (Sid( s.3, A.4, B.5, minfo.6 ) @ #i1) &
  (K( k.7 ) @ #i2.1) &
  (Accept( s.3, k.7 ) @ #i3.2)
 &
  (All #i4.8. (SesskRev( s.3 ) @ #i4.8) ==> F) &
  (All ss.9 #i4.10 #i5.11 C.12 D.13 ms.14.
    (Sid( ss.9, C.12, D.13, ms.14 ) @ #i4.10) &
    (Match( s.3, ms.14 ) @ #i5.11)
   ==>
    (All #i6.15 #i7.16 kpartner.17.
      (Accept( ss.9, kpartner.17 ) @ #i6.15) & (SesskRev( ss.9 ) @ #i7.16)
     ==>
      F) &
    (All #i6.18 #i7.19.
      (LtkRev( A.4 ) @ #i6.18) & (EphkRev( s.3 ) @ #i7.19)
     ==>
      F) &
    (All #i6.20 #i7.21.
      (LtkRev( B.5 ) @ #i6.20) & (EphkRev( ss.9 ) @ #i7.21)
     ==>
      F)) &
  ((Ex ss.22 #i4.23 #i5.24 C.25 D.26 ms.27.
     (Sid( ss.22, C.25, D.26, ms.27 ) @ #i4.23) &
     (Match( s.3, ms.27 ) @ #i5.24)
    &
     T) |
   ((All #i6.28. (LtkRev( B.5 ) @ #i6.28) ==> F) &
    (All #i6.29 #i7.30.
      (LtkRev( A.4 ) @ #i6.29) & (EphkRev( s.3 ) @ #i7.30)
     ==>
      F)))"
*/
simplify
solve( Disj(Ex ss.4 #i4.5 #i5.6 C.7 D.8 ms.9.
             (Sid( ss.4, C.7, D.8, ms.9 ) @ #i4.5) & (Match( s.3, ms.9 ) @ #i5.6)
            &
             T) |
           ((All #i6.6. (LtkRev( B.5 ) @ #i6.6) ==> F) &
            (All #i6.7 #i7.8.
              (LtkRev( A.4 ) @ #i6.7) & (EphkRev( s.3 ) @ #i7.8)
             ==>
              F)) )
  case case_1
  solve( Sid( s.3, A.4, B.5, minfo.6 ) @ #i1 )
    case Init_1
    solve( (#i1, 1)[!Ltk( $I.16, ~lkI.18 )] )
      case Register_pk
      solve( (#i1, 2)[!Pk( $R.17, pkR.20 )] )
        case Register_pk
        solve( Accept( ~m1.19, k.7 ) @ #i3.2 )
          case Init_2
          solve( (#i3.2, 0)[Init_1( ~m1.19, $I.41, $R.42, ~lkI.43, ~m1.19, c1.45
                            )] )
            case Init_1
            solve( Sid( ss.9, C.12, D.13, ms.14 ) @ #i4.10 )
              case Resp_1
              solve( (#i4.10, 2)[!Ltk( $R.78, ~lkR.79 )] )
                case Register_pk
                solve( (#i4.10, 3)[!Pk( $I.77, pkI.82 )] )
                  case Register_pk
                  solve( Match( ~m1.19,
                                <$R.78, $I.77, 'Resp', aenc(~m2.80, pk(~ltkA.103)), c1.81>
                         ) @ #i5.11 )
                    case Init_2
                    solve( (#i5.11, 0)[Init_1( ~m1.19, $I.77, $R.78, ~lkI.108, ~m1.19, c1.81
                                       )] )
                      case Init_1
                      solve( splitEqs(1) )
                        case split_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          solve( (#i2.1, 0)[!KU( f_.8,
                                                 KDF(<~m1.143, ~z.142, $I.16, $R.17, 
                                                      aenc(~m1.143, pk(~ltkA.144)), aenc(~z.142, pk(~lkI.141))
                                                     >)
                                            )] /* may loop */ )
                            case cKDF
                            solve( KU((#vr.148, 0), ~z.142) )
                              case Ephk_reveal
                              solve( KU((#vr.148, 0), ~m1.143) )
                                case Ephk_reveal
                                solve( KU((#vf.48, 0), MAC(KDF(<~m1.143, ~z.142, $I.16, $R.17, 
                                                                aenc(~m1.143, pk(~ltkA.144)), 
                                                                aenc(~z.142, pk(~lkI.141))>),
                                                           <'Resp', $R.17, $I.16, aenc(~z.142, pk(~lkI.141)), 
                                                            aenc(~m1.143, pk(~ltkA.144))>)) )
                                  case Resp_1
                                  solve( KU((#vf.48, 0), aenc(~z.142, pk(~lkI.141))) )
                                    case Resp_1
                                    solve( (#vf.84, 0)[!KU( f_.85, aenc(~m1.143, pk(~ltkA.255))
                                                       )] /* may loop */ )
                                      case Init_1
                                      SOLVED
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end