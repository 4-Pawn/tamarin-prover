theory STS_MAC_FIX1 begin

// Function signature and definition of the equational theory E

builtin: diffie-hellman
functions: KDF/1, fst/1, mac/2, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true()

section{* The Station-To-Station Protocol (MAC version, fix UKS attack with proof-of-possession of exponent) *}

rule (modulo E) Register_pk_normal:
   [ Fr( ~ltk ) ]
  -->
   [ !Ltk( $A, ~ltk ), !Pk( $A, pk(~ltk) ), Out( pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Register_pk_evil:
   [ In( ltk ) ]
  --[ Corrupt( $E ) ]->
   [ !Ltk( $E, ltk ), !Pk( $E, pk(ltk) ), Out( pk(ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~ekI ), !Ltk( $I, ~ltkI ) ]
  -->
   [ Init_1( $I, $R, ~ltkI, ~ekI ), Out( <$I, $R, 'g'^~ekI> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_2:
   [
   Init_1( $I, $R, ~ltkI, ~ekI ), !Pk( $R, pk(~ltkR) ),
   In( <$R, $I, Y, sign(<Y, 'g'^~ekI>, ~ltkR), 
        mac(Y^~ekI, sign(<Y, 'g'^~ekI>, ~ltkR))>
   )
   ]
  --[ AcceptedI( ~ekI, $I, $R, 'g'^~ekI, Y, KDF(Y^~ekI) ) ]->
   [
   Out( <$I, $R, sign(<'g'^~ekI, Y>, ~ltkI), 
         mac(Y^~ekI, sign(<'g'^~ekI, Y>, ~ltkI))>
   ),
   !SessionKey( ~ekI, $I, $R, KDF(Y^~ekI) )
   ]

  /*
  rule (modulo AC) Init_2:
     [
     Init_1( $I, $R, ~ltkI, ~ekI ), !Pk( $R, pk(~ltkR) ),
     In( <$R, $I, Y, sign(<Y, 'g'^~ekI>, ~ltkR), 
          mac(z, sign(<Y, 'g'^~ekI>, ~ltkR))>
     )
     ]
    --[ AcceptedI( ~ekI, $I, $R, 'g'^~ekI, Y, KDF(z) ) ]->
     [
     Out( <$I, $R, sign(<'g'^~ekI, Y>, ~ltkI), 
           mac(z, sign(<'g'^~ekI, Y>, ~ltkI))>
     ),
     !SessionKey( ~ekI, $I, $R, KDF(z) )
     ]
  
    variants (modulo AC)
    1. ~ekI  = ~ekI.80
       Y     = Y.83
       z     = Y.83^~ekI.80
    
    2. ~ekI  = ~ekI.88
       Y     = z.93^inv(~ekI.88)
       z     = z.93
    
    3. ~ekI  = ~ekI.271
       Y     = x.534^x.535
       z     = x.534^(~ekI.271*x.535)
    
    4. ~ekI  = ~ekI.271
       Y     = x.534^inv((~ekI.271*x.535))
       z     = x.534^inv(x.535)
    
    5. ~ekI  = ~ekI.271
       Y     = x.534^(x.535*inv(~ekI.271))
       z     = x.534^x.535
    
    6. ~ekI  = ~ekI.279
       Y     = x.549^(x.551*inv((~ekI.279*x.550)))
       z     = x.549^(x.551*inv(x.550))
  */

rule (modulo E) Resp_1:
   [ !Ltk( $R, ~ltkR ), Fr( ~ekR ), In( <$I, $R, X> ) ]
  -->
   [
   Resp_1( $I, $R, ~ltkR, ~ekR, X ),
   Out( <$R, $I, 'g'^~ekR, sign(<'g'^~ekR, X>, ~ltkR), 
         mac(X^~ekR, sign(<'g'^~ekR, X>, ~ltkR))>
   )
   ]

  /*
  rule (modulo AC) Resp_1:
     [ !Ltk( $R, ~ltkR ), Fr( ~ekR ), In( <$I, $R, X> ) ]
    -->
     [
     Resp_1( $I, $R, ~ltkR, ~ekR, X ),
     Out( <$R, $I, 'g'^~ekR, sign(<'g'^~ekR, X>, ~ltkR), 
           mac(z, sign(<'g'^~ekR, X>, ~ltkR))>
     )
     ]
  
    variants (modulo AC)
    1. ~ekR  = ~ekR.72
       X     = X.74
       z     = X.74^~ekR.72
    
    2. ~ekR  = ~ekR.80
       X     = z.84^inv(~ekR.80)
       z     = z.84
    
    3. ~ekR  = ~ekR.248
       X     = x.488^x.489
       z     = x.488^(~ekR.248*x.489)
    
    4. ~ekR  = ~ekR.248
       X     = x.488^inv((~ekR.248*x.489))
       z     = x.488^inv(x.489)
    
    5. ~ekR  = ~ekR.248
       X     = x.488^(x.489*inv(~ekR.248))
       z     = x.488^x.489
    
    6. ~ekR  = ~ekR.256
       X     = x.503^(x.505*inv((~ekR.256*x.504)))
       z     = x.503^(x.505*inv(x.504))
  */

rule (modulo E) Resp_2:
   [
   !Pk( $I, pk(~ltkI) ), Resp_1( $I, $R, ~ltkR, ~ekR, X ),
   In( <$I, $R, sign(<X, 'g'^~ekR>, ~ltkI), 
        mac(X^~ekR, sign(<X, 'g'^~ekR>, ~ltkI))>
   )
   ]
  --[ AcceptedR( ~ekR, $I, $R, X, 'g'^~ekR, KDF(X^~ekR) ) ]->
   [ !SessionKey( ~ekR, $I, $R, KDF(X^~ekR) ) ]

  /*
  rule (modulo AC) Resp_2:
     [
     !Pk( $I, pk(~ltkI) ), Resp_1( $I, $R, ~ltkR, ~ekR, X ),
     In( <$I, $R, sign(<X, 'g'^~ekR>, ~ltkI), 
          mac(z, sign(<X, 'g'^~ekR>, ~ltkI))>
     )
     ]
    --[ AcceptedR( ~ekR, $I, $R, X, 'g'^~ekR, KDF(z) ) ]->
     [ !SessionKey( ~ekR, $I, $R, KDF(z) ) ]
  
    variants (modulo AC)
    1. ~ekR  = ~ekR.80
       X     = X.83
       z     = X.83^~ekR.80
    
    2. ~ekR  = ~ekR.88
       X     = z.93^inv(~ekR.88)
       z     = z.93
    
    3. ~ekR  = ~ekR.271
       X     = x.534^x.535
       z     = x.534^(~ekR.271*x.535)
    
    4. ~ekR  = ~ekR.271
       X     = x.534^inv((~ekR.271*x.535))
       z     = x.534^inv(x.535)
    
    5. ~ekR  = ~ekR.271
       X     = x.534^(x.535*inv(~ekR.271))
       z     = x.534^x.535
    
    6. ~ekR  = ~ekR.279
       X     = x.549^(x.551*inv((~ekR.279*x.550)))
       z     = x.549^(x.551*inv(x.550))
  */

rule (modulo E) Sessionkey_Reveal:
   [ !SessionKey( ~tid, $I, $R, k ) ] --[ SesskRev( ~tid ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

lemma (modulo E) KI_Perfect_Forward_Secrecy_I:
  all-traces
  "not(Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
        (((((AcceptedI( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
            (not(Ex #r.8. Corrupt( I.1 ) @ #r.8))) &
           (not(Ex #r.9. Corrupt( R.2 ) @ #r.9))) &
          (K( sessKey.3 ) @ #k.5)) &
         (not(Ex #i3.10. SesskRev( ttest ) @ #i3.10))) &
        (not(Ex #i3.11 #i4.12 tpartner.13 kpartner.14.
              (SesskRev( tpartner.13 ) @ #i3.11) &
              (AcceptedR( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14
               ) @ #i4.12))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
  (AcceptedI( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
  (K( sessKey.3 ) @ #k.5)
 &
  (All #r.8. (Corrupt( I.1 ) @ #r.8) ==> F) &
  (All #r.9. (Corrupt( R.2 ) @ #r.9) ==> F) &
  (All #i3.10. (SesskRev( ttest ) @ #i3.10) ==> F) &
  (All #i3.11 #i4.12 tpartner.13 kpartner.14.
    (SesskRev( tpartner.13 ) @ #i3.11) &
    (AcceptedR( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14 ) @ #i4.12)
   ==>
    F)"
*/
simplify
solve( (#i1.4, 0)[Init_1( $I.8, $R.8, ~ltkI.8, ~ekI.8 )] )
  case Init_1_case_1
  solve( (#i1.4, 1)[!Pk( $R.8, pk(~ltkR.8) )] )
    case Register_pk_evil
    by contradiction // from formulas
  next
    case Register_pk_normal
    solve( KU((#vf.9, 0), mac(z.8, sign(<hkr.7, 'g'^~ekI.8>, ~ltkR.8))) )
      case Init_2_case_1
      solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekI.77*~ekI.78))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                   sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
          case Init_2
          by contradiction // cyclic
        next
          case cmac
          solve( (#vr.112, 0)[!KU( f_.115, 'g'^(~ekI.77*~ekI.78)
                              )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.145, 1)[!KU( f_.148, ~ekI.162 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.145, 1)[!KU( f_.148, ~ekI.161 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.121, 1), ~ekI.77) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.101, 0)[!KU( f_.102, ~ltkI.90 )] /* may loop */ )
          case fresh
          solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                     sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekI.78)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.168 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.98, 0)[!KU( f_.99, ~ltkR.90 )] /* may loop */ )
          case fresh
          solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                     sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekI.78)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.168 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.98, 0)[!KU( f_.99, ~ltkR.90 )] /* may loop */ )
          case fresh
          solve( (#vf.102, 0)[!KU( f_.103, ~ltkI.90 )] /* may loop */ )
            case fresh
            solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                       sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
              case Init_2
              by contradiction // cyclic
            next
              case cmac
              solve( (#vr.124, 0)[!KU( f_.127, 'g'^(~ekI.77*~ekI.78)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.174 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.133, 1), ~ekI.77) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                   sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
          case Init_2
          by contradiction // cyclic
        next
          case cmac
          solve( (#vr.112, 0)[!KU( f_.115, 'g'^(~ekI.77*~ekI.78)
                              )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.145, 1)[!KU( f_.148, ~ekI.162 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.145, 1)[!KU( f_.148, ~ekI.161 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.121, 1), ~ekI.77) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.103, 0)[!KU( f_.104, ~ltkR.90 )] /* may loop */ )
          case fresh
          solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                     sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekI.78)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.168 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.95, 0)[!KU( f_.96, ~ltkI.90 )] /* may loop */ )
          case fresh
          solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                     sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekI.78)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.168 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.95, 0)[!KU( f_.96, ~ltkI.90 )] /* may loop */ )
          case fresh
          solve( (#vf.104, 0)[!KU( f_.105, ~ltkR.90 )] /* may loop */ )
            case fresh
            solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                       sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
              case Init_2
              by contradiction // cyclic
            next
              case cmac
              solve( (#vr.124, 0)[!KU( f_.127, 'g'^(~ekI.77*~ekI.78)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.174 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.133, 1), ~ekI.77) )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( (#vr.82, 0)[!KU( f_.84, 'g'^(~ekI.77*~ekI.78) )] /* may loop */ )
          case Init_1_case_1
          by solve( (#vr.113, 1)[!KU( f_.116, ~ekI.130 )] /* may loop */ )
        next
          case Init_1_case_2
          by solve( (#vr.113, 1)[!KU( f_.116, ~ekI.129 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.89, 1), ~ekI.77) )
        qed
      qed
    next
      case Init_2_case_2
      by solve( (#vf.54, 0)[!KU( f_.55, ~ltkR.8 )] /* may loop */ )
    next
      case Init_2_case_3
      solve( (#vf.51, 0)[!KU( f_.52, ~ltkR.43 )] /* may loop */ )
        case fresh
        solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekI.77*~ekI.78))
                         )] /* may loop */ )
          case Sessionkey_Reveal_case_1
          solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                     sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekI.78)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.168 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_2
          solve( (#vf.107, 0)[!KU( f_.108, ~ltkI.96 )] /* may loop */ )
            case fresh
            solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                       sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
              case cmac
              solve( (#vr.124, 0)[!KU( f_.127, 'g'^(~ekI.77*~ekI.78)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.174 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.133, 1), ~ekI.77) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_3
          solve( (#vf.104, 0)[!KU( f_.105, ~ltkR.96 )] /* may loop */ )
            case fresh
            solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                       sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
              case cmac
              solve( (#vr.124, 0)[!KU( f_.127, 'g'^(~ekI.77*~ekI.78)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.174 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.133, 1), ~ekI.77) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_4
          solve( (#vf.104, 0)[!KU( f_.105, ~ltkR.96 )] /* may loop */ )
            case fresh
            solve( (#vf.108, 0)[!KU( f_.109, ~ltkI.96 )] /* may loop */ )
              case fresh
              solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                         sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
                case cmac
                solve( (#vr.130, 0)[!KU( f_.133, 'g'^(~ekI.77*~ekI.78)
                                    )] /* may loop */ )
                  case Init_1_case_1
                  by solve( (#vr.163, 1)[!KU( f_.166, ~ekI.180 )] /* may loop */ )
                next
                  case Init_1_case_2
                  by solve( (#vr.163, 1)[!KU( f_.166, ~ekI.179 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.139, 1), ~ekI.77) )
                qed
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_5
          solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                     sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekI.78)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.168 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_6
          solve( (#vf.109, 0)[!KU( f_.110, ~ltkR.96 )] /* may loop */ )
            case fresh
            solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                       sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
              case cmac
              solve( (#vr.124, 0)[!KU( f_.127, 'g'^(~ekI.77*~ekI.78)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.174 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.133, 1), ~ekI.77) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_7
          solve( (#vf.101, 0)[!KU( f_.102, ~ltkI.96 )] /* may loop */ )
            case fresh
            solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                       sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
              case cmac
              solve( (#vr.124, 0)[!KU( f_.127, 'g'^(~ekI.77*~ekI.78)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.174 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.133, 1), ~ekI.77) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_8
          solve( (#vf.101, 0)[!KU( f_.102, ~ltkI.96 )] /* may loop */ )
            case fresh
            solve( (#vf.110, 0)[!KU( f_.111, ~ltkR.96 )] /* may loop */ )
              case fresh
              solve( KU((#vf.44, 0), mac('g'^(~ekI.77*~ekI.78),
                                         sign(<'g'^~ekI.77, 'g'^~ekI.78>, ~ltkR.43))) )
                case cmac
                solve( (#vr.130, 0)[!KU( f_.133, 'g'^(~ekI.77*~ekI.78)
                                    )] /* may loop */ )
                  case Init_1_case_1
                  by solve( (#vr.163, 1)[!KU( f_.166, ~ekI.180 )] /* may loop */ )
                next
                  case Init_1_case_2
                  by solve( (#vr.163, 1)[!KU( f_.166, ~ekI.179 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.139, 1), ~ekI.77) )
                qed
              qed
            qed
          qed
        next
          case cKDF
          solve( (#vr.88, 0)[!KU( f_.90, 'g'^(~ekI.77*~ekI.78) )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.119, 1)[!KU( f_.122, ~ekI.136 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.119, 1)[!KU( f_.122, ~ekI.135 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.95, 1), ~ekI.77) )
          qed
        qed
      qed
    next
      case Init_2_case_4
      solve( (#vf.51, 0)[!KU( f_.52, ~ltkR.43 )] /* may loop */ )
        case fresh
        by solve( (#vf.55, 0)[!KU( f_.56, ~ltkR.8 )] /* may loop */ )
      qed
    next
      case Resp_1_case_1
      solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekI.77*~ekR.78))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.91, 0), mac('g'^(~ekI.77*~ekR.78),
                                   sign(<x.106^x.107, 'g'^~tid.88>, ~ltkR.90))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.131, 0)[!KU( f_.132, ~ltkR.90 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.128, 0)[!KU( f_.129, ~ltkR.120 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.128, 0)[!KU( f_.129, ~ltkR.120 )] /* may loop */ )
            case fresh
            by solve( (#vf.132, 0)[!KU( f_.133, ~ltkR.90 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          solve( splitEqs(1) )
            case split
            by contradiction // from formulas
          qed
        next
          case Resp_1_case_2
          by solve( (#vf.126, 0)[!KU( f_.127, ~ltkR.90 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.112, 0)[!KU( f_.115, 'g'^(~ekI.77*~ekR.78)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.145, 1)[!KU( f_.148, ~ekR.162 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.153, 1)[!KU( f_.156, ~ekI.161 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.121, 1), ~ekI.77) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.101, 0)[!KU( f_.102, ~ltkI.90 )] /* may loop */ )
          case fresh
          solve( KU((#vf.91, 0), mac('g'^(~ekI.77*~ekR.78),
                                     sign(<'g'^x.107, 'g'^~tid.88>, ~ltkR.90))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.137, 0)[!KU( f_.138, ~ltkR.90 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.134, 0)[!KU( f_.135, ~ltkR.126 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.134, 0)[!KU( f_.135, ~ltkR.126 )] /* may loop */ )
              case fresh
              by solve( (#vf.138, 0)[!KU( f_.139, ~ltkR.90 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.132, 0)[!KU( f_.133, ~ltkR.90 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekR.78)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekR.168 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.159, 1)[!KU( f_.162, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.98, 0)[!KU( f_.99, ~ltkR.90 )] /* may loop */ )
          case fresh
          solve( KU((#vf.91, 0), mac('g'^(~ekI.77*~ekR.78),
                                     sign(<'g'^x.107, 'g'^~tid.88>, ~ltkR.90))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.134, 0)[!KU( f_.135, ~ltkR.126 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekR.78)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekR.168 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.159, 1)[!KU( f_.162, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.98, 0)[!KU( f_.99, ~ltkR.90 )] /* may loop */ )
          case fresh
          solve( (#vf.102, 0)[!KU( f_.103, ~ltkI.90 )] /* may loop */ )
            case fresh
            solve( KU((#vf.91, 0), mac('g'^(~ekI.77*~ekR.78),
                                       sign(<'g'^x.107, 'g'^~tid.88>, ~ltkR.90))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.140, 0)[!KU( f_.141, ~ltkR.132 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.124, 0)[!KU( f_.127, 'g'^(~ekI.77*~ekR.78)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekR.174 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.165, 1)[!KU( f_.168, ~ekI.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.133, 1), ~ekI.77) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.91, 0), mac('g'^(~ekI.77*~ekR.78),
                                   sign(<x.106^x.107, 'g'^~tid.88>, ~ltkI.90))) )
          case Init_2_case_1
          solve( splitEqs(1) )
            case split
            by contradiction // from formulas
          qed
        next
          case Init_2_case_2
          by solve( (#vf.131, 0)[!KU( f_.132, ~ltkI.90 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.128, 0)[!KU( f_.129, ~ltkR.120 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.128, 0)[!KU( f_.129, ~ltkR.120 )] /* may loop */ )
            case fresh
            by solve( (#vf.132, 0)[!KU( f_.133, ~ltkI.90 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          by solve( splitEqs(1) )
        next
          case Resp_1_case_2
          by solve( (#vf.126, 0)[!KU( f_.127, ~ltkI.90 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.112, 0)[!KU( f_.115, 'g'^(~ekI.77*~ekR.78)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.145, 1)[!KU( f_.148, ~ekR.162 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.153, 1)[!KU( f_.156, ~ekI.161 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.121, 1), ~ekI.77) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.103, 0)[!KU( f_.104, ~ltkR.90 )] /* may loop */ )
          case fresh
          solve( KU((#vf.91, 0), mac('g'^(~ekI.77*~ekR.78),
                                     sign(<'g'^x.107, 'g'^~tid.88>, ~ltkI.90))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.137, 0)[!KU( f_.138, ~ltkI.90 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.134, 0)[!KU( f_.135, ~ltkR.126 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.134, 0)[!KU( f_.135, ~ltkR.126 )] /* may loop */ )
              case fresh
              by solve( (#vf.138, 0)[!KU( f_.139, ~ltkI.90 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.132, 0)[!KU( f_.133, ~ltkI.90 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekR.78)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekR.168 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.159, 1)[!KU( f_.162, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.95, 0)[!KU( f_.96, ~ltkI.90 )] /* may loop */ )
          case fresh
          solve( KU((#vf.91, 0), mac('g'^(~ekI.77*~ekR.78),
                                     sign(<'g'^x.107, 'g'^~tid.88>, ~ltkI.90))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.134, 0)[!KU( f_.135, ~ltkR.126 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.118, 0)[!KU( f_.121, 'g'^(~ekI.77*~ekR.78)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.151, 1)[!KU( f_.154, ~ekR.168 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.159, 1)[!KU( f_.162, ~ekI.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.127, 1), ~ekI.77) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.95, 0)[!KU( f_.96, ~ltkI.90 )] /* may loop */ )
          case fresh
          solve( (#vf.104, 0)[!KU( f_.105, ~ltkR.90 )] /* may loop */ )
            case fresh
            solve( KU((#vf.91, 0), mac('g'^(~ekI.77*~ekR.78),
                                       sign(<'g'^x.107, 'g'^~tid.88>, ~ltkI.90))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.140, 0)[!KU( f_.141, ~ltkR.132 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.124, 0)[!KU( f_.127, 'g'^(~ekI.77*~ekR.78)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.157, 1)[!KU( f_.160, ~ekR.174 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.165, 1)[!KU( f_.168, ~ekI.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.133, 1), ~ekI.77) )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( (#vr.82, 0)[!KU( f_.84, 'g'^(~ekI.77*~ekR.78) )] /* may loop */ )
          case Init_1
          by solve( (#vr.113, 1)[!KU( f_.116, ~ekR.130 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.121, 1)[!KU( f_.124, ~ekI.129 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.89, 1), ~ekI.77) )
        qed
      qed
    next
      case Resp_1_case_2
      by solve( (#vf.49, 0)[!KU( f_.50, ~ltkR.8 )] /* may loop */ )
    next
      case cmac
      solve( KU((#vf.9, 0), sign(<hkr.7, 'g'^~ekI.8>, ~ltkR.8)) )
        case Init_2_case_1
        solve( (#vr.35, 0)[!KU( f_.38, 'g'^(~ekI.92*~ekI.93) )] /* may loop */ )
          case Init_1_case_1
          by solve( (#vr.122, 1)[!KU( f_.125, ~ekI.139 )] /* may loop */ )
        next
          case Init_1_case_2
          by solve( (#vr.122, 1)[!KU( f_.125, ~ekI.138 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.98, 1), ~ekI.92) )
        qed
      next
        case Init_2_case_2
        by solve( (#vf.63, 0)[!KU( f_.64, ~ltkR.8 )] /* may loop */ )
      next
        case Init_2_case_3
        solve( (#vf.60, 0)[!KU( f_.61, ~ltkR.52 )] /* may loop */ )
          case fresh
          solve( (#vr.35, 0)[!KU( f_.38, 'g'^(~ekI.92*~ekI.93) )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.128, 1)[!KU( f_.131, ~ekI.145 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.128, 1)[!KU( f_.131, ~ekI.144 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.104, 1), ~ekI.92) )
          qed
        qed
      next
        case Init_2_case_4
        solve( (#vf.60, 0)[!KU( f_.61, ~ltkR.52 )] /* may loop */ )
          case fresh
          by solve( (#vf.64, 0)[!KU( f_.65, ~ltkR.8 )] /* may loop */ )
        qed
      next
        case Resp_1_case_1
        solve( (#vr.35, 0)[!KU( f_.38, 'g'^(~ekI.92*~ekR.93) )] /* may loop */ )
          case Init_1
          by solve( (#vr.122, 1)[!KU( f_.125, ~ekR.139 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.130, 1)[!KU( f_.133, ~ekI.138 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.98, 1), ~ekI.92) )
        qed
      next
        case Resp_1_case_2
        by solve( (#vf.58, 0)[!KU( f_.59, ~ltkR.8 )] /* may loop */ )
      next
        case csign
        by solve( (#vr.44, 1)[!KU( f_.48, ~ltkR.8 )] /* may loop */ )
      qed
    qed
  qed
next
  case Init_1_case_2
  by contradiction // from formulas
qed

lemma (modulo E) KI_Perfect_Forward_Secrecy_R:
  all-traces
  "not(Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
        (((((AcceptedR( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
            (not(Ex #r.8. Corrupt( I.1 ) @ #r.8))) &
           (not(Ex #r.9. Corrupt( R.2 ) @ #r.9))) &
          (K( sessKey.3 ) @ #k.5)) &
         (not(Ex #i2.10. SesskRev( ttest ) @ #i2.10))) &
        (not(Ex #i2.11 #i3.12 tpartner.13 kpartner.14.
              (SesskRev( tpartner.13 ) @ #i2.11) &
              (AcceptedI( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14
               ) @ #i3.12))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
  (AcceptedR( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
  (K( sessKey.3 ) @ #k.5)
 &
  (All #r.8. (Corrupt( I.1 ) @ #r.8) ==> F) &
  (All #r.9. (Corrupt( R.2 ) @ #r.9) ==> F) &
  (All #i2.10. (SesskRev( ttest ) @ #i2.10) ==> F) &
  (All #i2.11 #i3.12 tpartner.13 kpartner.14.
    (SesskRev( tpartner.13 ) @ #i2.11) &
    (AcceptedI( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14 ) @ #i3.12)
   ==>
    F)"
*/
simplify
solve( (#i1.4, 0)[!Pk( $I.8, pk(~ltkI.8) )] )
  case Register_pk_evil
  by contradiction // from formulas
next
  case Register_pk_normal
  solve( (#i1.4, 1)[Resp_1( $I.8, $R.8, ~ltkR.8, ~ekR.8, hki.6 )] )
    case Resp_1_case_1
    solve( KU((#vf.9, 0), mac(z.8, sign(<hki.6, 'g'^~ekR.8>, ~ltkI.8))) )
      case Init_2_case_1
      solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekR.86*~ekI.87))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                   sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
          case Resp_1
          solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekI.87),
                                      sign(<'g'^x.116, 'g'^~tid.97>, ~ltkR.99))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.183, 0)[!KU( f_.184, ~ltkR.99 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.180, 0)[!KU( f_.181, ~ltkR.172 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.180, 0)[!KU( f_.181, ~ltkR.172 )] /* may loop */ )
              case fresh
              by solve( (#vf.184, 0)[!KU( f_.185, ~ltkR.99 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            solve( splitEqs(1) )
              case split
              by contradiction // from formulas
            qed
          next
            case Resp_1_case_2
            by solve( (#vf.178, 0)[!KU( f_.179, ~ltkR.99 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.164, 0)[!KU( f_.167, 'g'^(~ekR.86*~ekI.87)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.197, 1)[!KU( f_.200, ~ekR.213 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.205, 1)[!KU( f_.208, ~ekI.214 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.173, 1), ~ekR.86) )
            qed
          qed
        next
          case cmac
          solve( (#vr.121, 0)[!KU( f_.124, 'g'^(~ekR.86*~ekI.87)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.154, 1)[!KU( f_.157, ~ekR.170 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.162, 1)[!KU( f_.165, ~ekI.171 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.130, 1), ~ekR.86) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.110, 0)[!KU( f_.111, ~ltkI.99 )] /* may loop */ )
          case fresh
          solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                     sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
            case Resp_1
            solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekI.87),
                                        sign(<'g'^x.116, 'g'^~tid.97>, ~ltkR.99))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( (#vf.189, 0)[!KU( f_.190, ~ltkR.99 )] /* may loop */ )
            next
              case Init_2_case_3
              solve( (#vf.186, 0)[!KU( f_.187, ~ltkR.178 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Init_2_case_4
              solve( (#vf.186, 0)[!KU( f_.187, ~ltkR.178 )] /* may loop */ )
                case fresh
                by solve( (#vf.190, 0)[!KU( f_.191, ~ltkR.99 )] /* may loop */ )
              qed
            next
              case Resp_1_case_1
              by solve( splitEqs(1) )
            next
              case Resp_1_case_2
              by solve( (#vf.184, 0)[!KU( f_.185, ~ltkR.99 )] /* may loop */ )
            next
              case cmac
              solve( (#vr.170, 0)[!KU( f_.173, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.203, 1)[!KU( f_.206, ~ekR.219 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.211, 1)[!KU( f_.214, ~ekI.220 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.179, 1), ~ekR.86) )
              qed
            qed
          next
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekI.87)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.160, 1)[!KU( f_.163, ~ekR.176 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekI.177 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.107, 0)[!KU( f_.108, ~ltkR.99 )] /* may loop */ )
          case fresh
          solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                     sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
            case Resp_1
            solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekI.87),
                                        sign(<'g'^x.116, 'g'^~tid.97>, ~ltkR.99))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.186, 0)[!KU( f_.187, ~ltkR.178 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.170, 0)[!KU( f_.173, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.203, 1)[!KU( f_.206, ~ekR.219 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.211, 1)[!KU( f_.214, ~ekI.220 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.179, 1), ~ekR.86) )
              qed
            qed
          next
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekI.87)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.160, 1)[!KU( f_.163, ~ekR.176 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekI.177 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.107, 0)[!KU( f_.108, ~ltkR.99 )] /* may loop */ )
          case fresh
          solve( (#vf.111, 0)[!KU( f_.112, ~ltkI.99 )] /* may loop */ )
            case fresh
            solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                       sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
              case Resp_1
              solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekI.87),
                                          sign(<'g'^x.116, 'g'^~tid.97>, ~ltkR.99))) )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                solve( (#vf.192, 0)[!KU( f_.193, ~ltkR.184 )] /* may loop */ )
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( (#vr.176, 0)[!KU( f_.179, 'g'^(~ekR.86*~ekI.87)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.209, 1)[!KU( f_.212, ~ekR.225 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.217, 1)[!KU( f_.220, ~ekI.226 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.185, 1), ~ekR.86) )
                qed
              qed
            next
              case cmac
              solve( (#vr.133, 0)[!KU( f_.136, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.166, 1)[!KU( f_.169, ~ekR.182 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekI.183 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.142, 1), ~ekR.86) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                   sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
          case Resp_1
          solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekI.87),
                                      sign(<'g'^x.116, 'g'^~tid.97>, ~ltkI.99))) )
            case Init_2_case_1
            solve( splitEqs(1) )
              case split
              by contradiction // from formulas
            qed
          next
            case Init_2_case_2
            by solve( (#vf.183, 0)[!KU( f_.184, ~ltkI.99 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.180, 0)[!KU( f_.181, ~ltkR.172 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.180, 0)[!KU( f_.181, ~ltkR.172 )] /* may loop */ )
              case fresh
              by solve( (#vf.184, 0)[!KU( f_.185, ~ltkI.99 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.178, 0)[!KU( f_.179, ~ltkI.99 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.164, 0)[!KU( f_.167, 'g'^(~ekR.86*~ekI.87)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.197, 1)[!KU( f_.200, ~ekR.213 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.205, 1)[!KU( f_.208, ~ekI.214 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.173, 1), ~ekR.86) )
            qed
          qed
        next
          case cmac
          solve( (#vr.121, 0)[!KU( f_.124, 'g'^(~ekR.86*~ekI.87)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.154, 1)[!KU( f_.157, ~ekR.170 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.162, 1)[!KU( f_.165, ~ekI.171 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.130, 1), ~ekR.86) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.112, 0)[!KU( f_.113, ~ltkR.99 )] /* may loop */ )
          case fresh
          solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                     sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
            case Resp_1
            solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekI.87),
                                        sign(<'g'^x.116, 'g'^~tid.97>, ~ltkI.99))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( (#vf.189, 0)[!KU( f_.190, ~ltkI.99 )] /* may loop */ )
            next
              case Init_2_case_3
              solve( (#vf.186, 0)[!KU( f_.187, ~ltkR.178 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Init_2_case_4
              solve( (#vf.186, 0)[!KU( f_.187, ~ltkR.178 )] /* may loop */ )
                case fresh
                by solve( (#vf.190, 0)[!KU( f_.191, ~ltkI.99 )] /* may loop */ )
              qed
            next
              case Resp_1_case_1
              by solve( splitEqs(1) )
            next
              case Resp_1_case_2
              by solve( (#vf.184, 0)[!KU( f_.185, ~ltkI.99 )] /* may loop */ )
            next
              case cmac
              solve( (#vr.170, 0)[!KU( f_.173, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.203, 1)[!KU( f_.206, ~ekR.219 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.211, 1)[!KU( f_.214, ~ekI.220 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.179, 1), ~ekR.86) )
              qed
            qed
          next
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekI.87)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.160, 1)[!KU( f_.163, ~ekR.176 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekI.177 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.104, 0)[!KU( f_.105, ~ltkI.99 )] /* may loop */ )
          case fresh
          solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                     sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
            case Resp_1
            solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekI.87),
                                        sign(<'g'^x.116, 'g'^~tid.97>, ~ltkI.99))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.186, 0)[!KU( f_.187, ~ltkR.178 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.170, 0)[!KU( f_.173, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.203, 1)[!KU( f_.206, ~ekR.219 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.211, 1)[!KU( f_.214, ~ekI.220 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.179, 1), ~ekR.86) )
              qed
            qed
          next
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekI.87)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.160, 1)[!KU( f_.163, ~ekR.176 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekI.177 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.104, 0)[!KU( f_.105, ~ltkI.99 )] /* may loop */ )
          case fresh
          solve( (#vf.113, 0)[!KU( f_.114, ~ltkR.99 )] /* may loop */ )
            case fresh
            solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                       sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
              case Resp_1
              solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekI.87),
                                          sign(<'g'^x.116, 'g'^~tid.97>, ~ltkI.99))) )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                solve( (#vf.192, 0)[!KU( f_.193, ~ltkR.184 )] /* may loop */ )
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( (#vr.176, 0)[!KU( f_.179, 'g'^(~ekR.86*~ekI.87)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.209, 1)[!KU( f_.212, ~ekR.225 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.217, 1)[!KU( f_.220, ~ekI.226 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.185, 1), ~ekR.86) )
                qed
              qed
            next
              case cmac
              solve( (#vr.133, 0)[!KU( f_.136, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.166, 1)[!KU( f_.169, ~ekR.182 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekI.183 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.142, 1), ~ekR.86) )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( (#vr.91, 0)[!KU( f_.93, 'g'^(~ekR.86*~ekI.87) )] /* may loop */ )
          case Init_1
          by solve( (#vr.122, 1)[!KU( f_.125, ~ekR.138 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.130, 1)[!KU( f_.133, ~ekI.139 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.98, 1), ~ekR.86) )
        qed
      qed
    next
      case Init_2_case_2
      by solve( (#vf.57, 0)[!KU( f_.58, ~ltkI.8 )] /* may loop */ )
    next
      case Init_2_case_3
      solve( (#vf.54, 0)[!KU( f_.55, ~ltkR.46 )] /* may loop */ )
        case fresh
        solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekR.86*~ekI.87))
                         )] /* may loop */ )
          case Sessionkey_Reveal_case_1
          solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                     sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekI.87)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.160, 1)[!KU( f_.163, ~ekR.176 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekI.177 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_2
          solve( (#vf.116, 0)[!KU( f_.117, ~ltkI.105 )] /* may loop */ )
            case fresh
            solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                       sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
              case cmac
              solve( (#vr.133, 0)[!KU( f_.136, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.166, 1)[!KU( f_.169, ~ekR.182 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekI.183 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.142, 1), ~ekR.86) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_3
          solve( (#vf.113, 0)[!KU( f_.114, ~ltkR.105 )] /* may loop */ )
            case fresh
            solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                       sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
              case cmac
              solve( (#vr.133, 0)[!KU( f_.136, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.166, 1)[!KU( f_.169, ~ekR.182 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekI.183 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.142, 1), ~ekR.86) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_4
          solve( (#vf.113, 0)[!KU( f_.114, ~ltkR.105 )] /* may loop */ )
            case fresh
            solve( (#vf.117, 0)[!KU( f_.118, ~ltkI.105 )] /* may loop */ )
              case fresh
              solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                         sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
                case cmac
                solve( (#vr.139, 0)[!KU( f_.142, 'g'^(~ekR.86*~ekI.87)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.172, 1)[!KU( f_.175, ~ekR.188 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.180, 1)[!KU( f_.183, ~ekI.189 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.148, 1), ~ekR.86) )
                qed
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_5
          solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                     sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekI.87)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.160, 1)[!KU( f_.163, ~ekR.176 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekI.177 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_6
          solve( (#vf.118, 0)[!KU( f_.119, ~ltkR.105 )] /* may loop */ )
            case fresh
            solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                       sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
              case cmac
              solve( (#vr.133, 0)[!KU( f_.136, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.166, 1)[!KU( f_.169, ~ekR.182 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekI.183 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.142, 1), ~ekR.86) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_7
          solve( (#vf.110, 0)[!KU( f_.111, ~ltkI.105 )] /* may loop */ )
            case fresh
            solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                       sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
              case cmac
              solve( (#vr.133, 0)[!KU( f_.136, 'g'^(~ekR.86*~ekI.87)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.166, 1)[!KU( f_.169, ~ekR.182 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekI.183 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.142, 1), ~ekR.86) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_8
          solve( (#vf.110, 0)[!KU( f_.111, ~ltkI.105 )] /* may loop */ )
            case fresh
            solve( (#vf.119, 0)[!KU( f_.120, ~ltkR.105 )] /* may loop */ )
              case fresh
              solve( KU((#vf.47, 0), mac('g'^(~ekR.86*~ekI.87),
                                         sign(<'g'^~ekR.86, 'g'^~ekI.87>, ~ltkR.46))) )
                case cmac
                solve( (#vr.139, 0)[!KU( f_.142, 'g'^(~ekR.86*~ekI.87)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.172, 1)[!KU( f_.175, ~ekR.188 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.180, 1)[!KU( f_.183, ~ekI.189 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.148, 1), ~ekR.86) )
                qed
              qed
            qed
          qed
        next
          case cKDF
          solve( (#vr.97, 0)[!KU( f_.99, 'g'^(~ekR.86*~ekI.87) )] /* may loop */ )
            case Init_1
            by solve( (#vr.128, 1)[!KU( f_.131, ~ekR.144 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.136, 1)[!KU( f_.139, ~ekI.145 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.104, 1), ~ekR.86) )
          qed
        qed
      qed
    next
      case Init_2_case_4
      solve( (#vf.54, 0)[!KU( f_.55, ~ltkR.46 )] /* may loop */ )
        case fresh
        by solve( (#vf.58, 0)[!KU( f_.59, ~ltkI.8 )] /* may loop */ )
      qed
    next
      case Resp_1_case_1
      solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekR.86*~ekR.87))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekR.87),
                                    sign(<x.115^x.116, 'g'^~tid.97>, ~ltkR.99))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.140, 0)[!KU( f_.141, ~ltkR.99 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.137, 0)[!KU( f_.138, ~ltkR.129 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.137, 0)[!KU( f_.138, ~ltkR.129 )] /* may loop */ )
            case fresh
            by solve( (#vf.141, 0)[!KU( f_.142, ~ltkR.99 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          by solve( splitEqs(1) )
        next
          case Resp_1_case_2
          by solve( (#vf.135, 0)[!KU( f_.136, ~ltkR.99 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.121, 0)[!KU( f_.124, 'g'^(~ekR.86*~ekR.87)
                              )] /* may loop */ )
            case Resp_1_case_1
            by solve( (#vr.162, 1)[!KU( f_.165, ~ekR.171 )] /* may loop */ )
          next
            case Resp_1_case_2
            by solve( (#vr.162, 1)[!KU( f_.165, ~ekR.170 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.130, 1), ~ekR.86) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.110, 0)[!KU( f_.111, ~ltkI.99 )] /* may loop */ )
          case fresh
          solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekR.87),
                                      sign(<'g'^x.116, 'g'^~tid.97>, ~ltkR.99))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.146, 0)[!KU( f_.147, ~ltkR.99 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.143, 0)[!KU( f_.144, ~ltkR.135 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.143, 0)[!KU( f_.144, ~ltkR.135 )] /* may loop */ )
              case fresh
              by solve( (#vf.147, 0)[!KU( f_.148, ~ltkR.99 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.141, 0)[!KU( f_.142, ~ltkR.99 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekR.87)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekR.177 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekR.176 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.107, 0)[!KU( f_.108, ~ltkR.99 )] /* may loop */ )
          case fresh
          solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekR.87),
                                      sign(<'g'^x.116, 'g'^~tid.97>, ~ltkR.99))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.143, 0)[!KU( f_.144, ~ltkR.135 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekR.87)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekR.177 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekR.176 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.107, 0)[!KU( f_.108, ~ltkR.99 )] /* may loop */ )
          case fresh
          solve( (#vf.111, 0)[!KU( f_.112, ~ltkI.99 )] /* may loop */ )
            case fresh
            solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekR.87),
                                        sign(<'g'^x.116, 'g'^~tid.97>, ~ltkR.99))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.149, 0)[!KU( f_.150, ~ltkR.141 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.133, 0)[!KU( f_.136, 'g'^(~ekR.86*~ekR.87)
                                  )] /* may loop */ )
                case Resp_1_case_1
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekR.183 )] /* may loop */ )
              next
                case Resp_1_case_2
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekR.182 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.142, 1), ~ekR.86) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekR.87),
                                    sign(<x.115^x.116, 'g'^~tid.97>, ~ltkI.99))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.140, 0)[!KU( f_.141, ~ltkI.99 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.137, 0)[!KU( f_.138, ~ltkR.129 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.137, 0)[!KU( f_.138, ~ltkR.129 )] /* may loop */ )
            case fresh
            by solve( (#vf.141, 0)[!KU( f_.142, ~ltkI.99 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          solve( splitEqs(1) )
            case split_case_1
            by contradiction // from formulas
          next
            case split_case_2
            solve( KU((#vf.9, 0), sign(<'g'^~ekR.166, 'g'^~ekR.165>, ~ltkI.8)) )
              case Resp_1
              solve( KU((#vf.28, 0), 'g'^~ekR.214) )
                case Resp_1
                solve( KU((#vf.47, 0), 'g'^~ekR.213) )
                  case Resp_1
                  by contradiction // cyclic
                next
                  case cexp
                  by solve( (#vr.255, 1)[!KU( f_.258, ~ekR.213 )] /* may loop */ )
                qed
              next
                case cexp
                by solve( (#vr.219, 1)[!KU( f_.222, ~ekR.214 )] /* may loop */ )
              qed
            next
              case csign
              by solve( (#vr.171, 1)[!KU( f_.175, ~ltkI.8 )] /* may loop */ )
            qed
          qed
        next
          case Resp_1_case_2
          by solve( (#vf.135, 0)[!KU( f_.136, ~ltkI.99 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.121, 0)[!KU( f_.124, 'g'^(~ekR.86*~ekR.87)
                              )] /* may loop */ )
            case Resp_1_case_1
            by solve( (#vr.162, 1)[!KU( f_.165, ~ekR.171 )] /* may loop */ )
          next
            case Resp_1_case_2
            by solve( (#vr.162, 1)[!KU( f_.165, ~ekR.170 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.130, 1), ~ekR.86) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.112, 0)[!KU( f_.113, ~ltkR.99 )] /* may loop */ )
          case fresh
          solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekR.87),
                                      sign(<'g'^x.116, 'g'^~tid.97>, ~ltkI.99))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.146, 0)[!KU( f_.147, ~ltkI.99 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.143, 0)[!KU( f_.144, ~ltkR.135 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.143, 0)[!KU( f_.144, ~ltkR.135 )] /* may loop */ )
              case fresh
              by solve( (#vf.147, 0)[!KU( f_.148, ~ltkI.99 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.141, 0)[!KU( f_.142, ~ltkI.99 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekR.87)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekR.177 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekR.176 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.104, 0)[!KU( f_.105, ~ltkI.99 )] /* may loop */ )
          case fresh
          solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekR.87),
                                      sign(<'g'^x.116, 'g'^~tid.97>, ~ltkI.99))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.143, 0)[!KU( f_.144, ~ltkR.135 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.127, 0)[!KU( f_.130, 'g'^(~ekR.86*~ekR.87)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekR.177 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.168, 1)[!KU( f_.171, ~ekR.176 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.136, 1), ~ekR.86) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.104, 0)[!KU( f_.105, ~ltkI.99 )] /* may loop */ )
          case fresh
          solve( (#vf.113, 0)[!KU( f_.114, ~ltkR.99 )] /* may loop */ )
            case fresh
            solve( KU((#vf.100, 0), mac('g'^(~ekR.86*~ekR.87),
                                        sign(<'g'^x.116, 'g'^~tid.97>, ~ltkI.99))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.149, 0)[!KU( f_.150, ~ltkR.141 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.133, 0)[!KU( f_.136, 'g'^(~ekR.86*~ekR.87)
                                  )] /* may loop */ )
                case Resp_1_case_1
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekR.183 )] /* may loop */ )
              next
                case Resp_1_case_2
                by solve( (#vr.174, 1)[!KU( f_.177, ~ekR.182 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.142, 1), ~ekR.86) )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( (#vr.91, 0)[!KU( f_.93, 'g'^(~ekR.86*~ekR.87) )] /* may loop */ )
          case Resp_1_case_1
          by solve( (#vr.130, 1)[!KU( f_.133, ~ekR.139 )] /* may loop */ )
        next
          case Resp_1_case_2
          by solve( (#vr.130, 1)[!KU( f_.133, ~ekR.138 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.98, 1), ~ekR.86) )
        qed
      qed
    next
      case Resp_1_case_2
      by solve( (#vf.52, 0)[!KU( f_.53, ~ltkI.8 )] /* may loop */ )
    next
      case cmac
      solve( KU((#vf.9, 0), sign(<hki.6, 'g'^~ekR.8>, ~ltkI.8)) )
        case Init_2_case_1
        solve( (#vr.38, 0)[!KU( f_.41, 'g'^(~ekR.101*~ekI.102)
                           )] /* may loop */ )
          case Init_1
          by solve( (#vr.131, 1)[!KU( f_.134, ~ekR.147 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.139, 1)[!KU( f_.142, ~ekI.148 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.107, 1), ~ekR.101) )
        qed
      next
        case Init_2_case_2
        by solve( (#vf.66, 0)[!KU( f_.67, ~ltkI.8 )] /* may loop */ )
      next
        case Init_2_case_3
        solve( (#vf.63, 0)[!KU( f_.64, ~ltkR.55 )] /* may loop */ )
          case fresh
          solve( (#vr.38, 0)[!KU( f_.41, 'g'^(~ekR.101*~ekI.102)
                             )] /* may loop */ )
            case Init_1
            by solve( (#vr.137, 1)[!KU( f_.140, ~ekR.153 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.145, 1)[!KU( f_.148, ~ekI.154 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.113, 1), ~ekR.101) )
          qed
        qed
      next
        case Init_2_case_4
        solve( (#vf.63, 0)[!KU( f_.64, ~ltkR.55 )] /* may loop */ )
          case fresh
          by solve( (#vf.67, 0)[!KU( f_.68, ~ltkI.8 )] /* may loop */ )
        qed
      next
        case Resp_1_case_1
        solve( (#vr.38, 0)[!KU( f_.41, 'g'^(~ekR.101*~ekR.102)
                           )] /* may loop */ )
          case Resp_1_case_1
          by solve( (#vr.139, 1)[!KU( f_.142, ~ekR.148 )] /* may loop */ )
        next
          case Resp_1_case_2
          by solve( (#vr.139, 1)[!KU( f_.142, ~ekR.147 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.107, 1), ~ekR.101) )
        qed
      next
        case Resp_1_case_2
        by solve( (#vf.61, 0)[!KU( f_.62, ~ltkI.8 )] /* may loop */ )
      next
        case csign
        by solve( (#vr.47, 1)[!KU( f_.51, ~ltkI.8 )] /* may loop */ )
      qed
    qed
  next
    case Resp_1_case_2
    by contradiction // from formulas
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.6. OK.


analyzing: data/examples/csf12/STS-MAC-fix1.spthy

------------------------------------------------------------------------------
analyzed: data/examples/csf12/STS-MAC-fix1.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 11.787283s
  KI_Perfect_Forward_Secrecy_I (all-traces): verified (247 steps)
  KI_Perfect_Forward_Secrecy_R (all-traces): verified (335 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: data/examples/csf12/STS-MAC-fix1.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 11.787283s
  KI_Perfect_Forward_Secrecy_I (all-traces): verified (247 steps)
  KI_Perfect_Forward_Secrecy_R (all-traces): verified (335 steps)

==============================================================================
*/
