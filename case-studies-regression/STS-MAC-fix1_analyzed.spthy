theory STS_MAC_FIX1 begin

// Function signature and definition of the equational theory E

builtin: diffie-hellman
functions: fst/1, h/1, mac/2, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true()

section{* The Station-To-Station Protocol (MAC version, fix UKS attack with proof-of-possession of exponent) *}

rule (modulo E) Register_pk_normal:
   [ Fr( ~ltk ) ]
  -->
   [ !Ltk( $A, ~ltk ), !Pk( $A, pk(~ltk) ), Out( pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Register_pk_evil:
   [ In( ltk ) ]
  --[ Corrupt( $E ) ]->
   [ !Ltk( $E, ltk ), !Pk( $E, pk(ltk) ), Out( pk(ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~ekI ), !Ltk( $I, ~ltkI ) ]
  -->
   [ Init_1( $I, $R, ~ltkI, ~ekI ), Out( <$I, $R, 'g'^~ekI> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_2:
   [
   Init_1( $I, $R, ~ltkI, ~ekI ), !Pk( $R, pk(~ltkR) ),
   In( <$R, $I, Y, sign(<Y, 'g'^~ekI>, ~ltkR), 
        mac(Y^~ekI, sign(<Y, 'g'^~ekI>, ~ltkR))>
   )
   ]
  --[ AcceptedI( ~ekI, $I, $R, 'g'^~ekI, Y, h(Y^~ekI) ) ]->
   [
   Out( <$I, $R, sign(<'g'^~ekI, Y>, ~ltkI), 
         mac(Y^~ekI, sign(<'g'^~ekI, Y>, ~ltkI))>
   ),
   !SessionKey( ~ekI, $I, $R, h(Y^~ekI) )
   ]

  /*
  rule (modulo AC) Init_2:
     [
     Init_1( $I.1, $R.2, ~ltkI.4, ~ekI.3 ), !Pk( $R.2, pk(~ltkR.5) ),
     In( <$R.2, $I.1, Y.6, sign(<Y.6, 'g'^~ekI.3>, ~ltkR.5), 
          mac(z.8, sign(<Y.6, 'g'^~ekI.3>, ~ltkR.5))>
     )
     ]
    --[ AcceptedI( ~ekI.3, $I.1, $R.2, 'g'^~ekI.3, Y.6, h(z.8) ) ]->
     [
     Out( <$I.1, $R.2, sign(<'g'^~ekI.3, Y.6>, ~ltkI.4), 
           mac(z.8, sign(<'g'^~ekI.3, Y.6>, ~ltkI.4))>
     ),
     !SessionKey( ~ekI.3, $I.1, $R.2, h(z.8) )
     ]
  
    variants (modulo AC)
    1. ~ekI.3
             = ~ekI.67
       Y.6   = Y.68
       z.8   = Y.68^~ekI.67
    
    2. ~ekI.3
             = ~ekI.67
       Y.6   = z.68^inv(~ekI.67)
       z.8   = z.68
    
    3. ~ekI.3
             = ~ekI.71
       Y.6   = x.72^x.73
       z.8   = x.72^(~ekI.71*x.73)
    
    4. ~ekI.3
             = ~ekI.71
       Y.6   = x.72^inv((~ekI.71*x.73))
       z.8   = x.72^inv(x.73)
    
    5. ~ekI.3
             = ~ekI.71
       Y.6   = x.72^(x.73*inv(~ekI.71))
       z.8   = x.72^x.73
    
    6. ~ekI.3
             = ~ekI.75
       Y.6   = x.76^(x.77*inv((~ekI.75*x.78)))
       z.8   = x.76^(x.77*inv(x.78))
  */

rule (modulo E) Resp_1:
   [ !Ltk( $R, ~ltkR ), Fr( ~ekR ), In( <$I, $R, X> ) ]
  -->
   [
   Resp_1( $I, $R, ~ltkR, ~ekR, X ),
   Out( <$R, $I, 'g'^~ekR, sign(<'g'^~ekR, X>, ~ltkR), 
         mac(X^~ekR, sign(<'g'^~ekR, X>, ~ltkR))>
   )
   ]

  /*
  rule (modulo AC) Resp_1:
     [ !Ltk( $R.2, ~ltkR.4 ), Fr( ~ekR.3 ), In( <$I.1, $R.2, X.5> ) ]
    -->
     [
     Resp_1( $I.1, $R.2, ~ltkR.4, ~ekR.3, X.5 ),
     Out( <$R.2, $I.1, 'g'^~ekR.3, sign(<'g'^~ekR.3, X.5>, ~ltkR.4), 
           mac(z.7, sign(<'g'^~ekR.3, X.5>, ~ltkR.4))>
     )
     ]
  
    variants (modulo AC)
    1. ~ekR.3
             = ~ekR.61
       X.5   = X.62
       z.7   = X.62^~ekR.61
    
    2. ~ekR.3
             = ~ekR.61
       X.5   = z.62^inv(~ekR.61)
       z.7   = z.62
    
    3. ~ekR.3
             = ~ekR.65
       X.5   = x.66^x.67
       z.7   = x.66^(~ekR.65*x.67)
    
    4. ~ekR.3
             = ~ekR.65
       X.5   = x.66^inv((~ekR.65*x.67))
       z.7   = x.66^inv(x.67)
    
    5. ~ekR.3
             = ~ekR.65
       X.5   = x.66^(x.67*inv(~ekR.65))
       z.7   = x.66^x.67
    
    6. ~ekR.3
             = ~ekR.69
       X.5   = x.70^(x.71*inv((~ekR.69*x.72)))
       z.7   = x.70^(x.71*inv(x.72))
  */

rule (modulo E) Resp_2:
   [
   !Pk( $I, pk(~ltkI) ), Resp_1( $I, $R, ~ltkR, ~ekR, X ),
   In( <$I, $R, sign(<X, 'g'^~ekR>, ~ltkI), 
        mac(X^~ekR, sign(<X, 'g'^~ekR>, ~ltkI))>
   )
   ]
  --[ AcceptedR( ~ekR, $I, $R, X, 'g'^~ekR, h(X^~ekR) ) ]->
   [ !SessionKey( ~ekR, $I, $R, h(X^~ekR) ) ]

  /*
  rule (modulo AC) Resp_2:
     [
     !Pk( $I.1, pk(~ltkI.4) ), Resp_1( $I.1, $R.2, ~ltkR.5, ~ekR.3, X.6 ),
     In( <$I.1, $R.2, sign(<X.6, 'g'^~ekR.3>, ~ltkI.4), 
          mac(z.8, sign(<X.6, 'g'^~ekR.3>, ~ltkI.4))>
     )
     ]
    --[ AcceptedR( ~ekR.3, $I.1, $R.2, X.6, 'g'^~ekR.3, h(z.8) ) ]->
     [ !SessionKey( ~ekR.3, $I.1, $R.2, h(z.8) ) ]
  
    variants (modulo AC)
    1. ~ekR.3
             = ~ekR.67
       X.6   = X.68
       z.8   = X.68^~ekR.67
    
    2. ~ekR.3
             = ~ekR.67
       X.6   = z.68^inv(~ekR.67)
       z.8   = z.68
    
    3. ~ekR.3
             = ~ekR.71
       X.6   = x.72^x.73
       z.8   = x.72^(~ekR.71*x.73)
    
    4. ~ekR.3
             = ~ekR.71
       X.6   = x.72^inv((~ekR.71*x.73))
       z.8   = x.72^inv(x.73)
    
    5. ~ekR.3
             = ~ekR.71
       X.6   = x.72^(x.73*inv(~ekR.71))
       z.8   = x.72^x.73
    
    6. ~ekR.3
             = ~ekR.75
       X.6   = x.76^(x.77*inv((~ekR.75*x.78)))
       z.8   = x.76^(x.77*inv(x.78))
  */

rule (modulo E) Sessionkey_Reveal:
   [ !SessionKey( ~tid, $I, $R, k ) ] --[ SesskRev( ~tid ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

lemma (modulo E) KI_Perfect_Forward_Secrecy_I:
  "not(Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
        (((((AcceptedI( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
            (not(Ex #r.8. Corrupt( I.1 ) @ #r.8))) &
           (not(Ex #r.9. Corrupt( R.2 ) @ #r.9))) &
          (K( sessKey.3 ) @ #k.5)) &
         (not(Ex #i3.10. SesskRev( ttest ) @ #i3.10))) &
        (not(Ex #i3.11 #i4.12 tpartner.13 kpartner.14.
              (SesskRev( tpartner.13 ) @ #i3.11) &
              (AcceptedR( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14
               ) @ #i4.12))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all attacks:
"Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
  (AcceptedI( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
  (K( sessKey.3 ) @ #k.5)
 &
  (All #r.8. (Corrupt( I.1 ) @ #r.8) ==> F) &
  (All #r.9. (Corrupt( R.2 ) @ #r.9) ==> F) &
  (All #i3.10. (SesskRev( ttest ) @ #i3.10) ==> F) &
  (All #i3.11 #i4.12 tpartner.13 kpartner.14.
    (SesskRev( tpartner.13 ) @ #i3.11) &
    (AcceptedR( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14 ) @ #i4.12)
   ==>
    F)"
*/
simplify
solve( (#i1.4, 0)[Init_1( $I.9, $R.10, ~ltkI.12, ~ekI.11 )] )
  case Init_1_case_1
  solve( (#i1.4, 1)[!Pk( $R.10, pk(~ltkR.13) )] )
    case Register_pk_evil
    by contradiction // from formulas
  next
    case Register_pk_normal
    solve( KU((#vf.17, 0), mac(z.16, sign(<hkr.7, 'g'^~ekI.11>, ~ltkR.13))) )
      case Init_2_case_1
      solve( (#k.5, 0)[!KU( f_.19, h('g'^(~ekI.113*~ekI.114))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                   sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
          case Init_2
          by contradiction // cyclic
        next
          case cmac
          solve( (#vr.171, 0)[!KU( f_.174, 'g'^(~ekI.113*~ekI.114)
                              )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.212, 1)[!KU( f_.215, ~ekI.230 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.212, 1)[!KU( f_.215, ~ekI.229 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.180, 1), ~ekI.113) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.159, 0)[!KU( f_.160, ~ltkI.134 )] /* may loop */ )
          case fresh
          solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                     sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekI.114)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.236 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.154, 0)[!KU( f_.155, ~ltkR.135 )] /* may loop */ )
          case fresh
          solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                     sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekI.114)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.236 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.154, 0)[!KU( f_.155, ~ltkR.135 )] /* may loop */ )
          case fresh
          solve( (#vf.160, 0)[!KU( f_.161, ~ltkI.134 )] /* may loop */ )
            case fresh
            solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                       sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
              case Init_2
              by contradiction // cyclic
            next
              case cmac
              solve( (#vr.183, 0)[!KU( f_.186, 'g'^(~ekI.113*~ekI.114)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.242 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.241 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.192, 1), ~ekI.113) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                   sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
          case Init_2
          by contradiction // cyclic
        next
          case cmac
          solve( (#vr.171, 0)[!KU( f_.174, 'g'^(~ekI.113*~ekI.114)
                              )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.212, 1)[!KU( f_.215, ~ekI.230 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.212, 1)[!KU( f_.215, ~ekI.229 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.180, 1), ~ekI.113) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.162, 0)[!KU( f_.163, ~ltkR.135 )] /* may loop */ )
          case fresh
          solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                     sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekI.114)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.236 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.145, 0)[!KU( f_.146, ~ltkI.134 )] /* may loop */ )
          case fresh
          solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                     sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekI.114)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.236 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.145, 0)[!KU( f_.146, ~ltkI.134 )] /* may loop */ )
          case fresh
          solve( (#vf.163, 0)[!KU( f_.164, ~ltkR.135 )] /* may loop */ )
            case fresh
            solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                       sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
              case Init_2
              by contradiction // cyclic
            next
              case cmac
              solve( (#vr.183, 0)[!KU( f_.186, 'g'^(~ekI.113*~ekI.114)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.242 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.241 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.192, 1), ~ekI.113) )
              qed
            qed
          qed
        qed
      next
        case ch
        solve( (#vr.118, 0)[!KU( f_.120, 'g'^(~ekI.113*~ekI.114)
                            )] /* may loop */ )
          case Init_1_case_1
          by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.175 )] /* may loop */ )
        next
          case Init_1_case_2
          by solve( (#vr.157, 1)[!KU( f_.160, ~ekI.174 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.125, 1), ~ekI.113) )
        qed
      qed
    next
      case Init_2_case_2
      by solve( (#vf.90, 0)[!KU( f_.91, ~ltkR.13 )] /* may loop */ )
    next
      case Init_2_case_3
      solve( (#vf.85, 0)[!KU( f_.86, ~ltkR.66 )] /* may loop */ )
        case fresh
        solve( (#k.5, 0)[!KU( f_.19, h('g'^(~ekI.113*~ekI.114))
                         )] /* may loop */ )
          case Sessionkey_Reveal_case_1
          solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                     sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekI.114)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.236 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_2
          solve( (#vf.165, 0)[!KU( f_.166, ~ltkI.140 )] /* may loop */ )
            case fresh
            solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                       sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
              case cmac
              solve( (#vr.183, 0)[!KU( f_.186, 'g'^(~ekI.113*~ekI.114)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.242 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.241 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.192, 1), ~ekI.113) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_3
          solve( (#vf.160, 0)[!KU( f_.161, ~ltkR.141 )] /* may loop */ )
            case fresh
            solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                       sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
              case cmac
              solve( (#vr.183, 0)[!KU( f_.186, 'g'^(~ekI.113*~ekI.114)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.242 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.241 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.192, 1), ~ekI.113) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_4
          solve( (#vf.160, 0)[!KU( f_.161, ~ltkR.141 )] /* may loop */ )
            case fresh
            solve( (#vf.166, 0)[!KU( f_.167, ~ltkI.140 )] /* may loop */ )
              case fresh
              solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                         sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
                case cmac
                solve( (#vr.189, 0)[!KU( f_.192, 'g'^(~ekI.113*~ekI.114)
                                    )] /* may loop */ )
                  case Init_1_case_1
                  by solve( (#vr.230, 1)[!KU( f_.233, ~ekI.248 )] /* may loop */ )
                next
                  case Init_1_case_2
                  by solve( (#vr.230, 1)[!KU( f_.233, ~ekI.247 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.198, 1), ~ekI.113) )
                qed
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_5
          solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                     sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekI.114)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.236 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_6
          solve( (#vf.168, 0)[!KU( f_.169, ~ltkR.141 )] /* may loop */ )
            case fresh
            solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                       sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
              case cmac
              solve( (#vr.183, 0)[!KU( f_.186, 'g'^(~ekI.113*~ekI.114)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.242 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.241 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.192, 1), ~ekI.113) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_7
          solve( (#vf.151, 0)[!KU( f_.152, ~ltkI.140 )] /* may loop */ )
            case fresh
            solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                       sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
              case cmac
              solve( (#vr.183, 0)[!KU( f_.186, 'g'^(~ekI.113*~ekI.114)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.242 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekI.241 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.192, 1), ~ekI.113) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_8
          solve( (#vf.151, 0)[!KU( f_.152, ~ltkI.140 )] /* may loop */ )
            case fresh
            solve( (#vf.169, 0)[!KU( f_.170, ~ltkR.141 )] /* may loop */ )
              case fresh
              solve( KU((#vf.70, 0), mac('g'^(~ekI.113*~ekI.114),
                                         sign(<'g'^~ekI.113, 'g'^~ekI.114>, ~ltkR.66))) )
                case cmac
                solve( (#vr.189, 0)[!KU( f_.192, 'g'^(~ekI.113*~ekI.114)
                                    )] /* may loop */ )
                  case Init_1_case_1
                  by solve( (#vr.230, 1)[!KU( f_.233, ~ekI.248 )] /* may loop */ )
                next
                  case Init_1_case_2
                  by solve( (#vr.230, 1)[!KU( f_.233, ~ekI.247 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.198, 1), ~ekI.113) )
                qed
              qed
            qed
          qed
        next
          case ch
          solve( (#vr.124, 0)[!KU( f_.126, 'g'^(~ekI.113*~ekI.114)
                              )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.163, 1)[!KU( f_.166, ~ekI.181 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.163, 1)[!KU( f_.166, ~ekI.180 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.131, 1), ~ekI.113) )
          qed
        qed
      qed
    next
      case Init_2_case_4
      solve( (#vf.85, 0)[!KU( f_.86, ~ltkR.66 )] /* may loop */ )
        case fresh
        by solve( (#vf.91, 0)[!KU( f_.92, ~ltkR.13 )] /* may loop */ )
      qed
    next
      case Resp_1_case_1
      solve( (#k.5, 0)[!KU( f_.19, h('g'^(~ekI.113*~ekR.114))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.139, 0), mac('g'^(~ekI.113*~ekR.114),
                                    sign(<x.165^x.166, 'g'^~tid.127>, ~ltkR.135))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.208, 0)[!KU( f_.209, ~ltkR.135 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.203, 0)[!KU( f_.204, ~ltkR.184 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.203, 0)[!KU( f_.204, ~ltkR.184 )] /* may loop */ )
            case fresh
            by solve( (#vf.209, 0)[!KU( f_.210, ~ltkR.135 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          solve( splitEqs(1) )
            case split
            by contradiction // from formulas
          qed
        next
          case Resp_1_case_2
          by solve( (#vf.194, 0)[!KU( f_.195, ~ltkR.135 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.171, 0)[!KU( f_.174, 'g'^(~ekI.113*~ekR.114)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.212, 1)[!KU( f_.215, ~ekR.230 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.221, 1)[!KU( f_.224, ~ekI.229 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.180, 1), ~ekI.113) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.159, 0)[!KU( f_.160, ~ltkI.134 )] /* may loop */ )
          case fresh
          solve( KU((#vf.139, 0), mac('g'^(~ekI.113*~ekR.114),
                                      sign(<'g'^x.166, 'g'^~tid.127>, ~ltkR.135))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.214, 0)[!KU( f_.215, ~ltkR.135 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.209, 0)[!KU( f_.210, ~ltkR.190 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.209, 0)[!KU( f_.210, ~ltkR.190 )] /* may loop */ )
              case fresh
              by solve( (#vf.215, 0)[!KU( f_.216, ~ltkR.135 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.200, 0)[!KU( f_.201, ~ltkR.135 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekR.114)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekR.236 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.227, 1)[!KU( f_.230, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.154, 0)[!KU( f_.155, ~ltkR.135 )] /* may loop */ )
          case fresh
          solve( KU((#vf.139, 0), mac('g'^(~ekI.113*~ekR.114),
                                      sign(<'g'^x.166, 'g'^~tid.127>, ~ltkR.135))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.209, 0)[!KU( f_.210, ~ltkR.190 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekR.114)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekR.236 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.227, 1)[!KU( f_.230, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.154, 0)[!KU( f_.155, ~ltkR.135 )] /* may loop */ )
          case fresh
          solve( (#vf.160, 0)[!KU( f_.161, ~ltkI.134 )] /* may loop */ )
            case fresh
            solve( KU((#vf.139, 0), mac('g'^(~ekI.113*~ekR.114),
                                        sign(<'g'^x.166, 'g'^~tid.127>, ~ltkR.135))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.215, 0)[!KU( f_.216, ~ltkR.196 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.183, 0)[!KU( f_.186, 'g'^(~ekI.113*~ekR.114)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekR.242 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.233, 1)[!KU( f_.236, ~ekI.241 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.192, 1), ~ekI.113) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.139, 0), mac('g'^(~ekI.113*~ekR.114),
                                    sign(<x.165^x.166, 'g'^~tid.127>, ~ltkI.134))) )
          case Init_2_case_1
          solve( splitEqs(1) )
            case split
            by contradiction // from formulas
          qed
        next
          case Init_2_case_2
          by solve( (#vf.208, 0)[!KU( f_.209, ~ltkI.134 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.203, 0)[!KU( f_.204, ~ltkR.184 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.203, 0)[!KU( f_.204, ~ltkR.184 )] /* may loop */ )
            case fresh
            by solve( (#vf.209, 0)[!KU( f_.210, ~ltkI.134 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          by solve( splitEqs(1) )
        next
          case Resp_1_case_2
          by solve( (#vf.194, 0)[!KU( f_.195, ~ltkI.134 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.171, 0)[!KU( f_.174, 'g'^(~ekI.113*~ekR.114)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.212, 1)[!KU( f_.215, ~ekR.230 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.221, 1)[!KU( f_.224, ~ekI.229 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.180, 1), ~ekI.113) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.162, 0)[!KU( f_.163, ~ltkR.135 )] /* may loop */ )
          case fresh
          solve( KU((#vf.139, 0), mac('g'^(~ekI.113*~ekR.114),
                                      sign(<'g'^x.166, 'g'^~tid.127>, ~ltkI.134))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.214, 0)[!KU( f_.215, ~ltkI.134 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.209, 0)[!KU( f_.210, ~ltkR.190 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.209, 0)[!KU( f_.210, ~ltkR.190 )] /* may loop */ )
              case fresh
              by solve( (#vf.215, 0)[!KU( f_.216, ~ltkI.134 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.200, 0)[!KU( f_.201, ~ltkI.134 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekR.114)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekR.236 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.227, 1)[!KU( f_.230, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.145, 0)[!KU( f_.146, ~ltkI.134 )] /* may loop */ )
          case fresh
          solve( KU((#vf.139, 0), mac('g'^(~ekI.113*~ekR.114),
                                      sign(<'g'^x.166, 'g'^~tid.127>, ~ltkI.134))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.209, 0)[!KU( f_.210, ~ltkR.190 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.177, 0)[!KU( f_.180, 'g'^(~ekI.113*~ekR.114)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.218, 1)[!KU( f_.221, ~ekR.236 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.227, 1)[!KU( f_.230, ~ekI.235 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.186, 1), ~ekI.113) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.145, 0)[!KU( f_.146, ~ltkI.134 )] /* may loop */ )
          case fresh
          solve( (#vf.163, 0)[!KU( f_.164, ~ltkR.135 )] /* may loop */ )
            case fresh
            solve( KU((#vf.139, 0), mac('g'^(~ekI.113*~ekR.114),
                                        sign(<'g'^x.166, 'g'^~tid.127>, ~ltkI.134))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.215, 0)[!KU( f_.216, ~ltkR.196 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.183, 0)[!KU( f_.186, 'g'^(~ekI.113*~ekR.114)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.224, 1)[!KU( f_.227, ~ekR.242 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.233, 1)[!KU( f_.236, ~ekI.241 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.192, 1), ~ekI.113) )
              qed
            qed
          qed
        qed
      next
        case ch
        solve( (#vr.118, 0)[!KU( f_.120, 'g'^(~ekI.113*~ekR.114)
                            )] /* may loop */ )
          case Init_1
          by solve( (#vr.157, 1)[!KU( f_.160, ~ekR.175 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.166, 1)[!KU( f_.169, ~ekI.174 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.125, 1), ~ekI.113) )
        qed
      qed
    next
      case Resp_1_case_2
      by solve( (#vf.76, 0)[!KU( f_.77, ~ltkR.13 )] /* may loop */ )
    next
      case cmac
      solve( KU((#vf.17, 0), sign(<hkr.7, 'g'^~ekI.11>, ~ltkR.13)) )
        case Init_2_case_1
        solve( (#vr.53, 0)[!KU( f_.56, 'g'^(~ekI.128*~ekI.129)
                           )] /* may loop */ )
          case Init_1_case_1
          by solve( (#vr.166, 1)[!KU( f_.169, ~ekI.184 )] /* may loop */ )
        next
          case Init_1_case_2
          by solve( (#vr.166, 1)[!KU( f_.169, ~ekI.183 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.134, 1), ~ekI.128) )
        qed
      next
        case Init_2_case_2
        by solve( (#vf.99, 0)[!KU( f_.100, ~ltkR.13 )] /* may loop */ )
      next
        case Init_2_case_3
        solve( (#vf.94, 0)[!KU( f_.95, ~ltkR.75 )] /* may loop */ )
          case fresh
          solve( (#vr.53, 0)[!KU( f_.56, 'g'^(~ekI.128*~ekI.129)
                             )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.172, 1)[!KU( f_.175, ~ekI.190 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.172, 1)[!KU( f_.175, ~ekI.189 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.140, 1), ~ekI.128) )
          qed
        qed
      next
        case Init_2_case_4
        solve( (#vf.94, 0)[!KU( f_.95, ~ltkR.75 )] /* may loop */ )
          case fresh
          by solve( (#vf.100, 0)[!KU( f_.101, ~ltkR.13 )] /* may loop */ )
        qed
      next
        case Resp_1_case_1
        solve( (#vr.53, 0)[!KU( f_.56, 'g'^(~ekI.128*~ekR.129)
                           )] /* may loop */ )
          case Init_1
          by solve( (#vr.166, 1)[!KU( f_.169, ~ekR.184 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.175, 1)[!KU( f_.178, ~ekI.183 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.134, 1), ~ekI.128) )
        qed
      next
        case Resp_1_case_2
        by solve( (#vf.85, 0)[!KU( f_.86, ~ltkR.13 )] /* may loop */ )
      next
        case csign
        by solve( (#vr.62, 1)[!KU( f_.66, ~ltkR.13 )] /* may loop */ )
      qed
    qed
  qed
next
  case Init_1_case_2
  by contradiction // from formulas
qed

lemma (modulo E) KI_Perfect_Forward_Secrecy_R:
  "not(Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
        (((((AcceptedR( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
            (not(Ex #r.8. Corrupt( I.1 ) @ #r.8))) &
           (not(Ex #r.9. Corrupt( R.2 ) @ #r.9))) &
          (K( sessKey.3 ) @ #k.5)) &
         (not(Ex #i2.10. SesskRev( ttest ) @ #i2.10))) &
        (not(Ex #i2.11 #i3.12 tpartner.13 kpartner.14.
              (SesskRev( tpartner.13 ) @ #i2.11) &
              (AcceptedI( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14
               ) @ #i3.12))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all attacks:
"Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
  (AcceptedR( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
  (K( sessKey.3 ) @ #k.5)
 &
  (All #r.8. (Corrupt( I.1 ) @ #r.8) ==> F) &
  (All #r.9. (Corrupt( R.2 ) @ #r.9) ==> F) &
  (All #i2.10. (SesskRev( ttest ) @ #i2.10) ==> F) &
  (All #i2.11 #i3.12 tpartner.13 kpartner.14.
    (SesskRev( tpartner.13 ) @ #i2.11) &
    (AcceptedI( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14 ) @ #i3.12)
   ==>
    F)"
*/
simplify
solve( (#i1.4, 0)[!Pk( $I.9, pk(~ltkI.12) )] )
  case Register_pk_evil
  by contradiction // from formulas
next
  case Register_pk_normal
  solve( (#i1.4, 1)[Resp_1( $I.9, $R.10, ~ltkR.13, ~ekR.11, hki.6 )] )
    case Resp_1_case_1
    solve( KU((#vf.17, 0), mac(z.16, sign(<hki.6, 'g'^~ekR.11>, ~ltkI.12))) )
      case Init_2_case_1
      solve( (#k.5, 0)[!KU( f_.19, h('g'^(~ekR.123*~ekI.124))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                   sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
          case Resp_1
          solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekI.124),
                                      sign(<'g'^x.176, 'g'^~tid.137>, ~ltkR.145))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.270, 0)[!KU( f_.271, ~ltkR.145 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.265, 0)[!KU( f_.266, ~ltkR.246 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.265, 0)[!KU( f_.266, ~ltkR.246 )] /* may loop */ )
              case fresh
              by solve( (#vf.271, 0)[!KU( f_.272, ~ltkR.145 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            solve( splitEqs(1) )
              case split
              by contradiction // from formulas
            qed
          next
            case Resp_1_case_2
            by solve( (#vf.256, 0)[!KU( f_.257, ~ltkR.145 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.233, 0)[!KU( f_.236, 'g'^(~ekR.123*~ekI.124)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.274, 1)[!KU( f_.277, ~ekR.291 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.283, 1)[!KU( f_.286, ~ekI.292 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.242, 1), ~ekR.123) )
            qed
          qed
        next
          case cmac
          solve( (#vr.181, 0)[!KU( f_.184, 'g'^(~ekR.123*~ekI.124)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.222, 1)[!KU( f_.225, ~ekR.239 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.231, 1)[!KU( f_.234, ~ekI.240 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.190, 1), ~ekR.123) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.169, 0)[!KU( f_.170, ~ltkI.144 )] /* may loop */ )
          case fresh
          solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                     sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
            case Resp_1
            solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekI.124),
                                        sign(<'g'^x.176, 'g'^~tid.137>, ~ltkR.145))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( (#vf.276, 0)[!KU( f_.277, ~ltkR.145 )] /* may loop */ )
            next
              case Init_2_case_3
              solve( (#vf.271, 0)[!KU( f_.272, ~ltkR.252 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Init_2_case_4
              solve( (#vf.271, 0)[!KU( f_.272, ~ltkR.252 )] /* may loop */ )
                case fresh
                by solve( (#vf.277, 0)[!KU( f_.278, ~ltkR.145 )] /* may loop */ )
              qed
            next
              case Resp_1_case_1
              by solve( splitEqs(1) )
            next
              case Resp_1_case_2
              by solve( (#vf.262, 0)[!KU( f_.263, ~ltkR.145 )] /* may loop */ )
            next
              case cmac
              solve( (#vr.239, 0)[!KU( f_.242, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.280, 1)[!KU( f_.283, ~ekR.297 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.289, 1)[!KU( f_.292, ~ekI.298 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.248, 1), ~ekR.123) )
              qed
            qed
          next
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekI.124)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.228, 1)[!KU( f_.231, ~ekR.245 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekI.246 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.164, 0)[!KU( f_.165, ~ltkR.145 )] /* may loop */ )
          case fresh
          solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                     sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
            case Resp_1
            solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekI.124),
                                        sign(<'g'^x.176, 'g'^~tid.137>, ~ltkR.145))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.271, 0)[!KU( f_.272, ~ltkR.252 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.239, 0)[!KU( f_.242, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.280, 1)[!KU( f_.283, ~ekR.297 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.289, 1)[!KU( f_.292, ~ekI.298 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.248, 1), ~ekR.123) )
              qed
            qed
          next
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekI.124)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.228, 1)[!KU( f_.231, ~ekR.245 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekI.246 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.164, 0)[!KU( f_.165, ~ltkR.145 )] /* may loop */ )
          case fresh
          solve( (#vf.170, 0)[!KU( f_.171, ~ltkI.144 )] /* may loop */ )
            case fresh
            solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                       sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
              case Resp_1
              solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekI.124),
                                          sign(<'g'^x.176, 'g'^~tid.137>, ~ltkR.145))) )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                solve( (#vf.277, 0)[!KU( f_.278, ~ltkR.258 )] /* may loop */ )
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( (#vr.245, 0)[!KU( f_.248, 'g'^(~ekR.123*~ekI.124)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.286, 1)[!KU( f_.289, ~ekR.303 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.295, 1)[!KU( f_.298, ~ekI.304 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.254, 1), ~ekR.123) )
                qed
              qed
            next
              case cmac
              solve( (#vr.193, 0)[!KU( f_.196, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.234, 1)[!KU( f_.237, ~ekR.251 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekI.252 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.202, 1), ~ekR.123) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                   sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
          case Resp_1
          solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekI.124),
                                      sign(<'g'^x.176, 'g'^~tid.137>, ~ltkI.144))) )
            case Init_2_case_1
            solve( splitEqs(1) )
              case split
              by contradiction // from formulas
            qed
          next
            case Init_2_case_2
            by solve( (#vf.270, 0)[!KU( f_.271, ~ltkI.144 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.265, 0)[!KU( f_.266, ~ltkR.246 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.265, 0)[!KU( f_.266, ~ltkR.246 )] /* may loop */ )
              case fresh
              by solve( (#vf.271, 0)[!KU( f_.272, ~ltkI.144 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.256, 0)[!KU( f_.257, ~ltkI.144 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.233, 0)[!KU( f_.236, 'g'^(~ekR.123*~ekI.124)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.274, 1)[!KU( f_.277, ~ekR.291 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.283, 1)[!KU( f_.286, ~ekI.292 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.242, 1), ~ekR.123) )
            qed
          qed
        next
          case cmac
          solve( (#vr.181, 0)[!KU( f_.184, 'g'^(~ekR.123*~ekI.124)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.222, 1)[!KU( f_.225, ~ekR.239 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.231, 1)[!KU( f_.234, ~ekI.240 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.190, 1), ~ekR.123) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.172, 0)[!KU( f_.173, ~ltkR.145 )] /* may loop */ )
          case fresh
          solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                     sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
            case Resp_1
            solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekI.124),
                                        sign(<'g'^x.176, 'g'^~tid.137>, ~ltkI.144))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( (#vf.276, 0)[!KU( f_.277, ~ltkI.144 )] /* may loop */ )
            next
              case Init_2_case_3
              solve( (#vf.271, 0)[!KU( f_.272, ~ltkR.252 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Init_2_case_4
              solve( (#vf.271, 0)[!KU( f_.272, ~ltkR.252 )] /* may loop */ )
                case fresh
                by solve( (#vf.277, 0)[!KU( f_.278, ~ltkI.144 )] /* may loop */ )
              qed
            next
              case Resp_1_case_1
              by solve( splitEqs(1) )
            next
              case Resp_1_case_2
              by solve( (#vf.262, 0)[!KU( f_.263, ~ltkI.144 )] /* may loop */ )
            next
              case cmac
              solve( (#vr.239, 0)[!KU( f_.242, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.280, 1)[!KU( f_.283, ~ekR.297 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.289, 1)[!KU( f_.292, ~ekI.298 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.248, 1), ~ekR.123) )
              qed
            qed
          next
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekI.124)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.228, 1)[!KU( f_.231, ~ekR.245 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekI.246 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.155, 0)[!KU( f_.156, ~ltkI.144 )] /* may loop */ )
          case fresh
          solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                     sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
            case Resp_1
            solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekI.124),
                                        sign(<'g'^x.176, 'g'^~tid.137>, ~ltkI.144))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.271, 0)[!KU( f_.272, ~ltkR.252 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.239, 0)[!KU( f_.242, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.280, 1)[!KU( f_.283, ~ekR.297 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.289, 1)[!KU( f_.292, ~ekI.298 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.248, 1), ~ekR.123) )
              qed
            qed
          next
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekI.124)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.228, 1)[!KU( f_.231, ~ekR.245 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekI.246 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.155, 0)[!KU( f_.156, ~ltkI.144 )] /* may loop */ )
          case fresh
          solve( (#vf.173, 0)[!KU( f_.174, ~ltkR.145 )] /* may loop */ )
            case fresh
            solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                       sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
              case Resp_1
              solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekI.124),
                                          sign(<'g'^x.176, 'g'^~tid.137>, ~ltkI.144))) )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                solve( (#vf.277, 0)[!KU( f_.278, ~ltkR.258 )] /* may loop */ )
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( (#vr.245, 0)[!KU( f_.248, 'g'^(~ekR.123*~ekI.124)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.286, 1)[!KU( f_.289, ~ekR.303 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.295, 1)[!KU( f_.298, ~ekI.304 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.254, 1), ~ekR.123) )
                qed
              qed
            next
              case cmac
              solve( (#vr.193, 0)[!KU( f_.196, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.234, 1)[!KU( f_.237, ~ekR.251 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekI.252 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.202, 1), ~ekR.123) )
              qed
            qed
          qed
        qed
      next
        case ch
        solve( (#vr.128, 0)[!KU( f_.130, 'g'^(~ekR.123*~ekI.124)
                            )] /* may loop */ )
          case Init_1
          by solve( (#vr.167, 1)[!KU( f_.170, ~ekR.184 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.176, 1)[!KU( f_.179, ~ekI.185 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.135, 1), ~ekR.123) )
        qed
      qed
    next
      case Init_2_case_2
      by solve( (#vf.94, 0)[!KU( f_.95, ~ltkI.12 )] /* may loop */ )
    next
      case Init_2_case_3
      solve( (#vf.89, 0)[!KU( f_.90, ~ltkR.70 )] /* may loop */ )
        case fresh
        solve( (#k.5, 0)[!KU( f_.19, h('g'^(~ekR.123*~ekI.124))
                         )] /* may loop */ )
          case Sessionkey_Reveal_case_1
          solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                     sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekI.124)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.228, 1)[!KU( f_.231, ~ekR.245 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekI.246 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_2
          solve( (#vf.175, 0)[!KU( f_.176, ~ltkI.150 )] /* may loop */ )
            case fresh
            solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                       sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
              case cmac
              solve( (#vr.193, 0)[!KU( f_.196, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.234, 1)[!KU( f_.237, ~ekR.251 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekI.252 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.202, 1), ~ekR.123) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_3
          solve( (#vf.170, 0)[!KU( f_.171, ~ltkR.151 )] /* may loop */ )
            case fresh
            solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                       sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
              case cmac
              solve( (#vr.193, 0)[!KU( f_.196, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.234, 1)[!KU( f_.237, ~ekR.251 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekI.252 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.202, 1), ~ekR.123) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_4
          solve( (#vf.170, 0)[!KU( f_.171, ~ltkR.151 )] /* may loop */ )
            case fresh
            solve( (#vf.176, 0)[!KU( f_.177, ~ltkI.150 )] /* may loop */ )
              case fresh
              solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                         sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
                case cmac
                solve( (#vr.199, 0)[!KU( f_.202, 'g'^(~ekR.123*~ekI.124)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.240, 1)[!KU( f_.243, ~ekR.257 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.249, 1)[!KU( f_.252, ~ekI.258 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.208, 1), ~ekR.123) )
                qed
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_5
          solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                     sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekI.124)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.228, 1)[!KU( f_.231, ~ekR.245 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekI.246 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_6
          solve( (#vf.178, 0)[!KU( f_.179, ~ltkR.151 )] /* may loop */ )
            case fresh
            solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                       sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
              case cmac
              solve( (#vr.193, 0)[!KU( f_.196, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.234, 1)[!KU( f_.237, ~ekR.251 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekI.252 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.202, 1), ~ekR.123) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_7
          solve( (#vf.161, 0)[!KU( f_.162, ~ltkI.150 )] /* may loop */ )
            case fresh
            solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                       sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
              case cmac
              solve( (#vr.193, 0)[!KU( f_.196, 'g'^(~ekR.123*~ekI.124)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.234, 1)[!KU( f_.237, ~ekR.251 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekI.252 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.202, 1), ~ekR.123) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_8
          solve( (#vf.161, 0)[!KU( f_.162, ~ltkI.150 )] /* may loop */ )
            case fresh
            solve( (#vf.179, 0)[!KU( f_.180, ~ltkR.151 )] /* may loop */ )
              case fresh
              solve( KU((#vf.74, 0), mac('g'^(~ekR.123*~ekI.124),
                                         sign(<'g'^~ekR.123, 'g'^~ekI.124>, ~ltkR.70))) )
                case cmac
                solve( (#vr.199, 0)[!KU( f_.202, 'g'^(~ekR.123*~ekI.124)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.240, 1)[!KU( f_.243, ~ekR.257 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.249, 1)[!KU( f_.252, ~ekI.258 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.208, 1), ~ekR.123) )
                qed
              qed
            qed
          qed
        next
          case ch
          solve( (#vr.134, 0)[!KU( f_.136, 'g'^(~ekR.123*~ekI.124)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.173, 1)[!KU( f_.176, ~ekR.190 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.182, 1)[!KU( f_.185, ~ekI.191 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.141, 1), ~ekR.123) )
          qed
        qed
      qed
    next
      case Init_2_case_4
      solve( (#vf.89, 0)[!KU( f_.90, ~ltkR.70 )] /* may loop */ )
        case fresh
        by solve( (#vf.95, 0)[!KU( f_.96, ~ltkI.12 )] /* may loop */ )
      qed
    next
      case Resp_1_case_1
      solve( (#k.5, 0)[!KU( f_.19, h('g'^(~ekR.123*~ekR.124))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekR.124),
                                    sign(<x.175^x.176, 'g'^~tid.137>, ~ltkR.145))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.218, 0)[!KU( f_.219, ~ltkR.145 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.213, 0)[!KU( f_.214, ~ltkR.194 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.213, 0)[!KU( f_.214, ~ltkR.194 )] /* may loop */ )
            case fresh
            by solve( (#vf.219, 0)[!KU( f_.220, ~ltkR.145 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          by solve( splitEqs(1) )
        next
          case Resp_1_case_2
          by solve( (#vf.204, 0)[!KU( f_.205, ~ltkR.145 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.181, 0)[!KU( f_.184, 'g'^(~ekR.123*~ekR.124)
                              )] /* may loop */ )
            case Resp_1_case_1
            by solve( (#vr.231, 1)[!KU( f_.234, ~ekR.240 )] /* may loop */ )
          next
            case Resp_1_case_2
            by solve( (#vr.231, 1)[!KU( f_.234, ~ekR.239 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.190, 1), ~ekR.123) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.169, 0)[!KU( f_.170, ~ltkI.144 )] /* may loop */ )
          case fresh
          solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekR.124),
                                      sign(<'g'^x.176, 'g'^~tid.137>, ~ltkR.145))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.224, 0)[!KU( f_.225, ~ltkR.145 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.219, 0)[!KU( f_.220, ~ltkR.200 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.219, 0)[!KU( f_.220, ~ltkR.200 )] /* may loop */ )
              case fresh
              by solve( (#vf.225, 0)[!KU( f_.226, ~ltkR.145 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.210, 0)[!KU( f_.211, ~ltkR.145 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekR.124)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekR.246 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekR.245 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.164, 0)[!KU( f_.165, ~ltkR.145 )] /* may loop */ )
          case fresh
          solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekR.124),
                                      sign(<'g'^x.176, 'g'^~tid.137>, ~ltkR.145))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.219, 0)[!KU( f_.220, ~ltkR.200 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekR.124)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekR.246 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekR.245 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.164, 0)[!KU( f_.165, ~ltkR.145 )] /* may loop */ )
          case fresh
          solve( (#vf.170, 0)[!KU( f_.171, ~ltkI.144 )] /* may loop */ )
            case fresh
            solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekR.124),
                                        sign(<'g'^x.176, 'g'^~tid.137>, ~ltkR.145))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.225, 0)[!KU( f_.226, ~ltkR.206 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.193, 0)[!KU( f_.196, 'g'^(~ekR.123*~ekR.124)
                                  )] /* may loop */ )
                case Resp_1_case_1
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekR.252 )] /* may loop */ )
              next
                case Resp_1_case_2
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekR.251 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.202, 1), ~ekR.123) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekR.124),
                                    sign(<x.175^x.176, 'g'^~tid.137>, ~ltkI.144))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.218, 0)[!KU( f_.219, ~ltkI.144 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.213, 0)[!KU( f_.214, ~ltkR.194 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.213, 0)[!KU( f_.214, ~ltkR.194 )] /* may loop */ )
            case fresh
            by solve( (#vf.219, 0)[!KU( f_.220, ~ltkI.144 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          solve( splitEqs(1) )
            case split_case_1
            by contradiction // from formulas
          next
            case split_case_2
            solve( KU((#vf.17, 0), sign(<'g'^~ekR.244, 'g'^~ekR.243>, ~ltkI.12)) )
              case Resp_1
              solve( KU((#vf.45, 0), 'g'^~ekR.310) )
                case Resp_1
                solve( KU((#vf.73, 0), 'g'^~ekR.309) )
                  case Resp_1
                  by contradiction // cyclic
                next
                  case cexp
                  by solve( (#vr.360, 1)[!KU( f_.363, ~ekR.309 )] /* may loop */ )
                qed
              next
                case cexp
                by solve( (#vr.315, 1)[!KU( f_.318, ~ekR.310 )] /* may loop */ )
              qed
            next
              case csign
              by solve( (#vr.249, 1)[!KU( f_.253, ~ltkI.12 )] /* may loop */ )
            qed
          qed
        next
          case Resp_1_case_2
          by solve( (#vf.204, 0)[!KU( f_.205, ~ltkI.144 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.181, 0)[!KU( f_.184, 'g'^(~ekR.123*~ekR.124)
                              )] /* may loop */ )
            case Resp_1_case_1
            by solve( (#vr.231, 1)[!KU( f_.234, ~ekR.240 )] /* may loop */ )
          next
            case Resp_1_case_2
            by solve( (#vr.231, 1)[!KU( f_.234, ~ekR.239 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.190, 1), ~ekR.123) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.172, 0)[!KU( f_.173, ~ltkR.145 )] /* may loop */ )
          case fresh
          solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekR.124),
                                      sign(<'g'^x.176, 'g'^~tid.137>, ~ltkI.144))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.224, 0)[!KU( f_.225, ~ltkI.144 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.219, 0)[!KU( f_.220, ~ltkR.200 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.219, 0)[!KU( f_.220, ~ltkR.200 )] /* may loop */ )
              case fresh
              by solve( (#vf.225, 0)[!KU( f_.226, ~ltkI.144 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.210, 0)[!KU( f_.211, ~ltkI.144 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekR.124)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekR.246 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekR.245 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.155, 0)[!KU( f_.156, ~ltkI.144 )] /* may loop */ )
          case fresh
          solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekR.124),
                                      sign(<'g'^x.176, 'g'^~tid.137>, ~ltkI.144))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.219, 0)[!KU( f_.220, ~ltkR.200 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.187, 0)[!KU( f_.190, 'g'^(~ekR.123*~ekR.124)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekR.246 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.237, 1)[!KU( f_.240, ~ekR.245 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.196, 1), ~ekR.123) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.155, 0)[!KU( f_.156, ~ltkI.144 )] /* may loop */ )
          case fresh
          solve( (#vf.173, 0)[!KU( f_.174, ~ltkR.145 )] /* may loop */ )
            case fresh
            solve( KU((#vf.149, 0), mac('g'^(~ekR.123*~ekR.124),
                                        sign(<'g'^x.176, 'g'^~tid.137>, ~ltkI.144))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.225, 0)[!KU( f_.226, ~ltkR.206 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.193, 0)[!KU( f_.196, 'g'^(~ekR.123*~ekR.124)
                                  )] /* may loop */ )
                case Resp_1_case_1
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekR.252 )] /* may loop */ )
              next
                case Resp_1_case_2
                by solve( (#vr.243, 1)[!KU( f_.246, ~ekR.251 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.202, 1), ~ekR.123) )
              qed
            qed
          qed
        qed
      next
        case ch
        solve( (#vr.128, 0)[!KU( f_.130, 'g'^(~ekR.123*~ekR.124)
                            )] /* may loop */ )
          case Resp_1_case_1
          by solve( (#vr.176, 1)[!KU( f_.179, ~ekR.185 )] /* may loop */ )
        next
          case Resp_1_case_2
          by solve( (#vr.176, 1)[!KU( f_.179, ~ekR.184 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.135, 1), ~ekR.123) )
        qed
      qed
    next
      case Resp_1_case_2
      by solve( (#vf.80, 0)[!KU( f_.81, ~ltkI.12 )] /* may loop */ )
    next
      case cmac
      solve( KU((#vf.17, 0), sign(<hki.6, 'g'^~ekR.11>, ~ltkI.12)) )
        case Init_2_case_1
        solve( (#vr.57, 0)[!KU( f_.60, 'g'^(~ekR.138*~ekI.139)
                           )] /* may loop */ )
          case Init_1
          by solve( (#vr.176, 1)[!KU( f_.179, ~ekR.193 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.185, 1)[!KU( f_.188, ~ekI.194 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.144, 1), ~ekR.138) )
        qed
      next
        case Init_2_case_2
        by solve( (#vf.103, 0)[!KU( f_.104, ~ltkI.12 )] /* may loop */ )
      next
        case Init_2_case_3
        solve( (#vf.98, 0)[!KU( f_.99, ~ltkR.79 )] /* may loop */ )
          case fresh
          solve( (#vr.57, 0)[!KU( f_.60, 'g'^(~ekR.138*~ekI.139)
                             )] /* may loop */ )
            case Init_1
            by solve( (#vr.182, 1)[!KU( f_.185, ~ekR.199 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.191, 1)[!KU( f_.194, ~ekI.200 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.150, 1), ~ekR.138) )
          qed
        qed
      next
        case Init_2_case_4
        solve( (#vf.98, 0)[!KU( f_.99, ~ltkR.79 )] /* may loop */ )
          case fresh
          by solve( (#vf.104, 0)[!KU( f_.105, ~ltkI.12 )] /* may loop */ )
        qed
      next
        case Resp_1_case_1
        solve( (#vr.57, 0)[!KU( f_.60, 'g'^(~ekR.138*~ekR.139)
                           )] /* may loop */ )
          case Resp_1_case_1
          by solve( (#vr.185, 1)[!KU( f_.188, ~ekR.194 )] /* may loop */ )
        next
          case Resp_1_case_2
          by solve( (#vr.185, 1)[!KU( f_.188, ~ekR.193 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.144, 1), ~ekR.138) )
        qed
      next
        case Resp_1_case_2
        by solve( (#vf.89, 0)[!KU( f_.90, ~ltkI.12 )] /* may loop */ )
      next
        case csign
        by solve( (#vr.66, 1)[!KU( f_.70, ~ltkI.12 )] /* may loop */ )
      qed
    qed
  next
    case Resp_1_case_2
    by contradiction // from formulas
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.6. OK.


analyzing: data/examples/csf12/STS-MAC-fix1.spthy

------------------------------------------------------------------------------
analyzed: data/examples/csf12/STS-MAC-fix1.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 14.040526s
  KI_Perfect_Forward_Secrecy_I: complete proof (247 steps)
  KI_Perfect_Forward_Secrecy_R: complete proof (335 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: data/examples/csf12/STS-MAC-fix1.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 14.040526s
  KI_Perfect_Forward_Secrecy_I: complete proof (247 steps)
  KI_Perfect_Forward_Secrecy_R: complete proof (335 steps)

==============================================================================
*/
