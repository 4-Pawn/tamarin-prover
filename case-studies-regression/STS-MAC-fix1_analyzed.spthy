theory STS_MAC_FIX1 begin

// Function signature and definition of the equational theory E

builtin: diffie-hellman
functions: KDF/1, fst/1, mac/2, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true()

section{* The Station-To-Station Protocol (MAC version, fix UKS attack with proof-of-possession of exponent) *}

rule (modulo E) Register_pk_normal:
   [ Fr( ~ltk ) ]
  -->
   [ !Ltk( $A, ~ltk ), !Pk( $A, pk(~ltk) ), Out( pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Register_pk_evil:
   [ In( ltk ) ]
  --[ Corrupt( $E ) ]->
   [ !Ltk( $E, ltk ), !Pk( $E, pk(ltk) ), Out( pk(ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~ekI ), !Ltk( $I, ~ltkI ) ]
  -->
   [ Init_1( $I, $R, ~ltkI, ~ekI ), Out( <$I, $R, 'g'^~ekI> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_2:
   [
   Init_1( $I, $R, ~ltkI, ~ekI ), !Pk( $R, pk(~ltkR) ),
   In( <$R, $I, Y, sign(<Y, 'g'^~ekI>, ~ltkR), 
        mac(Y^~ekI, sign(<Y, 'g'^~ekI>, ~ltkR))>
   )
   ]
  --[ AcceptedI( ~ekI, $I, $R, 'g'^~ekI, Y, KDF(Y^~ekI) ) ]->
   [
   Out( <$I, $R, sign(<'g'^~ekI, Y>, ~ltkI), 
         mac(Y^~ekI, sign(<'g'^~ekI, Y>, ~ltkI))>
   ),
   !SessionKey( ~ekI, $I, $R, KDF(Y^~ekI) )
   ]

  /*
  rule (modulo AC) Init_2:
     [
     Init_1( $I, $R, ~ltkI, ~ekI ), !Pk( $R, pk(~ltkR) ),
     In( <$R, $I, Y, sign(<Y, 'g'^~ekI>, ~ltkR), 
          mac(z, sign(<Y, 'g'^~ekI>, ~ltkR))>
     )
     ]
    --[ AcceptedI( ~ekI, $I, $R, 'g'^~ekI, Y, KDF(z) ) ]->
     [
     Out( <$I, $R, sign(<'g'^~ekI, Y>, ~ltkI), 
           mac(z, sign(<'g'^~ekI, Y>, ~ltkI))>
     ),
     !SessionKey( ~ekI, $I, $R, KDF(z) )
     ]
  
    variants (modulo AC)
    1. ~ekI  = ~ekI.16
       Y     = Y.19
       z     = Y.19^~ekI.16
    
    2. ~ekI  = ~ekI.18
       Y     = z.23^inv(~ekI.18)
       z     = z.23
    
    3. ~ekI  = ~ekI.39
       Y     = x.73^x.74
       z     = x.73^(~ekI.39*x.74)
    
    4. ~ekI  = ~ekI.39
       Y     = x.73^inv((~ekI.39*x.74))
       z     = x.73^inv(x.74)
    
    5. ~ekI  = ~ekI.39
       Y     = x.73^(x.74*inv(~ekI.39))
       z     = x.73^x.74
    
    6. ~ekI  = ~ekI.40
       Y     = x.74^(x.76*inv((~ekI.40*x.75)))
       z     = x.74^(x.76*inv(x.75))
  */

rule (modulo E) Resp_1:
   [ !Ltk( $R, ~ltkR ), Fr( ~ekR ), In( <$I, $R, X> ) ]
  -->
   [
   Resp_1( $I, $R, ~ltkR, ~ekR, X ),
   Out( <$R, $I, 'g'^~ekR, sign(<'g'^~ekR, X>, ~ltkR), 
         mac(X^~ekR, sign(<'g'^~ekR, X>, ~ltkR))>
   )
   ]

  /*
  rule (modulo AC) Resp_1:
     [ !Ltk( $R, ~ltkR ), Fr( ~ekR ), In( <$I, $R, X> ) ]
    -->
     [
     Resp_1( $I, $R, ~ltkR, ~ekR, X ),
     Out( <$R, $I, 'g'^~ekR, sign(<'g'^~ekR, X>, ~ltkR), 
           mac(z, sign(<'g'^~ekR, X>, ~ltkR))>
     )
     ]
  
    variants (modulo AC)
    1. ~ekR  = ~ekR.14
       X     = X.16
       z     = X.16^~ekR.14
    
    2. ~ekR  = ~ekR.16
       X     = z.20^inv(~ekR.16)
       z     = z.20
    
    3. ~ekR  = ~ekR.35
       X     = x.65^x.66
       z     = x.65^(~ekR.35*x.66)
    
    4. ~ekR  = ~ekR.35
       X     = x.65^inv((~ekR.35*x.66))
       z     = x.65^inv(x.66)
    
    5. ~ekR  = ~ekR.35
       X     = x.65^(x.66*inv(~ekR.35))
       z     = x.65^x.66
    
    6. ~ekR  = ~ekR.36
       X     = x.66^(x.68*inv((~ekR.36*x.67)))
       z     = x.66^(x.68*inv(x.67))
  */

rule (modulo E) Resp_2:
   [
   !Pk( $I, pk(~ltkI) ), Resp_1( $I, $R, ~ltkR, ~ekR, X ),
   In( <$I, $R, sign(<X, 'g'^~ekR>, ~ltkI), 
        mac(X^~ekR, sign(<X, 'g'^~ekR>, ~ltkI))>
   )
   ]
  --[ AcceptedR( ~ekR, $I, $R, X, 'g'^~ekR, KDF(X^~ekR) ) ]->
   [ !SessionKey( ~ekR, $I, $R, KDF(X^~ekR) ) ]

  /*
  rule (modulo AC) Resp_2:
     [
     !Pk( $I, pk(~ltkI) ), Resp_1( $I, $R, ~ltkR, ~ekR, X ),
     In( <$I, $R, sign(<X, 'g'^~ekR>, ~ltkI), 
          mac(z, sign(<X, 'g'^~ekR>, ~ltkI))>
     )
     ]
    --[ AcceptedR( ~ekR, $I, $R, X, 'g'^~ekR, KDF(z) ) ]->
     [ !SessionKey( ~ekR, $I, $R, KDF(z) ) ]
  
    variants (modulo AC)
    1. ~ekR  = ~ekR.16
       X     = X.19
       z     = X.19^~ekR.16
    
    2. ~ekR  = ~ekR.18
       X     = z.23^inv(~ekR.18)
       z     = z.23
    
    3. ~ekR  = ~ekR.39
       X     = x.73^x.74
       z     = x.73^(~ekR.39*x.74)
    
    4. ~ekR  = ~ekR.39
       X     = x.73^inv((~ekR.39*x.74))
       z     = x.73^inv(x.74)
    
    5. ~ekR  = ~ekR.39
       X     = x.73^(x.74*inv(~ekR.39))
       z     = x.73^x.74
    
    6. ~ekR  = ~ekR.40
       X     = x.74^(x.76*inv((~ekR.40*x.75)))
       z     = x.74^(x.76*inv(x.75))
  */

rule (modulo E) Sessionkey_Reveal:
   [ !SessionKey( ~tid, $I, $R, k ) ] --[ SesskRev( ~tid ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

lemma (modulo E) KI_Perfect_Forward_Secrecy_I:
  all-traces
  "not(Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
        (((((AcceptedI( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
            (not(Ex #r.8. Corrupt( I.1 ) @ #r.8))) &
           (not(Ex #r.9. Corrupt( R.2 ) @ #r.9))) &
          (K( sessKey.3 ) @ #k.5)) &
         (not(Ex #i3.10. SesskRev( ttest ) @ #i3.10))) &
        (not(Ex #i3.11 #i4.12 tpartner.13 kpartner.14.
              (SesskRev( tpartner.13 ) @ #i3.11) &
              (AcceptedR( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14
               ) @ #i4.12))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
  (AcceptedI( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
  (K( sessKey.3 ) @ #k.5)
 &
  (All #r.8. (Corrupt( I.1 ) @ #r.8) ==> F) &
  (All #r.9. (Corrupt( R.2 ) @ #r.9) ==> F) &
  (All #i3.10. (SesskRev( ttest ) @ #i3.10) ==> F) &
  (All #i3.11 #i4.12 tpartner.13 kpartner.14.
    (SesskRev( tpartner.13 ) @ #i3.11) &
    (AcceptedR( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14 ) @ #i4.12)
   ==>
    F)"
*/
simplify
solve( (#i1.4, 0)[Init_1( $I.8, $R.8, ~ltkI.8, ~ekI.8 )] )
  case Init_1_case_1
  solve( (#i1.4, 1)[!Pk( $R.8, pk(~ltkR.8) )] )
    case Register_pk_evil
    by contradiction // from formulas
  next
    case Register_pk_normal
    solve( KU((#vf.9, 0), mac(z.8, sign(<hkr.7, 'g'^~ekI.8>, ~ltkR.8))) )
      case Init_2_case_1
      solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekI.72*~ekI.73))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                   sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
          case Init_2
          by contradiction // cyclic
        next
          case cmac
          solve( (#vr.107, 0)[!KU( f_.110, 'g'^(~ekI.72*~ekI.73)
                              )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.138, 1)[!KU( f_.140, ~ekI.153 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.138, 1)[!KU( f_.140, ~ekI.152 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.116, 1), ~ekI.72) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.96, 0)[!KU( f_.97, ~ltkI.85 )] /* may loop */ )
          case fresh
          solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                     sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekI.73)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.159 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.93, 0)[!KU( f_.94, ~ltkR.85 )] /* may loop */ )
          case fresh
          solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                     sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekI.73)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.159 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.93, 0)[!KU( f_.94, ~ltkR.85 )] /* may loop */ )
          case fresh
          solve( (#vf.97, 0)[!KU( f_.98, ~ltkI.85 )] /* may loop */ )
            case fresh
            solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                       sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
              case Init_2
              by contradiction // cyclic
            next
              case cmac
              solve( (#vr.119, 0)[!KU( f_.122, 'g'^(~ekI.72*~ekI.73)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.165 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.164 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.128, 1), ~ekI.72) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                   sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
          case Init_2
          by contradiction // cyclic
        next
          case cmac
          solve( (#vr.107, 0)[!KU( f_.110, 'g'^(~ekI.72*~ekI.73)
                              )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.138, 1)[!KU( f_.140, ~ekI.153 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.138, 1)[!KU( f_.140, ~ekI.152 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.116, 1), ~ekI.72) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.98, 0)[!KU( f_.99, ~ltkR.85 )] /* may loop */ )
          case fresh
          solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                     sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekI.73)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.159 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.90, 0)[!KU( f_.91, ~ltkI.85 )] /* may loop */ )
          case fresh
          solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                     sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
            case Init_2
            by contradiction // cyclic
          next
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekI.73)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.159 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.90, 0)[!KU( f_.91, ~ltkI.85 )] /* may loop */ )
          case fresh
          solve( (#vf.99, 0)[!KU( f_.100, ~ltkR.85 )] /* may loop */ )
            case fresh
            solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                       sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
              case Init_2
              by contradiction // cyclic
            next
              case cmac
              solve( (#vr.119, 0)[!KU( f_.122, 'g'^(~ekI.72*~ekI.73)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.165 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.164 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.128, 1), ~ekI.72) )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( (#vr.77, 0)[!KU( f_.79, 'g'^(~ekI.72*~ekI.73) )] /* may loop */ )
          case Init_1_case_1
          by solve( (#vr.106, 1)[!KU( f_.108, ~ekI.121 )] /* may loop */ )
        next
          case Init_1_case_2
          by solve( (#vr.106, 1)[!KU( f_.108, ~ekI.120 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.84, 1), ~ekI.72) )
        qed
      qed
    next
      case Init_2_case_2
      by solve( (#vf.52, 0)[!KU( f_.53, ~ltkR.8 )] /* may loop */ )
    next
      case Init_2_case_3
      solve( (#vf.49, 0)[!KU( f_.50, ~ltkR.41 )] /* may loop */ )
        case fresh
        solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekI.72*~ekI.73))
                         )] /* may loop */ )
          case Sessionkey_Reveal_case_1
          solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                     sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekI.73)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.159 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_2
          solve( (#vf.102, 0)[!KU( f_.103, ~ltkI.91 )] /* may loop */ )
            case fresh
            solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                       sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
              case cmac
              solve( (#vr.119, 0)[!KU( f_.122, 'g'^(~ekI.72*~ekI.73)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.165 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.164 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.128, 1), ~ekI.72) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_3
          solve( (#vf.99, 0)[!KU( f_.100, ~ltkR.91 )] /* may loop */ )
            case fresh
            solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                       sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
              case cmac
              solve( (#vr.119, 0)[!KU( f_.122, 'g'^(~ekI.72*~ekI.73)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.165 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.164 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.128, 1), ~ekI.72) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_4
          solve( (#vf.99, 0)[!KU( f_.100, ~ltkR.91 )] /* may loop */ )
            case fresh
            solve( (#vf.103, 0)[!KU( f_.104, ~ltkI.91 )] /* may loop */ )
              case fresh
              solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                         sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
                case cmac
                solve( (#vr.125, 0)[!KU( f_.128, 'g'^(~ekI.72*~ekI.73)
                                    )] /* may loop */ )
                  case Init_1_case_1
                  by solve( (#vr.156, 1)[!KU( f_.158, ~ekI.171 )] /* may loop */ )
                next
                  case Init_1_case_2
                  by solve( (#vr.156, 1)[!KU( f_.158, ~ekI.170 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.134, 1), ~ekI.72) )
                qed
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_5
          solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                     sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekI.73)
                                )] /* may loop */ )
              case Init_1_case_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.159 )] /* may loop */ )
            next
              case Init_1_case_2
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_6
          solve( (#vf.104, 0)[!KU( f_.105, ~ltkR.91 )] /* may loop */ )
            case fresh
            solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                       sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
              case cmac
              solve( (#vr.119, 0)[!KU( f_.122, 'g'^(~ekI.72*~ekI.73)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.165 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.164 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.128, 1), ~ekI.72) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_7
          solve( (#vf.96, 0)[!KU( f_.97, ~ltkI.91 )] /* may loop */ )
            case fresh
            solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                       sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
              case cmac
              solve( (#vr.119, 0)[!KU( f_.122, 'g'^(~ekI.72*~ekI.73)
                                  )] /* may loop */ )
                case Init_1_case_1
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.165 )] /* may loop */ )
              next
                case Init_1_case_2
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekI.164 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.128, 1), ~ekI.72) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_8
          solve( (#vf.96, 0)[!KU( f_.97, ~ltkI.91 )] /* may loop */ )
            case fresh
            solve( (#vf.105, 0)[!KU( f_.106, ~ltkR.91 )] /* may loop */ )
              case fresh
              solve( KU((#vf.42, 0), mac('g'^(~ekI.72*~ekI.73),
                                         sign(<'g'^~ekI.72, 'g'^~ekI.73>, ~ltkR.41))) )
                case cmac
                solve( (#vr.125, 0)[!KU( f_.128, 'g'^(~ekI.72*~ekI.73)
                                    )] /* may loop */ )
                  case Init_1_case_1
                  by solve( (#vr.156, 1)[!KU( f_.158, ~ekI.171 )] /* may loop */ )
                next
                  case Init_1_case_2
                  by solve( (#vr.156, 1)[!KU( f_.158, ~ekI.170 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.134, 1), ~ekI.72) )
                qed
              qed
            qed
          qed
        next
          case cKDF
          solve( (#vr.83, 0)[!KU( f_.85, 'g'^(~ekI.72*~ekI.73) )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.112, 1)[!KU( f_.114, ~ekI.127 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.112, 1)[!KU( f_.114, ~ekI.126 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.90, 1), ~ekI.72) )
          qed
        qed
      qed
    next
      case Init_2_case_4
      solve( (#vf.49, 0)[!KU( f_.50, ~ltkR.41 )] /* may loop */ )
        case fresh
        by solve( (#vf.53, 0)[!KU( f_.54, ~ltkR.8 )] /* may loop */ )
      qed
    next
      case Resp_1_case_1
      solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekI.72*~ekR.73))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.86, 0), mac('g'^(~ekI.72*~ekR.73),
                                   sign(<x.101^x.102, 'g'^~tid.83>, ~ltkR.85))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.126, 0)[!KU( f_.127, ~ltkR.85 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.123, 0)[!KU( f_.124, ~ltkR.115 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.123, 0)[!KU( f_.124, ~ltkR.115 )] /* may loop */ )
            case fresh
            by solve( (#vf.127, 0)[!KU( f_.128, ~ltkR.85 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          solve( splitEqs(1) )
            case split
            by contradiction // from formulas
          qed
        next
          case Resp_1_case_2
          by solve( (#vf.121, 0)[!KU( f_.122, ~ltkR.85 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.107, 0)[!KU( f_.110, 'g'^(~ekI.72*~ekR.73)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.138, 1)[!KU( f_.140, ~ekR.153 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.145, 1)[!KU( f_.147, ~ekI.152 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.116, 1), ~ekI.72) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.96, 0)[!KU( f_.97, ~ltkI.85 )] /* may loop */ )
          case fresh
          solve( KU((#vf.86, 0), mac('g'^(~ekI.72*~ekR.73),
                                     sign(<'g'^x.102, 'g'^~tid.83>, ~ltkR.85))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.132, 0)[!KU( f_.133, ~ltkR.85 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.129, 0)[!KU( f_.130, ~ltkR.121 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.129, 0)[!KU( f_.130, ~ltkR.121 )] /* may loop */ )
              case fresh
              by solve( (#vf.133, 0)[!KU( f_.134, ~ltkR.85 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.127, 0)[!KU( f_.128, ~ltkR.85 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekR.73)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekR.159 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.151, 1)[!KU( f_.153, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.93, 0)[!KU( f_.94, ~ltkR.85 )] /* may loop */ )
          case fresh
          solve( KU((#vf.86, 0), mac('g'^(~ekI.72*~ekR.73),
                                     sign(<'g'^x.102, 'g'^~tid.83>, ~ltkR.85))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.129, 0)[!KU( f_.130, ~ltkR.121 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekR.73)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekR.159 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.151, 1)[!KU( f_.153, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.93, 0)[!KU( f_.94, ~ltkR.85 )] /* may loop */ )
          case fresh
          solve( (#vf.97, 0)[!KU( f_.98, ~ltkI.85 )] /* may loop */ )
            case fresh
            solve( KU((#vf.86, 0), mac('g'^(~ekI.72*~ekR.73),
                                       sign(<'g'^x.102, 'g'^~tid.83>, ~ltkR.85))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.135, 0)[!KU( f_.136, ~ltkR.127 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.119, 0)[!KU( f_.122, 'g'^(~ekI.72*~ekR.73)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekR.165 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.157, 1)[!KU( f_.159, ~ekI.164 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.128, 1), ~ekI.72) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.86, 0), mac('g'^(~ekI.72*~ekR.73),
                                   sign(<x.101^x.102, 'g'^~tid.83>, ~ltkI.85))) )
          case Init_2_case_1
          solve( splitEqs(1) )
            case split
            by contradiction // from formulas
          qed
        next
          case Init_2_case_2
          by solve( (#vf.126, 0)[!KU( f_.127, ~ltkI.85 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.123, 0)[!KU( f_.124, ~ltkR.115 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.123, 0)[!KU( f_.124, ~ltkR.115 )] /* may loop */ )
            case fresh
            by solve( (#vf.127, 0)[!KU( f_.128, ~ltkI.85 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          by solve( splitEqs(1) )
        next
          case Resp_1_case_2
          by solve( (#vf.121, 0)[!KU( f_.122, ~ltkI.85 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.107, 0)[!KU( f_.110, 'g'^(~ekI.72*~ekR.73)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.138, 1)[!KU( f_.140, ~ekR.153 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.145, 1)[!KU( f_.147, ~ekI.152 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.116, 1), ~ekI.72) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.98, 0)[!KU( f_.99, ~ltkR.85 )] /* may loop */ )
          case fresh
          solve( KU((#vf.86, 0), mac('g'^(~ekI.72*~ekR.73),
                                     sign(<'g'^x.102, 'g'^~tid.83>, ~ltkI.85))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.132, 0)[!KU( f_.133, ~ltkI.85 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.129, 0)[!KU( f_.130, ~ltkR.121 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.129, 0)[!KU( f_.130, ~ltkR.121 )] /* may loop */ )
              case fresh
              by solve( (#vf.133, 0)[!KU( f_.134, ~ltkI.85 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.127, 0)[!KU( f_.128, ~ltkI.85 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekR.73)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekR.159 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.151, 1)[!KU( f_.153, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.90, 0)[!KU( f_.91, ~ltkI.85 )] /* may loop */ )
          case fresh
          solve( KU((#vf.86, 0), mac('g'^(~ekI.72*~ekR.73),
                                     sign(<'g'^x.102, 'g'^~tid.83>, ~ltkI.85))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.129, 0)[!KU( f_.130, ~ltkR.121 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.113, 0)[!KU( f_.116, 'g'^(~ekI.72*~ekR.73)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.144, 1)[!KU( f_.146, ~ekR.159 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.151, 1)[!KU( f_.153, ~ekI.158 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.122, 1), ~ekI.72) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.90, 0)[!KU( f_.91, ~ltkI.85 )] /* may loop */ )
          case fresh
          solve( (#vf.99, 0)[!KU( f_.100, ~ltkR.85 )] /* may loop */ )
            case fresh
            solve( KU((#vf.86, 0), mac('g'^(~ekI.72*~ekR.73),
                                       sign(<'g'^x.102, 'g'^~tid.83>, ~ltkI.85))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.135, 0)[!KU( f_.136, ~ltkR.127 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.119, 0)[!KU( f_.122, 'g'^(~ekI.72*~ekR.73)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.150, 1)[!KU( f_.152, ~ekR.165 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.157, 1)[!KU( f_.159, ~ekI.164 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.128, 1), ~ekI.72) )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( (#vr.77, 0)[!KU( f_.79, 'g'^(~ekI.72*~ekR.73) )] /* may loop */ )
          case Init_1
          by solve( (#vr.106, 1)[!KU( f_.108, ~ekR.121 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.113, 1)[!KU( f_.115, ~ekI.120 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.84, 1), ~ekI.72) )
        qed
      qed
    next
      case Resp_1_case_2
      by solve( (#vf.47, 0)[!KU( f_.48, ~ltkR.8 )] /* may loop */ )
    next
      case cmac
      solve( KU((#vf.9, 0), sign(<hkr.7, 'g'^~ekI.8>, ~ltkR.8)) )
        case Init_2_case_1
        solve( (#vr.33, 0)[!KU( f_.36, 'g'^(~ekI.87*~ekI.88) )] /* may loop */ )
          case Init_1_case_1
          by solve( (#vr.115, 1)[!KU( f_.117, ~ekI.130 )] /* may loop */ )
        next
          case Init_1_case_2
          by solve( (#vr.115, 1)[!KU( f_.117, ~ekI.129 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.93, 1), ~ekI.87) )
        qed
      next
        case Init_2_case_2
        by solve( (#vf.61, 0)[!KU( f_.62, ~ltkR.8 )] /* may loop */ )
      next
        case Init_2_case_3
        solve( (#vf.58, 0)[!KU( f_.59, ~ltkR.50 )] /* may loop */ )
          case fresh
          solve( (#vr.33, 0)[!KU( f_.36, 'g'^(~ekI.87*~ekI.88) )] /* may loop */ )
            case Init_1_case_1
            by solve( (#vr.121, 1)[!KU( f_.123, ~ekI.136 )] /* may loop */ )
          next
            case Init_1_case_2
            by solve( (#vr.121, 1)[!KU( f_.123, ~ekI.135 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.99, 1), ~ekI.87) )
          qed
        qed
      next
        case Init_2_case_4
        solve( (#vf.58, 0)[!KU( f_.59, ~ltkR.50 )] /* may loop */ )
          case fresh
          by solve( (#vf.62, 0)[!KU( f_.63, ~ltkR.8 )] /* may loop */ )
        qed
      next
        case Resp_1_case_1
        solve( (#vr.33, 0)[!KU( f_.36, 'g'^(~ekI.87*~ekR.88) )] /* may loop */ )
          case Init_1
          by solve( (#vr.115, 1)[!KU( f_.117, ~ekR.130 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.122, 1)[!KU( f_.124, ~ekI.129 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.93, 1), ~ekI.87) )
        qed
      next
        case Resp_1_case_2
        by solve( (#vf.56, 0)[!KU( f_.57, ~ltkR.8 )] /* may loop */ )
      next
        case csign
        by solve( (#vr.42, 1)[!KU( f_.46, ~ltkR.8 )] /* may loop */ )
      qed
    qed
  qed
next
  case Init_1_case_2
  by contradiction // from formulas
qed

lemma (modulo E) KI_Perfect_Forward_Secrecy_R:
  all-traces
  "not(Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
        (((((AcceptedR( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
            (not(Ex #r.8. Corrupt( I.1 ) @ #r.8))) &
           (not(Ex #r.9. Corrupt( R.2 ) @ #r.9))) &
          (K( sessKey.3 ) @ #k.5)) &
         (not(Ex #i2.10. SesskRev( ttest ) @ #i2.10))) &
        (not(Ex #i2.11 #i3.12 tpartner.13 kpartner.14.
              (SesskRev( tpartner.13 ) @ #i2.11) &
              (AcceptedI( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14
               ) @ #i3.12))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
  (AcceptedR( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
  (K( sessKey.3 ) @ #k.5)
 &
  (All #r.8. (Corrupt( I.1 ) @ #r.8) ==> F) &
  (All #r.9. (Corrupt( R.2 ) @ #r.9) ==> F) &
  (All #i2.10. (SesskRev( ttest ) @ #i2.10) ==> F) &
  (All #i2.11 #i3.12 tpartner.13 kpartner.14.
    (SesskRev( tpartner.13 ) @ #i2.11) &
    (AcceptedI( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14 ) @ #i3.12)
   ==>
    F)"
*/
simplify
solve( (#i1.4, 0)[!Pk( $I.8, pk(~ltkI.8) )] )
  case Register_pk_evil
  by contradiction // from formulas
next
  case Register_pk_normal
  solve( (#i1.4, 1)[Resp_1( $I.8, $R.8, ~ltkR.8, ~ekR.8, hki.6 )] )
    case Resp_1_case_1
    solve( KU((#vf.9, 0), mac(z.8, sign(<hki.6, 'g'^~ekR.8>, ~ltkI.8))) )
      case Init_2_case_1
      solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekR.81*~ekI.82))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                   sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
          case Resp_1
          solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekI.82),
                                     sign(<'g'^x.111, 'g'^~tid.92>, ~ltkR.94))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.174, 0)[!KU( f_.175, ~ltkR.94 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.171, 0)[!KU( f_.172, ~ltkR.163 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.171, 0)[!KU( f_.172, ~ltkR.163 )] /* may loop */ )
              case fresh
              by solve( (#vf.175, 0)[!KU( f_.176, ~ltkR.94 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            solve( splitEqs(1) )
              case split
              by contradiction // from formulas
            qed
          next
            case Resp_1_case_2
            by solve( (#vf.169, 0)[!KU( f_.170, ~ltkR.94 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.155, 0)[!KU( f_.158, 'g'^(~ekR.81*~ekI.82)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.186, 1)[!KU( f_.188, ~ekR.200 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.193, 1)[!KU( f_.195, ~ekI.201 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.164, 1), ~ekR.81) )
            qed
          qed
        next
          case cmac
          solve( (#vr.116, 0)[!KU( f_.119, 'g'^(~ekR.81*~ekI.82)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.147, 1)[!KU( f_.149, ~ekR.161 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.154, 1)[!KU( f_.156, ~ekI.162 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.125, 1), ~ekR.81) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.105, 0)[!KU( f_.106, ~ltkI.94 )] /* may loop */ )
          case fresh
          solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                     sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
            case Resp_1
            solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^x.111, 'g'^~tid.92>, ~ltkR.94))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( (#vf.180, 0)[!KU( f_.181, ~ltkR.94 )] /* may loop */ )
            next
              case Init_2_case_3
              solve( (#vf.177, 0)[!KU( f_.178, ~ltkR.169 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Init_2_case_4
              solve( (#vf.177, 0)[!KU( f_.178, ~ltkR.169 )] /* may loop */ )
                case fresh
                by solve( (#vf.181, 0)[!KU( f_.182, ~ltkR.94 )] /* may loop */ )
              qed
            next
              case Resp_1_case_1
              by solve( splitEqs(1) )
            next
              case Resp_1_case_2
              by solve( (#vf.175, 0)[!KU( f_.176, ~ltkR.94 )] /* may loop */ )
            next
              case cmac
              solve( (#vr.161, 0)[!KU( f_.164, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.192, 1)[!KU( f_.194, ~ekR.206 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.199, 1)[!KU( f_.201, ~ekI.207 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.170, 1), ~ekR.81) )
              qed
            qed
          next
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekI.82)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.153, 1)[!KU( f_.155, ~ekR.167 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekI.168 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.102, 0)[!KU( f_.103, ~ltkR.94 )] /* may loop */ )
          case fresh
          solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                     sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
            case Resp_1
            solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^x.111, 'g'^~tid.92>, ~ltkR.94))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.177, 0)[!KU( f_.178, ~ltkR.169 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.161, 0)[!KU( f_.164, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.192, 1)[!KU( f_.194, ~ekR.206 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.199, 1)[!KU( f_.201, ~ekI.207 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.170, 1), ~ekR.81) )
              qed
            qed
          next
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekI.82)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.153, 1)[!KU( f_.155, ~ekR.167 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekI.168 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.102, 0)[!KU( f_.103, ~ltkR.94 )] /* may loop */ )
          case fresh
          solve( (#vf.106, 0)[!KU( f_.107, ~ltkI.94 )] /* may loop */ )
            case fresh
            solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
              case Resp_1
              solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekI.82),
                                         sign(<'g'^x.111, 'g'^~tid.92>, ~ltkR.94))) )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                solve( (#vf.183, 0)[!KU( f_.184, ~ltkR.175 )] /* may loop */ )
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( (#vr.167, 0)[!KU( f_.170, 'g'^(~ekR.81*~ekI.82)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.198, 1)[!KU( f_.200, ~ekR.212 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.205, 1)[!KU( f_.207, ~ekI.213 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.176, 1), ~ekR.81) )
                qed
              qed
            next
              case cmac
              solve( (#vr.128, 0)[!KU( f_.131, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.159, 1)[!KU( f_.161, ~ekR.173 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekI.174 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.137, 1), ~ekR.81) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                   sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
          case Resp_1
          solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekI.82),
                                     sign(<'g'^x.111, 'g'^~tid.92>, ~ltkI.94))) )
            case Init_2_case_1
            solve( splitEqs(1) )
              case split
              by contradiction // from formulas
            qed
          next
            case Init_2_case_2
            by solve( (#vf.174, 0)[!KU( f_.175, ~ltkI.94 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.171, 0)[!KU( f_.172, ~ltkR.163 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.171, 0)[!KU( f_.172, ~ltkR.163 )] /* may loop */ )
              case fresh
              by solve( (#vf.175, 0)[!KU( f_.176, ~ltkI.94 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.169, 0)[!KU( f_.170, ~ltkI.94 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.155, 0)[!KU( f_.158, 'g'^(~ekR.81*~ekI.82)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.186, 1)[!KU( f_.188, ~ekR.200 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.193, 1)[!KU( f_.195, ~ekI.201 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.164, 1), ~ekR.81) )
            qed
          qed
        next
          case cmac
          solve( (#vr.116, 0)[!KU( f_.119, 'g'^(~ekR.81*~ekI.82)
                              )] /* may loop */ )
            case Init_1
            by solve( (#vr.147, 1)[!KU( f_.149, ~ekR.161 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.154, 1)[!KU( f_.156, ~ekI.162 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.125, 1), ~ekR.81) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.107, 0)[!KU( f_.108, ~ltkR.94 )] /* may loop */ )
          case fresh
          solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                     sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
            case Resp_1
            solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^x.111, 'g'^~tid.92>, ~ltkI.94))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( (#vf.180, 0)[!KU( f_.181, ~ltkI.94 )] /* may loop */ )
            next
              case Init_2_case_3
              solve( (#vf.177, 0)[!KU( f_.178, ~ltkR.169 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Init_2_case_4
              solve( (#vf.177, 0)[!KU( f_.178, ~ltkR.169 )] /* may loop */ )
                case fresh
                by solve( (#vf.181, 0)[!KU( f_.182, ~ltkI.94 )] /* may loop */ )
              qed
            next
              case Resp_1_case_1
              by solve( splitEqs(1) )
            next
              case Resp_1_case_2
              by solve( (#vf.175, 0)[!KU( f_.176, ~ltkI.94 )] /* may loop */ )
            next
              case cmac
              solve( (#vr.161, 0)[!KU( f_.164, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.192, 1)[!KU( f_.194, ~ekR.206 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.199, 1)[!KU( f_.201, ~ekI.207 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.170, 1), ~ekR.81) )
              qed
            qed
          next
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekI.82)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.153, 1)[!KU( f_.155, ~ekR.167 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekI.168 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.99, 0)[!KU( f_.100, ~ltkI.94 )] /* may loop */ )
          case fresh
          solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                     sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
            case Resp_1
            solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^x.111, 'g'^~tid.92>, ~ltkI.94))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.177, 0)[!KU( f_.178, ~ltkR.169 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.161, 0)[!KU( f_.164, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.192, 1)[!KU( f_.194, ~ekR.206 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.199, 1)[!KU( f_.201, ~ekI.207 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.170, 1), ~ekR.81) )
              qed
            qed
          next
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekI.82)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.153, 1)[!KU( f_.155, ~ekR.167 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekI.168 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.99, 0)[!KU( f_.100, ~ltkI.94 )] /* may loop */ )
          case fresh
          solve( (#vf.108, 0)[!KU( f_.109, ~ltkR.94 )] /* may loop */ )
            case fresh
            solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
              case Resp_1
              solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekI.82),
                                         sign(<'g'^x.111, 'g'^~tid.92>, ~ltkI.94))) )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                solve( (#vf.183, 0)[!KU( f_.184, ~ltkR.175 )] /* may loop */ )
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( (#vr.167, 0)[!KU( f_.170, 'g'^(~ekR.81*~ekI.82)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.198, 1)[!KU( f_.200, ~ekR.212 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.205, 1)[!KU( f_.207, ~ekI.213 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.176, 1), ~ekR.81) )
                qed
              qed
            next
              case cmac
              solve( (#vr.128, 0)[!KU( f_.131, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.159, 1)[!KU( f_.161, ~ekR.173 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekI.174 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.137, 1), ~ekR.81) )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( (#vr.86, 0)[!KU( f_.88, 'g'^(~ekR.81*~ekI.82) )] /* may loop */ )
          case Init_1
          by solve( (#vr.115, 1)[!KU( f_.117, ~ekR.129 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.122, 1)[!KU( f_.124, ~ekI.130 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.93, 1), ~ekR.81) )
        qed
      qed
    next
      case Init_2_case_2
      by solve( (#vf.55, 0)[!KU( f_.56, ~ltkI.8 )] /* may loop */ )
    next
      case Init_2_case_3
      solve( (#vf.52, 0)[!KU( f_.53, ~ltkR.44 )] /* may loop */ )
        case fresh
        solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekR.81*~ekI.82))
                         )] /* may loop */ )
          case Sessionkey_Reveal_case_1
          solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                     sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekI.82)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.153, 1)[!KU( f_.155, ~ekR.167 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekI.168 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_2
          solve( (#vf.111, 0)[!KU( f_.112, ~ltkI.100 )] /* may loop */ )
            case fresh
            solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
              case cmac
              solve( (#vr.128, 0)[!KU( f_.131, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.159, 1)[!KU( f_.161, ~ekR.173 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekI.174 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.137, 1), ~ekR.81) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_3
          solve( (#vf.108, 0)[!KU( f_.109, ~ltkR.100 )] /* may loop */ )
            case fresh
            solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
              case cmac
              solve( (#vr.128, 0)[!KU( f_.131, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.159, 1)[!KU( f_.161, ~ekR.173 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekI.174 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.137, 1), ~ekR.81) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_4
          solve( (#vf.108, 0)[!KU( f_.109, ~ltkR.100 )] /* may loop */ )
            case fresh
            solve( (#vf.112, 0)[!KU( f_.113, ~ltkI.100 )] /* may loop */ )
              case fresh
              solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                         sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
                case cmac
                solve( (#vr.134, 0)[!KU( f_.137, 'g'^(~ekR.81*~ekI.82)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.165, 1)[!KU( f_.167, ~ekR.179 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.172, 1)[!KU( f_.174, ~ekI.180 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.143, 1), ~ekR.81) )
                qed
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_5
          solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                     sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekI.82)
                                )] /* may loop */ )
              case Init_1
              by solve( (#vr.153, 1)[!KU( f_.155, ~ekR.167 )] /* may loop */ )
            next
              case Resp_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekI.168 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        next
          case Sessionkey_Reveal_case_6
          solve( (#vf.113, 0)[!KU( f_.114, ~ltkR.100 )] /* may loop */ )
            case fresh
            solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
              case cmac
              solve( (#vr.128, 0)[!KU( f_.131, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.159, 1)[!KU( f_.161, ~ekR.173 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekI.174 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.137, 1), ~ekR.81) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_7
          solve( (#vf.105, 0)[!KU( f_.106, ~ltkI.100 )] /* may loop */ )
            case fresh
            solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                       sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
              case cmac
              solve( (#vr.128, 0)[!KU( f_.131, 'g'^(~ekR.81*~ekI.82)
                                  )] /* may loop */ )
                case Init_1
                by solve( (#vr.159, 1)[!KU( f_.161, ~ekR.173 )] /* may loop */ )
              next
                case Resp_1
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekI.174 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.137, 1), ~ekR.81) )
              qed
            qed
          qed
        next
          case Sessionkey_Reveal_case_8
          solve( (#vf.105, 0)[!KU( f_.106, ~ltkI.100 )] /* may loop */ )
            case fresh
            solve( (#vf.114, 0)[!KU( f_.115, ~ltkR.100 )] /* may loop */ )
              case fresh
              solve( KU((#vf.45, 0), mac('g'^(~ekR.81*~ekI.82),
                                         sign(<'g'^~ekR.81, 'g'^~ekI.82>, ~ltkR.44))) )
                case cmac
                solve( (#vr.134, 0)[!KU( f_.137, 'g'^(~ekR.81*~ekI.82)
                                    )] /* may loop */ )
                  case Init_1
                  by solve( (#vr.165, 1)[!KU( f_.167, ~ekR.179 )] /* may loop */ )
                next
                  case Resp_1
                  by solve( (#vr.172, 1)[!KU( f_.174, ~ekI.180 )] /* may loop */ )
                next
                  case cexp
                  by solve( KU((#vr.143, 1), ~ekR.81) )
                qed
              qed
            qed
          qed
        next
          case cKDF
          solve( (#vr.92, 0)[!KU( f_.94, 'g'^(~ekR.81*~ekI.82) )] /* may loop */ )
            case Init_1
            by solve( (#vr.121, 1)[!KU( f_.123, ~ekR.135 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.128, 1)[!KU( f_.130, ~ekI.136 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.99, 1), ~ekR.81) )
          qed
        qed
      qed
    next
      case Init_2_case_4
      solve( (#vf.52, 0)[!KU( f_.53, ~ltkR.44 )] /* may loop */ )
        case fresh
        by solve( (#vf.56, 0)[!KU( f_.57, ~ltkI.8 )] /* may loop */ )
      qed
    next
      case Resp_1_case_1
      solve( (#k.5, 0)[!KU( f_.11, KDF('g'^(~ekR.81*~ekR.82))
                       )] /* may loop */ )
        case Sessionkey_Reveal_case_1
        solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekR.82),
                                   sign(<x.110^x.111, 'g'^~tid.92>, ~ltkR.94))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.135, 0)[!KU( f_.136, ~ltkR.94 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.132, 0)[!KU( f_.133, ~ltkR.124 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.132, 0)[!KU( f_.133, ~ltkR.124 )] /* may loop */ )
            case fresh
            by solve( (#vf.136, 0)[!KU( f_.137, ~ltkR.94 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          by solve( splitEqs(1) )
        next
          case Resp_1_case_2
          by solve( (#vf.130, 0)[!KU( f_.131, ~ltkR.94 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.116, 0)[!KU( f_.119, 'g'^(~ekR.81*~ekR.82)
                              )] /* may loop */ )
            case Resp_1_case_1
            by solve( (#vr.154, 1)[!KU( f_.156, ~ekR.162 )] /* may loop */ )
          next
            case Resp_1_case_2
            by solve( (#vr.154, 1)[!KU( f_.156, ~ekR.161 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.125, 1), ~ekR.81) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( (#vf.105, 0)[!KU( f_.106, ~ltkI.94 )] /* may loop */ )
          case fresh
          solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekR.82),
                                     sign(<'g'^x.111, 'g'^~tid.92>, ~ltkR.94))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.141, 0)[!KU( f_.142, ~ltkR.94 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.138, 0)[!KU( f_.139, ~ltkR.130 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.138, 0)[!KU( f_.139, ~ltkR.130 )] /* may loop */ )
              case fresh
              by solve( (#vf.142, 0)[!KU( f_.143, ~ltkR.94 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.136, 0)[!KU( f_.137, ~ltkR.94 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekR.82)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekR.168 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekR.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( (#vf.102, 0)[!KU( f_.103, ~ltkR.94 )] /* may loop */ )
          case fresh
          solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekR.82),
                                     sign(<'g'^x.111, 'g'^~tid.92>, ~ltkR.94))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.138, 0)[!KU( f_.139, ~ltkR.130 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekR.82)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekR.168 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekR.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( (#vf.102, 0)[!KU( f_.103, ~ltkR.94 )] /* may loop */ )
          case fresh
          solve( (#vf.106, 0)[!KU( f_.107, ~ltkI.94 )] /* may loop */ )
            case fresh
            solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekR.82),
                                       sign(<'g'^x.111, 'g'^~tid.92>, ~ltkR.94))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.144, 0)[!KU( f_.145, ~ltkR.136 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.128, 0)[!KU( f_.131, 'g'^(~ekR.81*~ekR.82)
                                  )] /* may loop */ )
                case Resp_1_case_1
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekR.174 )] /* may loop */ )
              next
                case Resp_1_case_2
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekR.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.137, 1), ~ekR.81) )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekR.82),
                                   sign(<x.110^x.111, 'g'^~tid.92>, ~ltkI.94))) )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( (#vf.135, 0)[!KU( f_.136, ~ltkI.94 )] /* may loop */ )
        next
          case Init_2_case_3
          solve( (#vf.132, 0)[!KU( f_.133, ~ltkR.124 )] /* may loop */ )
            case fresh
            by solve( splitEqs(1) )
          qed
        next
          case Init_2_case_4
          solve( (#vf.132, 0)[!KU( f_.133, ~ltkR.124 )] /* may loop */ )
            case fresh
            by solve( (#vf.136, 0)[!KU( f_.137, ~ltkI.94 )] /* may loop */ )
          qed
        next
          case Resp_1_case_1
          solve( splitEqs(1) )
            case split_case_1
            by contradiction // from formulas
          next
            case split_case_2
            solve( KU((#vf.9, 0), sign(<'g'^~ekR.158, 'g'^~ekR.157>, ~ltkI.8)) )
              case Resp_1
              solve( KU((#vf.26, 0), 'g'^~ekR.203) )
                case Resp_1
                solve( KU((#vf.45, 0), 'g'^~ekR.202) )
                  case Resp_1
                  by contradiction // cyclic
                next
                  case cexp
                  by solve( (#vr.241, 1)[!KU( f_.244, ~ekR.202 )] /* may loop */ )
                qed
              next
                case cexp
                by solve( (#vr.208, 1)[!KU( f_.211, ~ekR.203 )] /* may loop */ )
              qed
            next
              case csign
              by solve( (#vr.163, 1)[!KU( f_.167, ~ltkI.8 )] /* may loop */ )
            qed
          qed
        next
          case Resp_1_case_2
          by solve( (#vf.130, 0)[!KU( f_.131, ~ltkI.94 )] /* may loop */ )
        next
          case cmac
          solve( (#vr.116, 0)[!KU( f_.119, 'g'^(~ekR.81*~ekR.82)
                              )] /* may loop */ )
            case Resp_1_case_1
            by solve( (#vr.154, 1)[!KU( f_.156, ~ekR.162 )] /* may loop */ )
          next
            case Resp_1_case_2
            by solve( (#vr.154, 1)[!KU( f_.156, ~ekR.161 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.125, 1), ~ekR.81) )
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( (#vf.107, 0)[!KU( f_.108, ~ltkR.94 )] /* may loop */ )
          case fresh
          solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekR.82),
                                     sign(<'g'^x.111, 'g'^~tid.92>, ~ltkI.94))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( (#vf.141, 0)[!KU( f_.142, ~ltkI.94 )] /* may loop */ )
          next
            case Init_2_case_3
            solve( (#vf.138, 0)[!KU( f_.139, ~ltkR.130 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Init_2_case_4
            solve( (#vf.138, 0)[!KU( f_.139, ~ltkR.130 )] /* may loop */ )
              case fresh
              by solve( (#vf.142, 0)[!KU( f_.143, ~ltkI.94 )] /* may loop */ )
            qed
          next
            case Resp_1_case_1
            by solve( splitEqs(1) )
          next
            case Resp_1_case_2
            by solve( (#vf.136, 0)[!KU( f_.137, ~ltkI.94 )] /* may loop */ )
          next
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekR.82)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekR.168 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekR.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( (#vf.99, 0)[!KU( f_.100, ~ltkI.94 )] /* may loop */ )
          case fresh
          solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekR.82),
                                     sign(<'g'^x.111, 'g'^~tid.92>, ~ltkI.94))) )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            solve( (#vf.138, 0)[!KU( f_.139, ~ltkR.130 )] /* may loop */ )
              case fresh
              by solve( splitEqs(1) )
            qed
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case cmac
            solve( (#vr.122, 0)[!KU( f_.125, 'g'^(~ekR.81*~ekR.82)
                                )] /* may loop */ )
              case Resp_1_case_1
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekR.168 )] /* may loop */ )
            next
              case Resp_1_case_2
              by solve( (#vr.160, 1)[!KU( f_.162, ~ekR.167 )] /* may loop */ )
            next
              case cexp
              by solve( KU((#vr.131, 1), ~ekR.81) )
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( (#vf.99, 0)[!KU( f_.100, ~ltkI.94 )] /* may loop */ )
          case fresh
          solve( (#vf.108, 0)[!KU( f_.109, ~ltkR.94 )] /* may loop */ )
            case fresh
            solve( KU((#vf.95, 0), mac('g'^(~ekR.81*~ekR.82),
                                       sign(<'g'^x.111, 'g'^~tid.92>, ~ltkI.94))) )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              solve( (#vf.144, 0)[!KU( f_.145, ~ltkR.136 )] /* may loop */ )
                case fresh
                by solve( splitEqs(1) )
              qed
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( (#vr.128, 0)[!KU( f_.131, 'g'^(~ekR.81*~ekR.82)
                                  )] /* may loop */ )
                case Resp_1_case_1
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekR.174 )] /* may loop */ )
              next
                case Resp_1_case_2
                by solve( (#vr.166, 1)[!KU( f_.168, ~ekR.173 )] /* may loop */ )
              next
                case cexp
                by solve( KU((#vr.137, 1), ~ekR.81) )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( (#vr.86, 0)[!KU( f_.88, 'g'^(~ekR.81*~ekR.82) )] /* may loop */ )
          case Resp_1_case_1
          by solve( (#vr.122, 1)[!KU( f_.124, ~ekR.130 )] /* may loop */ )
        next
          case Resp_1_case_2
          by solve( (#vr.122, 1)[!KU( f_.124, ~ekR.129 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.93, 1), ~ekR.81) )
        qed
      qed
    next
      case Resp_1_case_2
      by solve( (#vf.50, 0)[!KU( f_.51, ~ltkI.8 )] /* may loop */ )
    next
      case cmac
      solve( KU((#vf.9, 0), sign(<hki.6, 'g'^~ekR.8>, ~ltkI.8)) )
        case Init_2_case_1
        solve( (#vr.36, 0)[!KU( f_.39, 'g'^(~ekR.96*~ekI.97) )] /* may loop */ )
          case Init_1
          by solve( (#vr.124, 1)[!KU( f_.126, ~ekR.138 )] /* may loop */ )
        next
          case Resp_1
          by solve( (#vr.131, 1)[!KU( f_.133, ~ekI.139 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.102, 1), ~ekR.96) )
        qed
      next
        case Init_2_case_2
        by solve( (#vf.64, 0)[!KU( f_.65, ~ltkI.8 )] /* may loop */ )
      next
        case Init_2_case_3
        solve( (#vf.61, 0)[!KU( f_.62, ~ltkR.53 )] /* may loop */ )
          case fresh
          solve( (#vr.36, 0)[!KU( f_.39, 'g'^(~ekR.96*~ekI.97) )] /* may loop */ )
            case Init_1
            by solve( (#vr.130, 1)[!KU( f_.132, ~ekR.144 )] /* may loop */ )
          next
            case Resp_1
            by solve( (#vr.137, 1)[!KU( f_.139, ~ekI.145 )] /* may loop */ )
          next
            case cexp
            by solve( KU((#vr.108, 1), ~ekR.96) )
          qed
        qed
      next
        case Init_2_case_4
        solve( (#vf.61, 0)[!KU( f_.62, ~ltkR.53 )] /* may loop */ )
          case fresh
          by solve( (#vf.65, 0)[!KU( f_.66, ~ltkI.8 )] /* may loop */ )
        qed
      next
        case Resp_1_case_1
        solve( (#vr.36, 0)[!KU( f_.39, 'g'^(~ekR.96*~ekR.97) )] /* may loop */ )
          case Resp_1_case_1
          by solve( (#vr.131, 1)[!KU( f_.133, ~ekR.139 )] /* may loop */ )
        next
          case Resp_1_case_2
          by solve( (#vr.131, 1)[!KU( f_.133, ~ekR.138 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.102, 1), ~ekR.96) )
        qed
      next
        case Resp_1_case_2
        by solve( (#vf.59, 0)[!KU( f_.60, ~ltkI.8 )] /* may loop */ )
      next
        case csign
        by solve( (#vr.45, 1)[!KU( f_.49, ~ltkI.8 )] /* may loop */ )
      qed
    qed
  next
    case Resp_1_case_2
    by contradiction // from formulas
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.6. OK.


analyzing: data/examples/csf12/STS-MAC-fix1.spthy

------------------------------------------------------------------------------
analyzed: data/examples/csf12/STS-MAC-fix1.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 12.734817s
  KI_Perfect_Forward_Secrecy_I (all-traces): verified (247 steps)
  KI_Perfect_Forward_Secrecy_R (all-traces): verified (335 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: data/examples/csf12/STS-MAC-fix1.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 12.734817s
  KI_Perfect_Forward_Secrecy_I (all-traces): verified (247 steps)
  KI_Perfect_Forward_Secrecy_R (all-traces): verified (335 steps)

==============================================================================
*/
