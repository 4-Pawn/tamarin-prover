theory DH2_original begin

// Function signature and definition of the equational theory E

builtin: diffie-hellman
functions: KDF/1, MAC/2, fst/1, h/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2

section{* DH2 *}

rule (modulo E) Register_pk:
   [ Fr( ~ltkA ) ]
  -->
   [ !Ltk( $A, ~ltkA ), !Pk( $A, 'g'^~ltkA ), Out( 'g'^~ltkA ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~m1 ), !Ltk( $I, ~ltkI ), !Pk( $R, 'g'^~ltkR ) ]
  --[
  Sid( ~m1, $I, $R, <$I, $R, 'Init', 'g'^~ltkR^~m1> ), EphKey( ~m1, ~m1 )
  ]->
   [
   Init_1( ~m1, $I, $R, ~ltkI, 'g'^~m1, 'g'^~ltkR^~m1 ), !Ephk( ~m1, ~m1 ),
   Out( 'g'^~ltkR^~m1 )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Resp_1:
   [ Fr( ~m2 ), In( XB ), !Ltk( $R, ~ltkR ), !Pk( $I, 'g'^~ltkI ) ]
  --[
  Sid( ~m2, $R, $I, <$R, $I, 'Resp', 'g'^~ltkI^~m2, XB> ),
  Match( ~m2, <$I, $R, 'Init', XB> ),
  Match( ~m2, <$I, $R, 'Init', XB, 'g'^~ltkI^~m2> ), EphKey( ~m2, ~m2 )
  ]->
   [
   Resp_1( ~m2, $I, $R, 'g'^~ltkI^~m2, XB,
           MAC(KDF(<XB^inv(~ltkR), 'g'^~m2, $I, $R, XB, 'g'^~ltkI^~m2>),
               <'Init', $I, $R, XB, 'g'^~ltkI^~m2>),
           KDF(<XB^inv(~ltkR), 'g'^~m2, $I, $R, XB, 'g'^~ltkI^~m2>)
   ),
   !Ephk( ~m2, ~m2 ),
   Out( <'g'^~ltkI^~m2, 
         MAC(KDF(<XB^inv(~ltkR), 'g'^~m2, $I, $R, XB, 'g'^~ltkI^~m2>),
             <'Resp', $R, $I, 'g'^~ltkI^~m2, XB>)
        >
   )
   ]

  /*
  rule (modulo AC) Resp_1:
     [ Fr( ~m2.5 ), In( XB.6 ), !Ltk( $R.2, ~ltkR.4 ), !Pk( $I.1, 'g'^~x.15 )
     ]
    --[
    Sid( ~m2.5, $R.2, $I.1, <$R.2, $I.1, 'Resp', 'g'^(~m2.5*~x.15), XB.6> ),
    Match( ~m2.5, <$I.1, $R.2, 'Init', XB.6> ),
    Match( ~m2.5, <$I.1, $R.2, 'Init', XB.6, 'g'^(~m2.5*~x.15)> ),
    EphKey( ~m2.5, ~m2.5 )
    ]->
     [
     Resp_1( ~m2.5, $I.1, $R.2, 'g'^(~m2.5*~x.15), XB.6,
             MAC(KDF(<z.9, 'g'^~m2.5, $I.1, $R.2, XB.6, 'g'^(~m2.5*~x.15)>),
                 <'Init', $I.1, $R.2, XB.6, 'g'^(~m2.5*~x.15)>),
             KDF(<z.9, 'g'^~m2.5, $I.1, $R.2, XB.6, 'g'^(~m2.5*~x.15)>)
     ),
     !Ephk( ~m2.5, ~m2.5 ),
     Out( <'g'^(~m2.5*~x.15), 
           MAC(KDF(<z.9, 'g'^~m2.5, $I.1, $R.2, XB.6, 'g'^(~m2.5*~x.15)>),
               <'Resp', $R.2, $I.1, 'g'^(~m2.5*~x.15), XB.6>)
          >
     )
     ]
  
    variants (modulo AC)
    1. ~ltkR.4
             = ~ltkR.654
       XB.6  = XB.656
       z.9   = XB.656^inv(~ltkR.654)
    
    2. ~ltkR.4
             = ~ltkR.666
       XB.6  = z.671^~ltkR.666
       z.9   = z.671
    
    3. ~ltkR.4
             = ~ltkR.1571199
       XB.6  = x.3142388^x.3142389
       z.9   = x.3142388^(x.3142389*inv(~ltkR.1571199))
    
    4. ~ltkR.4
             = ~ltkR.1571199
       XB.6  = x.3142388^inv(x.3142389)
       z.9   = x.3142388^inv((~ltkR.1571199*x.3142389))
    
    5. ~ltkR.4
             = ~ltkR.1599871
       XB.6  = x.3199732^(~ltkR.1599871*x.3199733)
       z.9   = x.3199732^x.3199733
    
    6. ~ltkR.4
             = ~ltkR.1603967
       XB.6  = x.3207923^(x.3207925*inv(x.3207924))
       z.9   = x.3207923^(x.3207925*inv((~ltkR.1603967*x.3207924)))
  */

rule (modulo E) Init_2:
   [
   Init_1( ~m1, $I, $R, ~ltkI, X, XB ),
   In( <YA, 
        MAC(KDF(<X, YA^inv(~ltkI), $I, $R, XB, YA>), <'Resp', $R, $I, YA, XB>)>
   )
   ]
  --[
  Sid( ~m1, $I, $R, <$I, $R, 'Init', XB, YA> ),
  Match( ~m1, <$R, $I, 'Resp', YA, XB> ),
  Accept( ~m1, KDF(<X, YA^inv(~ltkI), $I, $R, XB, YA>) )
  ]->
   [
   Out( <YA, XB, 
         MAC(KDF(<X, YA^inv(~ltkI), $I, $R, XB, YA>), <'Init', $I, $R, XB, YA>)>
   ),
   !Sessk( ~m1, KDF(<X, YA^inv(~ltkI), $I, $R, XB, YA>) )
   ]

  /*
  rule (modulo AC) Init_2:
     [
     Init_1( ~m1.4, $I.1, $R.2, ~ltkI.3, X.5, XB.6 ),
     In( <YA.7, 
          MAC(KDF(<X.5, z.8, $I.1, $R.2, XB.6, YA.7>),
              <'Resp', $R.2, $I.1, YA.7, XB.6>)
         >
     )
     ]
    --[
    Sid( ~m1.4, $I.1, $R.2, <$I.1, $R.2, 'Init', XB.6, YA.7> ),
    Match( ~m1.4, <$R.2, $I.1, 'Resp', YA.7, XB.6> ),
    Accept( ~m1.4, KDF(<X.5, z.8, $I.1, $R.2, XB.6, YA.7>) )
    ]->
     [
     Out( <YA.7, XB.6, 
           MAC(KDF(<X.5, z.8, $I.1, $R.2, XB.6, YA.7>),
               <'Init', $I.1, $R.2, XB.6, YA.7>)
          >
     ),
     !Sessk( ~m1.4, KDF(<X.5, z.8, $I.1, $R.2, XB.6, YA.7>) )
     ]
  
    variants (modulo AC)
    1. ~ltkI.3
             = ~ltkI.43
       YA.7  = YA.47
       z.8   = YA.47^inv(~ltkI.43)
    
    2. ~ltkI.3
             = ~ltkI.46
       YA.7  = z.51^~ltkI.46
       z.8   = z.51
    
    3. ~ltkI.3
             = ~ltkI.63
       YA.7  = x.118^x.119
       z.8   = x.118^(x.119*inv(~ltkI.63))
    
    4. ~ltkI.3
             = ~ltkI.63
       YA.7  = x.118^inv(x.119)
       z.8   = x.118^inv((~ltkI.63*x.119))
    
    5. ~ltkI.3
             = ~ltkI.63
       YA.7  = x.118^(~ltkI.63*x.119)
       z.8   = x.118^x.119
    
    6. ~ltkI.3
             = ~ltkI.65
       YA.7  = x.121^(x.123*inv(x.122))
       z.8   = x.121^(x.123*inv((~ltkI.65*x.122)))
  */

rule (modulo E) Resp_2:
   [ Resp_1( ~m2, $I, $R, YA, XB, tagA, key ), In( <YA, XB, tagA> ) ]
  --[ Accept( ~m2, key ) ]->
   [ !Sessk( ~m2, key ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Sessk_reveal:
   [ !Sessk( ~tid, k ) ] --[ SesskRev( ~tid ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ltk_reveal:
   [ !Ltk( $A, lkA ) ] --[ LtkRev( $A ) ]-> [ Out( lkA ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ephk_reveal:
   [ !Ephk( ~s, ~ek ) ] --[ EphkRev( ~s ) ]-> [ Out( ~ek ) ]

  /* has exactly the trivial AC variant */

lemma (modulo E) KAS_key_secrecy:
  all-traces
  "not(Ex #i1 #i2.1 #i3.2 s.3 A.4 B.5 minfo.6 k.7.
        (((((Sid( s.3, A.4, B.5, minfo.6 ) @ #i1) & (K( k.7 ) @ #i2.1)) &
           (Accept( s.3, k.7 ) @ #i3.2)) &
          (not(Ex #i4.8. SesskRev( s.3 ) @ #i4.8))) &
         (All ss.9 #i4.10 #i5.11 C.12 D.13 ms.14.
           ((Sid( ss.9, C.12, D.13, ms.14 ) @ #i4.10) &
            (Match( s.3, ms.14 ) @ #i5.11)) ==>
           (((((not(Ex #i6.15 #i7.16 kpartner.17.
                     (Accept( ss.9, kpartner.17 ) @ #i6.15) & (SesskRev( ss.9 ) @ #i7.16))) &
               (not(Ex #i6.18 #i7.19.
                     (LtkRev( A.4 ) @ #i6.18) & (EphkRev( s.3 ) @ #i7.19)))) &
              (not(Ex #i6.20 #i7.21.
                    (LtkRev( B.5 ) @ #i6.20) & (EphkRev( ss.9 ) @ #i7.21)))) &
             (not(Ex #i6.22 #i7.23.
                   (LtkRev( A.4 ) @ #i6.22) & (LtkRev( B.5 ) @ #i7.23)))) &
            (not(Ex #i6.24 #i7.25.
                  (EphkRev( s.3 ) @ #i6.24) & (EphkRev( ss.9 ) @ #i7.25)))))) &
        ((not(Ex ss.26 #i4.27 #i5.28 C.29 D.30 ms.31.
               (Sid( ss.26, C.29, D.30, ms.31 ) @ #i4.27) &
               (Match( s.3, ms.31 ) @ #i5.28))) ==>
         ((not(Ex #i6.32. EphkRev( s.3 ) @ #i6.32)) &
          (not(Ex #i6.33. (LtkRev( B.5 ) @ #i6.33) & (#i6.33 < #i3.2))))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex #i1 #i2.1 #i3.2 s.3 A.4 B.5 minfo.6 k.7.
  (Sid( s.3, A.4, B.5, minfo.6 ) @ #i1) &
  (K( k.7 ) @ #i2.1) &
  (Accept( s.3, k.7 ) @ #i3.2)
 &
  (All #i4.8. (SesskRev( s.3 ) @ #i4.8) ==> F) &
  (All ss.9 #i4.10 #i5.11 C.12 D.13 ms.14.
    (Sid( ss.9, C.12, D.13, ms.14 ) @ #i4.10) &
    (Match( s.3, ms.14 ) @ #i5.11)
   ==>
    (All #i6.15 #i7.16 kpartner.17.
      (Accept( ss.9, kpartner.17 ) @ #i6.15) & (SesskRev( ss.9 ) @ #i7.16)
     ==>
      F) &
    (All #i6.18 #i7.19.
      (LtkRev( A.4 ) @ #i6.18) & (EphkRev( s.3 ) @ #i7.19)
     ==>
      F) &
    (All #i6.20 #i7.21.
      (LtkRev( B.5 ) @ #i6.20) & (EphkRev( ss.9 ) @ #i7.21)
     ==>
      F) &
    (All #i6.22 #i7.23.
      (LtkRev( A.4 ) @ #i6.22) & (LtkRev( B.5 ) @ #i7.23)
     ==>
      F) &
    (All #i6.24 #i7.25.
      (EphkRev( s.3 ) @ #i6.24) & (EphkRev( ss.9 ) @ #i7.25)
     ==>
      F)) &
  ((Ex ss.26 #i4.27 #i5.28 C.29 D.30 ms.31.
     (Sid( ss.26, C.29, D.30, ms.31 ) @ #i4.27) &
     (Match( s.3, ms.31 ) @ #i5.28)
    &
     T) |
   ((All #i6.32. (EphkRev( s.3 ) @ #i6.32) ==> F) &
    (All #i6.33.
      (LtkRev( B.5 ) @ #i6.33)
     ==>
      All . (#i6.33 < #i3.2) ==> F)))"
*/
simplify
solve( Disj(Ex ss.4 #i4.5 #i5.6 C.7 D.8 ms.9.
             (Sid( ss.4, C.7, D.8, ms.9 ) @ #i4.5) & (Match( s.3, ms.9 ) @ #i5.6)
            &
             T) |
           ((All #i6.6. (EphkRev( s.3 ) @ #i6.6) ==> F) &
            (All #i6.7. (LtkRev( B.5 ) @ #i6.7) ==> All . (#i6.7 < #i3.2) ==> F)) )
  case case_1
  solve( Sid( s.3, A.4, B.5, minfo.6 ) @ #i1 )
    case Init_1
    solve( (#i1, 1)[!Ltk( $I.16, ~ltkI.18 )] )
      case Register_pk
      solve( (#i1, 2)[!Pk( $R.17, 'g'^~ltkR.26 )] )
        case Register_pk
        solve( Accept( ~m1.25, k.7 ) @ #i3.2 )
          case Init_2
          solve( (#i3.2, 0)[Init_1( ~m1.25, $I.51, $R.52, ~ltkI.53, X.55, XB.56
                            )] )
            case Init_1
            solve( Sid( ss.9, C.12, D.13, ms.14 ) @ #i4.10 )
              case Init_1
              solve( (#i4.10, 1)[!Ltk( $I.98, ~ltkI.100 )] )
                case Register_pk
                solve( (#i4.10, 2)[!Pk( $R.99, 'g'^~ltkR.108 )] )
                  case Register_pk
                  by solve( Match( ~m1.25, <$I.98, $R.99, 'Init', 'g'^(~m1.107*~ltkR.108)>
                            ) @ #i5.11 )
                qed
              qed
            next
              case Init_2
              solve( (#i4.10, 0)[Init_1( ~m1.101, $I.98, $R.99, ~ltkI.100, X.102,
                                         XB.103
                                 )] )
                case Init_1
                by solve( Match( ~m1.25,
                                 <$I.98, $R.99, 'Init', 'g'^(~m1.101*~ltkR.128), YA.104>
                          ) @ #i5.11 )
              qed
            next
              case Resp_1
              solve( (#i4.10, 2)[!Ltk( $R.99, ~ltkR.101 )] )
                case Register_pk
                solve( (#i4.10, 3)[!Pk( $I.98, 'g'^~x.112 )] )
                  case Register_pk
                  solve( Match( ~m1.25,
                                <$R.99, $I.98, 'Resp', 'g'^(~m2.102*~x.112), XB.103>
                         ) @ #i5.11 )
                    case Init_2
                    solve( (#i5.11, 0)[Init_1( ~m1.25, $I.98, $R.99, ~ltkI.141, X.143, XB.103
                                       )] )
                      case Init_1
                      solve( (#i2.1, 0)[!KU( f_.8,
                                             KDF(<'g'^~m1.25, 'g'^x.150, $I.16, $R.17, 'g'^(~m1.25*~ltkR.26), 
                                                  'g'^(~m2.102*~x.112)>)
                                        )] /* may loop */ )
                        case Sessk_reveal_case_1
                        by contradiction // from formulas
                      next
                        case Sessk_reveal_case_2
                        by contradiction // from formulas
                      next
                        case cKDF
                        solve( KU((#vf.59, 0), MAC(KDF(<'g'^~m1.25, 'g'^x.150, $I.16, $R.17, 
                                                        'g'^(~m1.25*~ltkR.26), 'g'^(~m2.102*~x.112)>),
                                                   <'Resp', $R.17, $I.16, 'g'^(~m2.102*~x.112), 
                                                    'g'^(~m1.25*~ltkR.26)>)) )
                          case Resp_1
                          solve( KU((#vr.192, 0), 'g'^~m1.25) )
                            case Init_1
                            solve( KU((#vr.299, 1), ~ltkR.101) )
                              case Ltk_reveal
                              solve( KU((#vr.192, 0), 'g'^~m2.258) )
                                case Resp_1
                                solve( KU((#vr.411, 1), ~ltkI.18) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( (#vr.365, 1)[!KU( f_.368, ~m2.258 )] /* may loop */ )
                                  case Ephk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            qed
                          next
                            case Init_2
                            by contradiction // cyclic
                          next
                            case cexp
                            solve( (#vr.265, 1)[!KU( f_.268, ~m1.25 )] /* may loop */ )
                              case Ephk_reveal
                              solve( KU((#vr.192, 0), 'g'^~m2.258) )
                                case Resp_1
                                solve( KU((#vr.359, 1), ~ltkI.18) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( (#vr.313, 1)[!KU( f_.316, ~m2.258 )] /* may loop */ )
                                  case Ephk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            qed
                          qed
                        next
                          case cMAC
                          solve( KU((#vr.192, 0), 'g'^~m1.25) )
                            case Init_1
                            solve( KU((#vr.242, 1), ~ltkR.26) )
                              case Ltk_reveal
                              solve( splitEqs(1) )
                                case split_case_1
                                solve( KU((#vr.192, 0), 'g'^~m2.308) )
                                  case Resp_1
                                  solve( KU((#vr.359, 1), ~ltkI.307) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case cexp
                                  solve( (#vr.313, 1)[!KU( f_.316, ~m2.308 )] /* may loop */ )
                                    case Ephk_reveal
                                    by contradiction // from formulas
                                  qed
                                qed
                              next
                                case split_case_2
                                solve( KU((#vr.192, 0), 'g'^(~m2.308*~x.309*inv(~ltkI.307))) )
                                  case Init_1_case_1
                                  by contradiction // non-normal terms
                                next
                                  case Init_1_case_2
                                  solve( KU((#vr.348, 1), ~ltkI.307) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case Init_2_case_1
                                  by contradiction // non-normal terms
                                next
                                  case Init_2_case_2
                                  solve( KU((#vr.372, 1), ~ltkI.307) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case Register_pk
                                  solve( KU((#vr.327, 1), ~ltkI.307) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case Resp_1_case_1
                                  solve( KU((#vr.360, 1), ~ltkI.307) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case Resp_1_case_2
                                  by contradiction // non-normal terms
                                next
                                  case Resp_1_case_3
                                  by contradiction // non-normal terms
                                next
                                  case Resp_1_case_4
                                  by contradiction // non-normal terms
                                next
                                  case Resp_1_case_5
                                  solve( KU((#vr.360, 1), ~ltkI.307) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case cexp
                                  solve( KU((#vr.314, 1), ~ltkI.307) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                qed
                              qed
                            qed
                          next
                            case Init_2
                            by contradiction // cyclic
                          next
                            case cexp
                            solve( (#vr.208, 1)[!KU( f_.211, ~m1.25 )] /* may loop */ )
                              case Ephk_reveal
                              solve( splitEqs(1) )
                                case split_case_1
                                solve( KU((#vr.192, 0), 'g'^~m2.253) )
                                  case Resp_1
                                  solve( KU((#vr.304, 1), ~ltkI.252) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case cexp
                                  solve( (#vr.258, 1)[!KU( f_.261, ~m2.253 )] /* may loop */ )
                                    case Ephk_reveal
                                    by contradiction // from formulas
                                  qed
                                qed
                              next
                                case split_case_2
                                solve( KU((#vr.192, 0), 'g'^(~m2.253*~x.254*inv(~ltkI.252))) )
                                  case Init_1_case_1
                                  by contradiction // non-normal terms
                                next
                                  case Init_1_case_2
                                  solve( KU((#vr.293, 1), ~ltkI.252) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case Init_2_case_1
                                  by contradiction // non-normal terms
                                next
                                  case Init_2_case_2
                                  solve( KU((#vr.317, 1), ~ltkI.252) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case Register_pk
                                  solve( KU((#vr.272, 1), ~ltkI.252) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case Resp_1_case_1
                                  solve( KU((#vr.305, 1), ~ltkI.252) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case Resp_1_case_2
                                  by contradiction // non-normal terms
                                next
                                  case Resp_1_case_3
                                  by contradiction // non-normal terms
                                next
                                  case Resp_1_case_4
                                  by contradiction // non-normal terms
                                next
                                  case Resp_1_case_5
                                  solve( KU((#vr.305, 1), ~ltkI.252) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                next
                                  case cexp
                                  solve( KU((#vr.259, 1), ~ltkI.252) )
                                    case Ltk_reveal
                                    by contradiction // from formulas
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_2
          by solve( (#i3.2, 0)[Resp_1( ~m1.25, $I.51, $R.52, YA.55, XB.54, tagA.57,
                                       k.7
                               )] )
        qed
      qed
    qed
  next
    case Init_2
    solve( (#i1, 0)[Init_1( ~m1.19, $I.16, $R.17, ~ltkI.18, X.20, XB.21 )] )
      case Init_1
      solve( Accept( ~m1.19, k.7 ) @ #i3.2 )
        case Init_2
        solve( (#i3.2, 0)[Init_1( ~m1.19, $I.63, $R.64, ~ltkI.65, X.67, XB.68
                          )] )
          case Init_1
          solve( Sid( ss.9, C.12, D.13, ms.14 ) @ #i4.10 )
            case Init_1
            solve( (#i4.10, 1)[!Ltk( $I.110, ~ltkI.112 )] )
              case Register_pk
              solve( (#i4.10, 2)[!Pk( $R.111, 'g'^~ltkR.120 )] )
                case Register_pk
                by solve( Match( ~m1.19,
                                 <$I.110, $R.111, 'Init', 'g'^(~m1.119*~ltkR.120)>
                          ) @ #i5.11 )
              qed
            qed
          next
            case Init_2
            solve( (#i4.10, 0)[Init_1( ~m1.113, $I.110, $R.111, ~ltkI.112, X.114,
                                       XB.115
                               )] )
              case Init_1
              by solve( Match( ~m1.19,
                               <$I.110, $R.111, 'Init', 'g'^(~m1.113*~ltkR.140), YA.116>
                        ) @ #i5.11 )
            qed
          next
            case Resp_1
            solve( (#i4.10, 2)[!Ltk( $R.111, ~ltkR.113 )] )
              case Register_pk
              solve( (#i4.10, 3)[!Pk( $I.110, 'g'^~x.124 )] )
                case Register_pk
                solve( Match( ~m1.19,
                              <$R.111, $I.110, 'Resp', 'g'^(~m2.114*~x.124), XB.115>
                       ) @ #i5.11 )
                  case Init_2
                  solve( (#i5.11, 0)[Init_1( ~m1.19, $I.110, $R.111, ~ltkI.153, X.155,
                                             XB.115
                                     )] )
                    case Init_1
                    solve( (#i2.1, 0)[!KU( f_.8,
                                           KDF(<'g'^~m1.19, 'g'^x.162, $I.16, $R.17, 'g'^(~m1.19*~ltkR.46), 
                                                'g'^(~m2.114*~x.124)>)
                                      )] /* may loop */ )
                      case Sessk_reveal_case_1
                      by contradiction // from formulas
                    next
                      case Sessk_reveal_case_2
                      by contradiction // from formulas
                    next
                      case cKDF
                      solve( KU((#vf.24, 0), MAC(KDF(<'g'^~m1.19, 'g'^x.162, $I.16, $R.17, 
                                                      'g'^(~m1.19*~ltkR.46), 'g'^(~m2.114*~x.124)>),
                                                 <'Resp', $R.17, $I.16, 'g'^(~m2.114*~x.124), 
                                                  'g'^(~m1.19*~ltkR.46)>)) )
                        case Resp_1
                        solve( KU((#vr.204, 0), 'g'^~m1.19) )
                          case Init_1
                          solve( KU((#vr.311, 1), ~ltkR.113) )
                            case Ltk_reveal
                            solve( KU((#vr.204, 0), 'g'^~m2.270) )
                              case Resp_1
                              solve( KU((#vr.423, 1), ~ltkI.18) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            next
                              case cexp
                              solve( (#vr.377, 1)[!KU( f_.380, ~m2.270 )] /* may loop */ )
                                case Ephk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        next
                          case Init_2
                          by contradiction // cyclic
                        next
                          case cexp
                          solve( (#vr.277, 1)[!KU( f_.280, ~m1.19 )] /* may loop */ )
                            case Ephk_reveal
                            solve( KU((#vr.204, 0), 'g'^~m2.270) )
                              case Resp_1
                              solve( KU((#vr.371, 1), ~ltkI.18) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            next
                              case cexp
                              solve( (#vr.325, 1)[!KU( f_.328, ~m2.270 )] /* may loop */ )
                                case Ephk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        qed
                      next
                        case cMAC
                        solve( KU((#vr.204, 0), 'g'^~m1.19) )
                          case Init_1
                          solve( KU((#vr.254, 1), ~ltkR.46) )
                            case Ltk_reveal
                            solve( splitEqs(1) )
                              case split_case_1
                              solve( KU((#vr.204, 0), 'g'^~m2.320) )
                                case Resp_1
                                solve( KU((#vr.371, 1), ~ltkI.319) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( (#vr.325, 1)[!KU( f_.328, ~m2.320 )] /* may loop */ )
                                  case Ephk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            next
                              case split_case_2
                              solve( KU((#vr.204, 0), 'g'^(~m2.320*~x.321*inv(~ltkI.319))) )
                                case Init_1_case_1
                                by contradiction // non-normal terms
                              next
                                case Init_1_case_2
                                solve( KU((#vr.360, 1), ~ltkI.319) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2_case_1
                                by contradiction // non-normal terms
                              next
                                case Init_2_case_2
                                solve( KU((#vr.384, 1), ~ltkI.319) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Register_pk
                                solve( KU((#vr.339, 1), ~ltkI.319) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Resp_1_case_1
                                solve( KU((#vr.372, 1), ~ltkI.319) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Resp_1_case_2
                                by contradiction // non-normal terms
                              next
                                case Resp_1_case_3
                                by contradiction // non-normal terms
                              next
                                case Resp_1_case_4
                                by contradiction // non-normal terms
                              next
                                case Resp_1_case_5
                                solve( KU((#vr.372, 1), ~ltkI.319) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( KU((#vr.326, 1), ~ltkI.319) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            qed
                          qed
                        next
                          case Init_2
                          by contradiction // cyclic
                        next
                          case cexp
                          solve( (#vr.220, 1)[!KU( f_.223, ~m1.19 )] /* may loop */ )
                            case Ephk_reveal
                            solve( splitEqs(1) )
                              case split_case_1
                              solve( KU((#vr.204, 0), 'g'^~m2.265) )
                                case Resp_1
                                solve( KU((#vr.316, 1), ~ltkI.264) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( (#vr.270, 1)[!KU( f_.273, ~m2.265 )] /* may loop */ )
                                  case Ephk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            next
                              case split_case_2
                              solve( KU((#vr.204, 0), 'g'^(~m2.265*~x.266*inv(~ltkI.264))) )
                                case Init_1_case_1
                                by contradiction // non-normal terms
                              next
                                case Init_1_case_2
                                solve( KU((#vr.305, 1), ~ltkI.264) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2_case_1
                                by contradiction // non-normal terms
                              next
                                case Init_2_case_2
                                solve( KU((#vr.329, 1), ~ltkI.264) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Register_pk
                                solve( KU((#vr.284, 1), ~ltkI.264) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Resp_1_case_1
                                solve( KU((#vr.317, 1), ~ltkI.264) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Resp_1_case_2
                                by contradiction // non-normal terms
                              next
                                case Resp_1_case_3
                                by contradiction // non-normal terms
                              next
                                case Resp_1_case_4
                                by contradiction // non-normal terms
                              next
                                case Resp_1_case_5
                                solve( KU((#vr.317, 1), ~ltkI.264) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( KU((#vr.271, 1), ~ltkI.264) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Resp_2
        by solve( (#i3.2, 0)[Resp_1( ~m1.19, $I.63, $R.64, YA.67, XB.66, tagA.69,
                                     k.7
                             )] )
      qed
    qed
  next
    case Resp_1
    solve( (#i1, 2)[!Ltk( $R.17, ~ltkR.19 )] )
      case Register_pk
      solve( (#i1, 3)[!Pk( $I.16, 'g'^~x.30 )] )
        case Register_pk
        solve( Accept( ~m2.20, k.7 ) @ #i3.2 )
          case Init_2
          by solve( (#i3.2, 0)[Init_1( ~m2.20, $I.57, $R.58, ~ltkI.59, X.61, XB.62
                               )] )
        next
          case Resp_2
          solve( (#i3.2, 0)[Resp_1( ~m2.20, $I.57, $R.58, YA.61, XB.60, tagA.63,
                                    k.7
                            )] )
            case Resp_1
            solve( Sid( ss.9, C.12, D.13, ms.14 ) @ #i4.10 )
              case Init_1
              solve( (#i4.10, 1)[!Ltk( $I.110, ~ltkI.112 )] )
                case Register_pk
                solve( (#i4.10, 2)[!Pk( $R.111, 'g'^~ltkR.120 )] )
                  case Register_pk
                  solve( Match( ~m2.20, <$I.110, $R.111, 'Init', 'g'^(~m1.119*~ltkR.120)>
                         ) @ #i5.11 )
                    case Resp_1
                    solve( (#i2.1, 0)[!KU( f_.8,
                                           KDF(<'g'^x.164, 'g'^~m2.20, $I.16, $R.17, 'g'^(~m1.119*~ltkR.120), 
                                                'g'^(~m2.20*~x.30)>)
                                      )] /* may loop */ )
                      case Sessk_reveal_case_1
                      by contradiction // from formulas
                    next
                      case Sessk_reveal_case_2
                      by contradiction // from formulas
                    next
                      case cKDF
                      solve( KU((#vf.64, 0), MAC(KDF(<'g'^x.164, 'g'^~m2.20, $I.16, $R.17, 
                                                      'g'^(~m1.119*~ltkR.120), 'g'^(~m2.20*~x.30)>),
                                                 <'Init', $I.16, $R.17, 'g'^(~m1.119*~ltkR.120), 
                                                  'g'^(~m2.20*~x.30)>)) )
                        case Init_2
                        solve( KU((#vr.168, 0), 'g'^~m2.20) )
                          case Resp_1
                          solve( KU((#vr.287, 1), ~ltkI.112) )
                            case Ltk_reveal
                            solve( KU((#vr.168, 0), 'g'^~m1.234) )
                              case Init_1
                              solve( KU((#vr.378, 1), ~ltkR.19) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            next
                              case Init_2
                              by contradiction // cyclic
                            next
                              case cexp
                              solve( (#vr.344, 1)[!KU( f_.347, ~m1.234 )] /* may loop */ )
                                case Ephk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        next
                          case cexp
                          solve( (#vr.241, 1)[!KU( f_.244, ~m2.20 )] /* may loop */ )
                            case Ephk_reveal
                            solve( KU((#vr.168, 0), 'g'^~m1.234) )
                              case Init_1
                              solve( KU((#vr.329, 1), ~ltkR.19) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            next
                              case Init_2
                              solve( KU((#vr.353, 1), ~ltkR.19) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            next
                              case cexp
                              solve( (#vr.295, 1)[!KU( f_.298, ~m1.234 )] /* may loop */ )
                                case Ephk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        qed
                      next
                        case cMAC
                        solve( KU((#vr.168, 0), 'g'^~m2.20) )
                          case Resp_1
                          solve( KU((#vr.230, 1), ~x.30) )
                            case Ltk_reveal
                            solve( splitEqs(1) )
                              case split_case_1
                              solve( KU((#vr.168, 0), 'g'^(~m1.284*~ltkR.285*inv(~ltkR.283))) )
                                case Init_1_case_1
                                solve( KU((#vr.324, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_1_case_2
                                by contradiction // non-normal terms
                              next
                                case Init_1_case_3
                                by contradiction // non-normal terms
                              next
                                case Init_1_case_4
                                by contradiction // non-normal terms
                              next
                                case Init_1_case_5
                                solve( KU((#vr.324, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2_case_1
                                solve( KU((#vr.348, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2_case_2
                                by contradiction // non-normal terms
                              next
                                case Init_2_case_3
                                by contradiction // non-normal terms
                              next
                                case Init_2_case_4
                                by contradiction // non-normal terms
                              next
                                case Init_2_case_5
                                solve( KU((#vr.348, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Register_pk
                                solve( KU((#vr.303, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Resp_1_case_1
                                by contradiction // non-normal terms
                              next
                                case Resp_1_case_2
                                solve( KU((#vr.336, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( KU((#vr.290, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            next
                              case split_case_2
                              solve( KU((#vr.168, 0), 'g'^~m1.284) )
                                case Init_1
                                solve( KU((#vr.323, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2
                                solve( KU((#vr.347, 1), ~ltkR.283) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( (#vr.289, 1)[!KU( f_.292, ~m1.284 )] /* may loop */ )
                                  case Ephk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            qed
                          qed
                        next
                          case cexp
                          solve( (#vr.184, 1)[!KU( f_.187, ~m2.20 )] /* may loop */ )
                            case Ephk_reveal
                            solve( splitEqs(1) )
                              case split_case_1
                              solve( KU((#vr.168, 0), 'g'^(~m1.235*~ltkR.236*inv(~ltkR.234))) )
                                case Init_1_case_1
                                solve( KU((#vr.275, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_1_case_2
                                by contradiction // non-normal terms
                              next
                                case Init_1_case_3
                                by contradiction // non-normal terms
                              next
                                case Init_1_case_4
                                by contradiction // non-normal terms
                              next
                                case Init_1_case_5
                                solve( KU((#vr.275, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2_case_1
                                solve( KU((#vr.299, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2_case_2
                                by contradiction // non-normal terms
                              next
                                case Init_2_case_3
                                by contradiction // non-normal terms
                              next
                                case Init_2_case_4
                                by contradiction // non-normal terms
                              next
                                case Init_2_case_5
                                solve( KU((#vr.299, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Register_pk
                                solve( KU((#vr.254, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Resp_1_case_1
                                by contradiction // non-normal terms
                              next
                                case Resp_1_case_2
                                solve( KU((#vr.287, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( KU((#vr.241, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            next
                              case split_case_2
                              solve( KU((#vr.168, 0), 'g'^~m1.235) )
                                case Init_1
                                solve( KU((#vr.274, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2
                                solve( KU((#vr.298, 1), ~ltkR.234) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case cexp
                                solve( (#vr.240, 1)[!KU( f_.243, ~m1.235 )] /* may loop */ )
                                  case Ephk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case Init_2
              solve( (#i4.10, 0)[Init_1( ~m1.113, $I.110, $R.111, ~ltkI.112, X.114,
                                         XB.115
                                 )] )
                case Init_1
                solve( Match( ~m2.20,
                              <$I.110, $R.111, 'Init', 'g'^(~m1.113*~ltkR.140), YA.116>
                       ) @ #i5.11 )
                  case Resp_1_case_1
                  solve( (#i2.1, 0)[!KU( f_.8,
                                         KDF(<<'g'^(~m1.175*~ltkR.177), YA.176>^inv(~ltkR.19), 'g'^~m2.20, 
                                              $I.16, $R.17, <'g'^(~m1.175*~ltkR.177), YA.176>, 
                                              'g'^(~m2.20*~x.30)>)
                                    )] /* may loop */ )
                    case Sessk_reveal
                    by contradiction // from formulas
                  next
                    case cKDF
                    solve( KU((#vf.64, 0), MAC(KDF(<
                                                    <'g'^(~m1.175*~ltkR.177), YA.176>^inv(~ltkR.19), 
                                                    'g'^~m2.20, $I.16, $R.17, 
                                                    <'g'^(~m1.175*~ltkR.177), YA.176>, 'g'^(~m2.20*~x.30)>),
                                               <'Init', $I.16, $R.17, <'g'^(~m1.175*~ltkR.177), YA.176>, 
                                                'g'^(~m2.20*~x.30)>)) )
                      case cMAC
                      solve( KU((#vf.118, 0), MAC(KDF(<'g'^~m1.175, z.117, $I.16, $R.17, 
                                                       'g'^(~m1.175*~ltkR.177), YA.176>),
                                                  <'Resp', $R.17, $I.16, YA.176, 'g'^(~m1.175*~ltkR.177)>)) )
                        case Resp_1
                        solve( KU((#vr.182, 0), 'g'^~m2.20) )
                          case Resp_1
                          solve( KU((#vr.308, 1), ~x.30) )
                            case Ltk_reveal
                            solve( KU((#vr.182, 0), <'g'^(~m1.175*~ltkR.177), 'g'^(~m2.211*~ltkI.257)
                                                    >^inv(~ltkR.19)) )
                              case cexp
                              solve( KU((#vr.365, 1), ~ltkR.19) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        next
                          case cexp
                          solve( (#vr.262, 1)[!KU( f_.265, ~m2.20 )] /* may loop */ )
                            case Ephk_reveal
                            solve( KU((#vr.182, 0), <'g'^(~m1.175*~ltkR.177), 'g'^(~m2.211*~ltkI.257)
                                                    >^inv(~ltkR.19)) )
                              case cexp
                              solve( KU((#vr.316, 1), ~ltkR.19) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        qed
                      next
                        case cMAC
                        solve( KU((#vr.182, 0), 'g'^~m2.20) )
                          case Resp_1
                          solve( KU((#vr.253, 1), ~x.30) )
                            case Ltk_reveal
                            solve( KU((#vr.182, 0), <'g'^(~m1.175*~ltkR.177), YA.176
                                                    >^inv(~ltkR.19)) )
                              case cexp
                              solve( KU((#vr.310, 1), ~ltkR.19) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        next
                          case cexp
                          solve( (#vr.207, 1)[!KU( f_.210, ~m2.20 )] /* may loop */ )
                            case Ephk_reveal
                            solve( KU((#vr.182, 0), <'g'^(~m1.175*~ltkR.177), YA.176
                                                    >^inv(~ltkR.19)) )
                              case cexp
                              solve( KU((#vr.261, 1), ~ltkR.19) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case Resp_1_case_2
                  solve( (#i2.1, 0)[!KU( f_.8,
                                         KDF(<'g'^x.176, 'g'^~m2.20, $I.16, $R.17, 'g'^(~m1.113*~ltkR.140), 
                                              'g'^(~m2.20*~x.30)>)
                                    )] /* may loop */ )
                    case Sessk_reveal_case_1
                    by contradiction // from formulas
                  next
                    case Sessk_reveal_case_2
                    by contradiction // from formulas
                  next
                    case cKDF
                    solve( KU((#vf.64, 0), MAC(KDF(<'g'^x.176, 'g'^~m2.20, $I.16, $R.17, 
                                                    'g'^(~m1.113*~ltkR.140), 'g'^(~m2.20*~x.30)>),
                                               <'Init', $I.16, $R.17, 'g'^(~m1.113*~ltkR.140), 
                                                'g'^(~m2.20*~x.30)>)) )
                      case Init_2
                      solve( KU((#vr.182, 0), 'g'^~m2.20) )
                        case Resp_1
                        solve( KU((#vr.302, 1), ~ltkI.112) )
                          case Ltk_reveal
                          solve( KU((#vr.182, 0), 'g'^~m1.248) )
                            case Init_1
                            solve( KU((#vr.393, 1), ~ltkR.19) )
                              case Ltk_reveal
                              by contradiction // from formulas
                            qed
                          next
                            case Init_2
                            by contradiction // cyclic
                          next
                            case cexp
                            solve( (#vr.359, 1)[!KU( f_.362, ~m1.248 )] /* may loop */ )
                              case Ephk_reveal
                              by contradiction // from formulas
                            qed
                          qed
                        qed
                      next
                        case cexp
                        solve( (#vr.256, 1)[!KU( f_.259, ~m2.20 )] /* may loop */ )
                          case Ephk_reveal
                          solve( KU((#vr.182, 0), 'g'^~m1.248) )
                            case Init_1
                            solve( KU((#vr.344, 1), ~ltkR.19) )
                              case Ltk_reveal
                              by contradiction // from formulas
                            qed
                          next
                            case Init_2
                            solve( KU((#vr.368, 1), ~ltkR.19) )
                              case Ltk_reveal
                              by contradiction // from formulas
                            qed
                          next
                            case cexp
                            solve( (#vr.310, 1)[!KU( f_.313, ~m1.248 )] /* may loop */ )
                              case Ephk_reveal
                              by contradiction // from formulas
                            qed
                          qed
                        qed
                      qed
                    next
                      case cMAC
                      solve( KU((#vf.118, 0), MAC(KDF(<'g'^~m1.113, 'g'^x.178, $I.16, $R.17, 
                                                       'g'^(~m1.113*~ltkR.140), 'g'^(~m2.20*~x.30)>),
                                                  <'Resp', $R.17, $I.16, 'g'^(~m2.20*~x.30), 
                                                   'g'^(~m1.113*~ltkR.140)>)) )
                        case Resp_1
                        solve( KU((#vr.182, 0), 'g'^~m1.113) )
                          case Init_1
                          solve( KU((#vr.298, 1), ~ltkR.19) )
                            case Ltk_reveal
                            solve( KU((#vr.182, 0), 'g'^~m2.257) )
                              case Resp_1
                              solve( KU((#vr.416, 1), ~ltkI.112) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            next
                              case cexp
                              solve( (#vr.370, 1)[!KU( f_.373, ~m2.257 )] /* may loop */ )
                                case Ephk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        next
                          case Init_2
                          by contradiction // cyclic
                        next
                          case cexp
                          solve( (#vr.264, 1)[!KU( f_.267, ~m1.113 )] /* may loop */ )
                            case Ephk_reveal
                            solve( KU((#vr.182, 0), 'g'^~m2.257) )
                              case Resp_1
                              solve( KU((#vr.358, 1), ~ltkI.112) )
                                case Ltk_reveal
                                by contradiction // from formulas
                              qed
                            next
                              case cexp
                              solve( (#vr.312, 1)[!KU( f_.315, ~m2.257 )] /* may loop */ )
                                case Ephk_reveal
                                by contradiction // from formulas
                              qed
                            qed
                          qed
                        qed
                      next
                        case cMAC
                        solve( KU((#vr.182, 0), 'g'^~m2.20) )
                          case Resp_1
                          solve( KU((#vr.253, 1), ~x.30) )
                            case Ltk_reveal
                            solve( (#vr.198, 0)[!KU( f_.201,
                                                     KDF(<'g'^~m1.113, 'g'^x.178, $I.16, $R.17, 
                                                          'g'^(~m1.113*~ltkR.140), 'g'^(~m2.20*~x.30)>)
                                                )] /* may loop */ )
                              case Sessk_reveal
                              by contradiction // cyclic
                            next
                              case cKDF
                              solve( KU((#vr.315, 0), 'g'^~m1.113) )
                                case Init_1
                                solve( KU((#vr.356, 1), ~ltkR.140) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2
                                by contradiction // cyclic
                              next
                                case cexp
                                solve( (#vr.322, 1)[!KU( f_.325, ~m1.113 )] /* may loop */ )
                                  case Ephk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            qed
                          qed
                        next
                          case cexp
                          solve( (#vr.207, 1)[!KU( f_.210, ~m2.20 )] /* may loop */ )
                            case Ephk_reveal
                            solve( (#vr.198, 0)[!KU( f_.201,
                                                     KDF(<'g'^~m1.113, 'g'^x.178, $I.16, $R.17, 
                                                          'g'^(~m1.113*~ltkR.140), 'g'^(~m2.20*~x.30)>)
                                                )] /* may loop */ )
                              case Sessk_reveal
                              by contradiction // cyclic
                            next
                              case cKDF
                              solve( KU((#vr.260, 0), 'g'^~m1.113) )
                                case Init_1
                                solve( KU((#vr.301, 1), ~ltkR.140) )
                                  case Ltk_reveal
                                  by contradiction // from formulas
                                qed
                              next
                                case Init_2
                                by contradiction // cyclic
                              next
                                case cexp
                                solve( (#vr.267, 1)[!KU( f_.270, ~m1.113 )] /* may loop */ )
                                  case Ephk_reveal
                                  by contradiction // from formulas
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case Resp_1
              solve( (#i4.10, 2)[!Ltk( $R.111, ~ltkR.113 )] )
                case Register_pk
                solve( (#i4.10, 3)[!Pk( $I.110, 'g'^~x.124 )] )
                  case Register_pk
                  solve( Match( ~m2.20,
                                <$R.111, $I.110, 'Resp', 'g'^(~m2.114*~x.124), XB.115>
                         ) @ #i5.11 )
                    case Init_2
                    by solve( (#i5.11, 0)[Init_1( ~m2.20, $I.110, $R.111, ~ltkI.153, X.155,
                                                  XB.115
                                          )] )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( Sid( s.3, A.4, B.5, minfo.6 ) @ #i1 )
    case Init_1
    solve( (#i1, 1)[!Ltk( $I.10, ~ltkI.12 )] )
      case Register_pk
      solve( (#i1, 2)[!Pk( $R.11, 'g'^~ltkR.20 )] )
        case Register_pk
        solve( Accept( ~m1.19, k.7 ) @ #i3.2 )
          case Init_2
          solve( (#i3.2, 0)[Init_1( ~m1.19, $I.45, $R.46, ~ltkI.47, X.49, XB.50
                            )] )
            case Init_1
            solve( (#i2.1, 0)[!KU( f_.8,
                                   KDF(<'g'^~m1.19, z.52, $I.10, $R.11, 'g'^(~m1.19*~ltkR.20), YA.51>)
                              )] /* may loop */ )
              case Sessk_reveal_case_1
              by contradiction // from formulas
            next
              case Sessk_reveal_case_2
              by contradiction // from formulas
            next
              case cKDF
              solve( KU((#vf.53, 0), MAC(KDF(<'g'^~m1.19, z.52, $I.10, $R.11, 
                                              'g'^(~m1.19*~ltkR.20), YA.51>),
                                         <'Resp', $R.11, $I.10, YA.51, 'g'^(~m1.19*~ltkR.20)>)) )
                case Resp_1
                solve( KU((#vr.94, 0), 'g'^~m1.19) )
                  case Init_1
                  solve( KU((#vr.199, 1), ~ltkR.20) )
                    case Ltk_reveal
                    solve( KU((#vr.94, 0), 'g'^~m2.114) )
                      case Resp_1
                      solve( KU((#vr.311, 1), ~ltkI.160) )
                        case Ltk_reveal
                        by contradiction // from formulas
                      qed
                    next
                      case cexp
                      solve( (#vr.265, 1)[!KU( f_.268, ~m2.114 )] /* may loop */ )
                        case Ephk_reveal
                        by contradiction // from formulas
                      qed
                    qed
                  qed
                next
                  case Init_2
                  by contradiction // cyclic
                next
                  case cexp
                  solve( (#vr.165, 1)[!KU( f_.168, ~m1.19 )] /* may loop */ )
                    case Ephk_reveal
                    by contradiction // from formulas
                  qed
                qed
              next
                case cMAC
                solve( KU((#vr.94, 0), 'g'^~m1.19) )
                  case Init_1
                  solve( KU((#vr.144, 1), ~ltkR.20) )
                    case Ltk_reveal
                    by contradiction // cyclic
                  qed
                next
                  case Init_2
                  by contradiction // cyclic
                next
                  case cexp
                  solve( (#vr.110, 1)[!KU( f_.113, ~m1.19 )] /* may loop */ )
                    case Ephk_reveal
                    by contradiction // from formulas
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_2
          by solve( (#i3.2, 0)[Resp_1( ~m1.19, $I.45, $R.46, YA.49, XB.48, tagA.51,
                                       k.7
                               )] )
        qed
      qed
    qed
  next
    case Init_2
    solve( (#i1, 0)[Init_1( ~m1.13, $I.10, $R.11, ~ltkI.12, X.14, XB.15 )] )
      case Init_1
      solve( Accept( ~m1.13, k.7 ) @ #i3.2 )
        case Init_2
        solve( (#i3.2, 0)[Init_1( ~m1.13, $I.57, $R.58, ~ltkI.59, X.61, XB.62
                          )] )
          case Init_1
          solve( (#i2.1, 0)[!KU( f_.8,
                                 KDF(<'g'^~m1.13, z.17, $I.10, $R.11, 'g'^(~m1.13*~ltkR.40), YA.16>)
                            )] /* may loop */ )
            case Sessk_reveal_case_1
            by contradiction // from formulas
          next
            case Sessk_reveal_case_2
            by contradiction // from formulas
          next
            case cKDF
            solve( KU((#vf.18, 0), MAC(KDF(<'g'^~m1.13, z.17, $I.10, $R.11, 
                                            'g'^(~m1.13*~ltkR.40), YA.16>),
                                       <'Resp', $R.11, $I.10, YA.16, 'g'^(~m1.13*~ltkR.40)>)) )
              case Resp_1
              solve( KU((#vr.106, 0), 'g'^~m1.13) )
                case Init_1
                solve( KU((#vr.211, 1), ~ltkR.40) )
                  case Ltk_reveal
                  solve( KU((#vr.106, 0), 'g'^~m2.126) )
                    case Resp_1
                    solve( KU((#vr.323, 1), ~ltkI.172) )
                      case Ltk_reveal
                      by contradiction // from formulas
                    qed
                  next
                    case cexp
                    solve( (#vr.277, 1)[!KU( f_.280, ~m2.126 )] /* may loop */ )
                      case Ephk_reveal
                      by contradiction // from formulas
                    qed
                  qed
                qed
              next
                case Init_2
                by contradiction // cyclic
              next
                case cexp
                solve( (#vr.177, 1)[!KU( f_.180, ~m1.13 )] /* may loop */ )
                  case Ephk_reveal
                  by contradiction // from formulas
                qed
              qed
            next
              case cMAC
              solve( KU((#vr.106, 0), 'g'^~m1.13) )
                case Init_1
                solve( KU((#vr.156, 1), ~ltkR.40) )
                  case Ltk_reveal
                  by contradiction // cyclic
                qed
              next
                case Init_2
                by contradiction // cyclic
              next
                case cexp
                solve( (#vr.122, 1)[!KU( f_.125, ~m1.13 )] /* may loop */ )
                  case Ephk_reveal
                  by contradiction // from formulas
                qed
              qed
            qed
          qed
        qed
      next
        case Resp_2
        by solve( (#i3.2, 0)[Resp_1( ~m1.13, $I.57, $R.58, YA.61, XB.60, tagA.63,
                                     k.7
                             )] )
      qed
    qed
  next
    case Resp_1
    solve( (#i1, 2)[!Ltk( $R.11, ~ltkR.13 )] )
      case Register_pk
      solve( (#i1, 3)[!Pk( $I.10, 'g'^~x.24 )] )
        case Register_pk
        solve( Accept( ~m2.14, k.7 ) @ #i3.2 )
          case Init_2
          by solve( (#i3.2, 0)[Init_1( ~m2.14, $I.51, $R.52, ~ltkI.53, X.55, XB.56
                               )] )
        next
          case Resp_2
          solve( (#i3.2, 0)[Resp_1( ~m2.14, $I.51, $R.52, YA.55, XB.54, tagA.57,
                                    k.7
                            )] )
            case Resp_1
            solve( (#i2.1, 0)[!KU( f_.8,
                                   KDF(<z.18, 'g'^~m2.14, $I.10, $R.11, XB.15, 'g'^(~m2.14*~x.24)>)
                              )] /* may loop */ )
              case Sessk_reveal_case_1
              by contradiction // from formulas
            next
              case Sessk_reveal_case_2
              by contradiction // from formulas
            next
              case cKDF
              solve( KU((#vf.58, 0), MAC(KDF(<z.18, 'g'^~m2.14, $I.10, $R.11, XB.15, 
                                              'g'^(~m2.14*~x.24)>),
                                         <'Init', $I.10, $R.11, XB.15, 'g'^(~m2.14*~x.24)>)) )
                case Init_2
                solve( KU((#vr.106, 0), 'g'^~m2.14) )
                  case Resp_1
                  solve( KU((#vr.223, 1), ~x.24) )
                    case Ltk_reveal
                    solve( KU((#vr.106, 0), 'g'^~m1.125) )
                      case Init_1
                      solve( KU((#vr.314, 1), ~ltkR.172) )
                        case Ltk_reveal
                        by contradiction // from formulas
                      qed
                    next
                      case Init_2
                      by contradiction // cyclic
                    next
                      case cexp
                      solve( (#vr.280, 1)[!KU( f_.283, ~m1.125 )] /* may loop */ )
                        case Ephk_reveal
                        by contradiction // from formulas
                      qed
                    qed
                  qed
                next
                  case cexp
                  solve( (#vr.177, 1)[!KU( f_.180, ~m2.14 )] /* may loop */ )
                    case Ephk_reveal
                    by contradiction // from formulas
                  qed
                qed
              next
                case cMAC
                solve( KU((#vr.106, 0), 'g'^~m2.14) )
                  case Resp_1
                  solve( KU((#vr.168, 1), ~x.24) )
                    case Ltk_reveal
                    by contradiction // cyclic
                  qed
                next
                  case cexp
                  solve( (#vr.122, 1)[!KU( f_.125, ~m2.14 )] /* may loop */ )
                    case Ephk_reveal
                    by contradiction // from formulas
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end