theory JKL_TS1_2008 begin

// Function signature and definition of the equational theory E

builtin: diffie-hellman
functions: fst/1, h/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2

section{* Jeong, Katz, Lee : TS1 (2008) *}

rule (modulo E) generate_ltk:
   [ Fr( ~lk ) ] --> [ !Ltk( $A, ~lk ), !Pk( $A, 'g'^~lk ), Out( 'g'^~lk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~ekI ), !Ltk( $I, ~lkI ) ]
  --[ SidI_1( ~ekI, $I, $R, ~ekI ) ]->
   [ Init_1( ~ekI, $I, $R, ~lkI, ~ekI ), !Ephk( ~ekI ), Out( ~ekI ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_2:
   [ Init_1( ~ekI, $I, $R, ~lkI, ~ekI ), In( Y ), !Pk( $R, 'g'^~lkR ) ]
  --[ SidI_2( ~ekI, $I, $R, ~ekI, Y, h(<$I, $R, ~ekI, Y, 'g'^~lkR^~lkI>) )
  ]->
   [ !Sessk( ~ekI, h(<$I, $R, ~ekI, Y, 'g'^~lkR^~lkI>) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Resp_1:
   [ In( X ), Fr( ~ekR ), !Ltk( $R, ~lkR ), !Pk( $I, 'g'^~lkI ) ]
  --[ SidR_1( ~ekR, $I, $R, X, ~ekR, h(<$I, $R, X, ~ekR, 'g'^~lkI^~lkR>) )
  ]->
   [
   Out( ~ekR ), !Ephk( ~ekR ),
   !Sessk( ~ekR, h(<$I, $R, X, ~ekR, 'g'^~lkI^~lkR>) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Sessk_reveal:
   [ !Sessk( ~tid, k ) ] --[ SesskRev( ~tid ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ephk_reveal:
   [ !Ephk( ~ekI ) ] --[ EphkRev( ~ekI ) ]-> [ Out( ~ekI ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ltk_reveal:
   [ !Ltk( $A, k ) ] --[ LtkRev( $A ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

lemma (modulo E) JKL2008_2_initiator_key:
  all-traces
  "not(Ex #i1 #i2.1 ttest.2 I.3 R.4 k.5 hkI.6 hkR.7.
        ((((((SidI_2( ttest.2, I.3, R.4, hkI.6, hkR.7, k.5 ) @ #i1) &
             (K( k.5 ) @ #i2.1)) &
            (All #i3.8 t.9. (EphkRev( t.9 ) @ #i3.8) ==> (F))) &
           (All #i3.10. (SesskRev( ttest.2 ) @ #i3.10) ==> (F))) &
          (All #i3.11 #i4.12 tpartner.13 kpartner.14.
            ((SidR_1( tpartner.13, I.3, R.4, hkI.6, hkR.7, kpartner.14 ) @ #i3.11) &
             (SesskRev( tpartner.13 ) @ #i4.12)) ==>
            (F))) &
         (All #i3.15.
           (LtkRev( I.3 ) @ #i3.15) ==>
           (Ex #i4.16 tpartner.17 kpartner.18.
             SidR_1( tpartner.17, I.3, R.4, hkI.6, hkR.7, kpartner.18 ) @ #i4.16))) &
        (All #i3.19.
          (LtkRev( R.4 ) @ #i3.19) ==>
          (Ex #i4.20 tpartner.21 kpartner.22.
            SidR_1( tpartner.21, I.3, R.4, hkI.6, hkR.7, kpartner.22 ) @ #i4.20)))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex #i1 #i2.1 ttest.2 I.3 R.4 k.5 hkI.6 hkR.7.
  (SidI_2( ttest.2, I.3, R.4, hkI.6, hkR.7, k.5 ) @ #i1) &
  (K( k.5 ) @ #i2.1)
 &
  (All #i3.8 t.9. (EphkRev( t.9 ) @ #i3.8) ==> F) &
  (All #i3.10. (SesskRev( ttest.2 ) @ #i3.10) ==> F) &
  (All #i3.11 #i4.12 tpartner.13 kpartner.14.
    (SidR_1( tpartner.13, I.3, R.4, hkI.6, hkR.7, kpartner.14 ) @ #i3.11) &
    (SesskRev( tpartner.13 ) @ #i4.12)
   ==>
    F) &
  (All #i3.15.
    (LtkRev( I.3 ) @ #i3.15)
   ==>
    Ex #i4.16 tpartner.17 kpartner.18.
     (SidR_1( tpartner.17, I.3, R.4, hkI.6, hkR.7, kpartner.18 ) @ #i4.16)
    &
     T) &
  (All #i3.19.
    (LtkRev( R.4 ) @ #i3.19)
   ==>
    Ex #i4.20 tpartner.21 kpartner.22.
     (SidR_1( tpartner.21, I.3, R.4, hkI.6, hkR.7, kpartner.22 ) @ #i4.20)
    &
     T)"
*/
simplify
solve( (#i1, 0)[Init_1( ~ekI.11, $I.9, $R.10, ~lkI.17, ~ekI.11 )] )
  case Init_1
  solve( (#i1, 2)[!Pk( $R.10, 'g'^~lkR.18 )] )
    case generate_ltk
    solve( (#i2.1, 0)[!KU( f_.21,
                           h(<$I.9, $R.10, ~ekI.11, hkR.7, 'g'^(~lkI.17*~lkR.18)>)
                      )] /* may loop */ )
      case ch
      solve( KU((#vr.57, 0), 'g'^(~lkI.17*~lkR.18)) )
        case cexp
        solve( KU((#vr.64, 1), ~lkI.17) )
          case Ltk_reveal
          solve( (#i4.108, 2)[!Ltk( $R.10, ~lkR.120 )] )
            case generate_ltk
            solve( (#i4.108, 3)[!Pk( $I.9, 'g'^~lkI.121 )] )
              case generate_ltk
              solve( KU((#vr.64, 1), ~lkR.18) )
                case Ltk_reveal
                solve( (#vf.19, 0)[!KU( f_.20, ~ekR.114 )] /* may loop */ )
                  case Resp_1
                  solve( KU((#vr.57, 0), ~ekI.11) )
                    case Init_1
                    SOLVED
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma (modulo E) JKL2008_2_responder_key:
  all-traces
  "not(Ex #i1 #i2.1 ttest.2 I.3 R.4 k.5 hkI.6 hkR.7.
        ((((((SidR_1( ttest.2, I.3, R.4, hkI.6, hkR.7, k.5 ) @ #i1) &
             (K( k.5 ) @ #i2.1)) &
            (All #i3.8 t.9. (EphkRev( t.9 ) @ #i3.8) ==> (F))) &
           (All #i3.10. (SesskRev( ttest.2 ) @ #i3.10) ==> (F))) &
          (All #i3.11 #i4.12 tpartner.13 kpartner.14.
            ((SidI_2( tpartner.13, I.3, R.4, hkI.6, hkR.7, kpartner.14 ) @ #i3.11) &
             (SesskRev( tpartner.13 ) @ #i4.12)) ==>
            (F))) &
         (All #i3.15.
           (LtkRev( I.3 ) @ #i3.15) ==>
           (Ex #i4.16 tpartner.17.
             SidI_1( tpartner.17, I.3, R.4, hkI.6 ) @ #i4.16))) &
        (All #i3.18.
          (LtkRev( R.4 ) @ #i3.18) ==>
          (Ex #i4.19 tpartner.20.
            SidI_1( tpartner.20, I.3, R.4, hkI.6 ) @ #i4.19)))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex #i1 #i2.1 ttest.2 I.3 R.4 k.5 hkI.6 hkR.7.
  (SidR_1( ttest.2, I.3, R.4, hkI.6, hkR.7, k.5 ) @ #i1) &
  (K( k.5 ) @ #i2.1)
 &
  (All #i3.8 t.9. (EphkRev( t.9 ) @ #i3.8) ==> F) &
  (All #i3.10. (SesskRev( ttest.2 ) @ #i3.10) ==> F) &
  (All #i3.11 #i4.12 tpartner.13 kpartner.14.
    (SidI_2( tpartner.13, I.3, R.4, hkI.6, hkR.7, kpartner.14 ) @ #i3.11) &
    (SesskRev( tpartner.13 ) @ #i4.12)
   ==>
    F) &
  (All #i3.15.
    (LtkRev( I.3 ) @ #i3.15)
   ==>
    Ex #i4.16 tpartner.17.
     (SidI_1( tpartner.17, I.3, R.4, hkI.6 ) @ #i4.16)
    &
     T) &
  (All #i3.18.
    (LtkRev( R.4 ) @ #i3.18)
   ==>
    Ex #i4.19 tpartner.20.
     (SidI_1( tpartner.20, I.3, R.4, hkI.6 ) @ #i4.19)
    &
     T)"
*/
simplify
solve( (#i1, 2)[!Ltk( $R.10, ~lkR.17 )] )
  case generate_ltk
  solve( (#i1, 3)[!Pk( $I.9, 'g'^~lkI.18 )] )
    case generate_ltk
    solve( (#i2.1, 0)[!KU( f_.22,
                           h(<$I.9, $R.10, hkI.6, ~ekR.11, 'g'^(~lkR.17*~lkI.18)>)
                      )] /* may loop */ )
      case ch
      solve( KU((#vr.48, 0), 'g'^(~lkR.17*~lkI.18)) )
        case cexp
        solve( KU((#vr.55, 1), ~lkR.17) )
          case Ltk_reveal
          solve( (#i4.99, 1)[!Ltk( $I.9, ~lkI.105 )] )
            case generate_ltk
            solve( KU((#vr.55, 1), ~lkI.18) )
              case Ltk_reveal
              solve( (#vf.19, 0)[!KU( f_.20, ~ekI.104 )] /* may loop */ )
                case Init_1
                solve( KU((#vr.48, 0), ~ekR.11) )
                  case Resp_1
                  SOLVED
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end