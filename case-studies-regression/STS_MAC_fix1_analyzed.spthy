theory STS_MAC_fix1 begin

// Function signature and definition of the equational theory E

builtin: diffie-hellman
functions: KDF/1, fst/1, mac/2, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true()

section{* The Station-To-Station Protocol (MAC version, fix UKS attack with proof-of-possession of exponent) *}

rule (modulo E) Register_pk_normal:
   [ Fr( ~ltk ) ]
  -->
   [ !Ltk( $A, ~ltk ), !Pk( $A, pk(~ltk) ), Out( pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Register_pk_evil:
   [ In( ltk ) ]
  --[ Corrupt( $E ) ]->
   [ !Ltk( $E, ltk ), !Pk( $E, pk(ltk) ), Out( pk(ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~ekI ), !Ltk( $I, ~ltkI ) ]
  -->
   [ Init_1( $I, $R, ~ltkI, ~ekI ), Out( <$I, $R, 'g'^~ekI> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_2:
   [
   Init_1( $I, $R, ~ltkI, ~ekI ), !Pk( $R, pk(~ltkR) ),
   In( <$R, $I, Y, sign(<Y, 'g'^~ekI>, ~ltkR), 
        mac(Y^~ekI, sign(<Y, 'g'^~ekI>, ~ltkR))>
   )
   ]
  --[ AcceptedI( ~ekI, $I, $R, 'g'^~ekI, Y, KDF(Y^~ekI) ) ]->
   [
   Out( <$I, $R, sign(<'g'^~ekI, Y>, ~ltkI), 
         mac(Y^~ekI, sign(<'g'^~ekI, Y>, ~ltkI))>
   ),
   !SessionKey( ~ekI, $I, $R, KDF(Y^~ekI) )
   ]

  /*
  rule (modulo AC) Init_2:
     [
     Init_1( $I, $R, ~ltkI, ~ekI ), !Pk( $R, pk(~ltkR) ),
     In( <$R, $I, Y, sign(<Y, 'g'^~ekI>, ~ltkR), 
          mac(z, sign(<Y, 'g'^~ekI>, ~ltkR))>
     )
     ]
    --[ AcceptedI( ~ekI, $I, $R, 'g'^~ekI, Y, KDF(z) ) ]->
     [
     Out( <$I, $R, sign(<'g'^~ekI, Y>, ~ltkI), 
           mac(z, sign(<'g'^~ekI, Y>, ~ltkI))>
     ),
     !SessionKey( ~ekI, $I, $R, KDF(z) )
     ]
  
    variants (modulo AC)
    1. ~ekI  = ~ekI.16
       Y     = Y.19
       z     = Y.19^~ekI.16
    
    2. ~ekI  = ~ekI.18
       Y     = z.23^inv(~ekI.18)
       z     = z.23
    
    3. ~ekI  = ~ekI.39
       Y     = x.73^x.74
       z     = x.73^(~ekI.39*x.74)
    
    4. ~ekI  = ~ekI.39
       Y     = x.73^inv((~ekI.39*x.74))
       z     = x.73^inv(x.74)
    
    5. ~ekI  = ~ekI.39
       Y     = x.73^(x.74*inv(~ekI.39))
       z     = x.73^x.74
    
    6. ~ekI  = ~ekI.40
       Y     = x.74^(x.76*inv((~ekI.40*x.75)))
       z     = x.74^(x.76*inv(x.75))
  */

rule (modulo E) Resp_1:
   [ !Ltk( $R, ~ltkR ), Fr( ~ekR ), In( <$I, $R, X> ) ]
  -->
   [
   Resp_1( $I, $R, ~ltkR, ~ekR, X ),
   Out( <$R, $I, 'g'^~ekR, sign(<'g'^~ekR, X>, ~ltkR), 
         mac(X^~ekR, sign(<'g'^~ekR, X>, ~ltkR))>
   )
   ]

  /*
  rule (modulo AC) Resp_1:
     [ !Ltk( $R, ~ltkR ), Fr( ~ekR ), In( <$I, $R, X> ) ]
    -->
     [
     Resp_1( $I, $R, ~ltkR, ~ekR, X ),
     Out( <$R, $I, 'g'^~ekR, sign(<'g'^~ekR, X>, ~ltkR), 
           mac(z, sign(<'g'^~ekR, X>, ~ltkR))>
     )
     ]
  
    variants (modulo AC)
    1. ~ekR  = ~ekR.14
       X     = X.16
       z     = X.16^~ekR.14
    
    2. ~ekR  = ~ekR.16
       X     = z.20^inv(~ekR.16)
       z     = z.20
    
    3. ~ekR  = ~ekR.35
       X     = x.65^x.66
       z     = x.65^(~ekR.35*x.66)
    
    4. ~ekR  = ~ekR.35
       X     = x.65^inv((~ekR.35*x.66))
       z     = x.65^inv(x.66)
    
    5. ~ekR  = ~ekR.35
       X     = x.65^(x.66*inv(~ekR.35))
       z     = x.65^x.66
    
    6. ~ekR  = ~ekR.36
       X     = x.66^(x.68*inv((~ekR.36*x.67)))
       z     = x.66^(x.68*inv(x.67))
  */

rule (modulo E) Resp_2:
   [
   !Pk( $I, pk(~ltkI) ), Resp_1( $I, $R, ~ltkR, ~ekR, X ),
   In( <$I, $R, sign(<X, 'g'^~ekR>, ~ltkI), 
        mac(X^~ekR, sign(<X, 'g'^~ekR>, ~ltkI))>
   )
   ]
  --[ AcceptedR( ~ekR, $I, $R, X, 'g'^~ekR, KDF(X^~ekR) ) ]->
   [ !SessionKey( ~ekR, $I, $R, KDF(X^~ekR) ) ]

  /*
  rule (modulo AC) Resp_2:
     [
     !Pk( $I, pk(~ltkI) ), Resp_1( $I, $R, ~ltkR, ~ekR, X ),
     In( <$I, $R, sign(<X, 'g'^~ekR>, ~ltkI), 
          mac(z, sign(<X, 'g'^~ekR>, ~ltkI))>
     )
     ]
    --[ AcceptedR( ~ekR, $I, $R, X, 'g'^~ekR, KDF(z) ) ]->
     [ !SessionKey( ~ekR, $I, $R, KDF(z) ) ]
  
    variants (modulo AC)
    1. ~ekR  = ~ekR.16
       X     = X.19
       z     = X.19^~ekR.16
    
    2. ~ekR  = ~ekR.18
       X     = z.23^inv(~ekR.18)
       z     = z.23
    
    3. ~ekR  = ~ekR.39
       X     = x.73^x.74
       z     = x.73^(~ekR.39*x.74)
    
    4. ~ekR  = ~ekR.39
       X     = x.73^inv((~ekR.39*x.74))
       z     = x.73^inv(x.74)
    
    5. ~ekR  = ~ekR.39
       X     = x.73^(x.74*inv(~ekR.39))
       z     = x.73^x.74
    
    6. ~ekR  = ~ekR.40
       X     = x.74^(x.76*inv((~ekR.40*x.75)))
       z     = x.74^(x.76*inv(x.75))
  */

rule (modulo E) Sessionkey_Reveal:
   [ !SessionKey( ~tid, $I, $R, k ) ] --[ SesskRev( ~tid ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

lemma (modulo E) KI_Perfect_Forward_Secrecy_I:
  all-traces
  "not(Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
        (((((AcceptedI( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
            (not(Ex #r.8. Corrupt( I.1 ) @ #r.8))) &
           (not(Ex #r.9. Corrupt( R.2 ) @ #r.9))) &
          (K( sessKey.3 ) @ #k.5)) &
         (not(Ex #i3.10. SesskRev( ttest ) @ #i3.10))) &
        (not(Ex #i3.11 #i4.12 tpartner.13 kpartner.14.
              (SesskRev( tpartner.13 ) @ #i3.11) &
              (AcceptedR( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14
               ) @ #i4.12))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
  (AcceptedI( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
  (K( sessKey.3 ) @ #k.5)
 &
  (All #r.8. (Corrupt( I.1 ) @ #r.8) ==> F) &
  (All #r.9. (Corrupt( R.2 ) @ #r.9) ==> F) &
  (All #i3.10. (SesskRev( ttest ) @ #i3.10) ==> F) &
  (All #i3.11 #i4.12 tpartner.13 kpartner.14.
    (SesskRev( tpartner.13 ) @ #i3.11) &
    (AcceptedR( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14 ) @ #i4.12)
   ==>
    F)"
*/
simplify
solve( (#i1.4, 0)[Init_1( $I.8, $R.8, ~ltkI.8, ~ekI.8 )] )
  case Init_1_case_1
  solve( (#i1.4, 1)[!Pk( $R.8, pk(~ltkR.8) )] )
    case Register_pk_evil
    by contradiction // from formulas
  next
    case Register_pk_normal
    solve( !KU( f_.25, sign(<hkr.7, 'g'^~ekI.8>, ~ltkR.8) ) @ #vk.24 )
      case Init_2_case_1
      solve( !KU( f_.28, KDF('g'^(~ekI.158*~ekI.159)) ) @ #vk.29 )
        case Sessionkey_Reveal_case_1
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case Init_2
          by contradiction // cyclic
        next
          case csign
          by solve( !KU( f_.264, ~ltkR.59 ) @ #vk.266 )
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case Init_2
          by contradiction // cyclic
        next
          case csign
          by solve( !KU( f_.264, ~ltkR.59 ) @ #vk.266 )
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case Init_2
          by contradiction // cyclic
        next
          case csign
          by solve( !KU( f_.264, ~ltkR.59 ) @ #vk.266 )
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case Init_2
          by contradiction // cyclic
        next
          case csign
          by solve( !KU( f_.264, ~ltkR.59 ) @ #vk.266 )
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case Init_2
          by contradiction // cyclic
        next
          case csign
          by solve( !KU( f_.260, ~ltkR.59 ) @ #vk.262 )
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case Init_2
          by contradiction // cyclic
        next
          case csign
          by solve( !KU( f_.260, ~ltkR.59 ) @ #vk.262 )
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case Init_2
          by contradiction // cyclic
        next
          case csign
          by solve( !KU( f_.260, ~ltkR.59 ) @ #vk.262 )
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case Init_2
          by contradiction // cyclic
        next
          case csign
          by solve( !KU( f_.260, ~ltkR.59 ) @ #vk.262 )
        qed
      next
        case cKDF
        solve( !KU( f_.163, 'g'^(~ekI.158*~ekI.159) ) @ #vk.164 )
          case Init_1_case_1
          by solve( !KU( f_.191, ~ekI.159 ) @ #vk.194 )
        next
          case Init_1_case_2
          by solve( !KU( f_.191, ~ekI.158 ) @ #vk.194 )
        next
          case cexp
          by solve( !KU( f_.217, ~ekI.158 ) @ #vk.216 )
        qed
      qed
    next
      case Init_2_case_2
      solve( !KU( f_.28, KDF('g'^(~ekI.158*~ekI.159)) ) @ #vk.29 )
        case Sessionkey_Reveal_case_1
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case csign
          solve( !KU( f_.85, ~ltkR.59 ) @ #vk.86 )
            case fresh
            solve( !KU( f_.78,
                        mac('g'^(~ekI.158*~ekI.159),
                            sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59))
                   ) @ #vk.77 )
              case cmac
              solve( !KU( f_.336, 'g'^(~ekI.158*~ekI.159) ) @ #vk.338 )
                case Init_1_case_1
                by solve( !KU( f_.366, ~ekI.159 ) @ #vk.369 )
              next
                case Init_1_case_2
                by solve( !KU( f_.366, ~ekI.158 ) @ #vk.369 )
              next
                case cexp
                by solve( !KU( f_.392, ~ekI.158 ) @ #vk.391 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case csign
          solve( !KU( f_.85, ~ltkR.59 ) @ #vk.86 )
            case fresh
            solve( !KU( f_.78,
                        mac('g'^(~ekI.158*~ekI.159),
                            sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59))
                   ) @ #vk.77 )
              case cmac
              solve( !KU( f_.336, 'g'^(~ekI.158*~ekI.159) ) @ #vk.338 )
                case Init_1_case_1
                by solve( !KU( f_.366, ~ekI.159 ) @ #vk.369 )
              next
                case Init_1_case_2
                by solve( !KU( f_.366, ~ekI.158 ) @ #vk.369 )
              next
                case cexp
                by solve( !KU( f_.392, ~ekI.158 ) @ #vk.391 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case csign
          solve( !KU( f_.85, ~ltkR.59 ) @ #vk.86 )
            case fresh
            solve( !KU( f_.78,
                        mac('g'^(~ekI.158*~ekI.159),
                            sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59))
                   ) @ #vk.77 )
              case cmac
              solve( !KU( f_.336, 'g'^(~ekI.158*~ekI.159) ) @ #vk.338 )
                case Init_1_case_1
                by solve( !KU( f_.366, ~ekI.159 ) @ #vk.369 )
              next
                case Init_1_case_2
                by solve( !KU( f_.366, ~ekI.158 ) @ #vk.369 )
              next
                case cexp
                by solve( !KU( f_.392, ~ekI.158 ) @ #vk.391 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case csign
          solve( !KU( f_.85, ~ltkR.59 ) @ #vk.86 )
            case fresh
            solve( !KU( f_.78,
                        mac('g'^(~ekI.158*~ekI.159),
                            sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59))
                   ) @ #vk.77 )
              case cmac
              solve( !KU( f_.336, 'g'^(~ekI.158*~ekI.159) ) @ #vk.338 )
                case Init_1_case_1
                by solve( !KU( f_.366, ~ekI.159 ) @ #vk.369 )
              next
                case Init_1_case_2
                by solve( !KU( f_.366, ~ekI.158 ) @ #vk.369 )
              next
                case cexp
                by solve( !KU( f_.392, ~ekI.158 ) @ #vk.391 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case csign
          solve( !KU( f_.85, ~ltkR.59 ) @ #vk.86 )
            case fresh
            solve( !KU( f_.78,
                        mac('g'^(~ekI.158*~ekI.159),
                            sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59))
                   ) @ #vk.77 )
              case cmac
              solve( !KU( f_.332, 'g'^(~ekI.158*~ekI.159) ) @ #vk.334 )
                case Init_1_case_1
                by solve( !KU( f_.362, ~ekI.159 ) @ #vk.365 )
              next
                case Init_1_case_2
                by solve( !KU( f_.362, ~ekI.158 ) @ #vk.365 )
              next
                case cexp
                by solve( !KU( f_.388, ~ekI.158 ) @ #vk.387 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case csign
          solve( !KU( f_.85, ~ltkR.59 ) @ #vk.86 )
            case fresh
            solve( !KU( f_.78,
                        mac('g'^(~ekI.158*~ekI.159),
                            sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59))
                   ) @ #vk.77 )
              case cmac
              solve( !KU( f_.332, 'g'^(~ekI.158*~ekI.159) ) @ #vk.334 )
                case Init_1_case_1
                by solve( !KU( f_.362, ~ekI.159 ) @ #vk.365 )
              next
                case Init_1_case_2
                by solve( !KU( f_.362, ~ekI.158 ) @ #vk.365 )
              next
                case cexp
                by solve( !KU( f_.388, ~ekI.158 ) @ #vk.387 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case csign
          solve( !KU( f_.85, ~ltkR.59 ) @ #vk.86 )
            case fresh
            solve( !KU( f_.78,
                        mac('g'^(~ekI.158*~ekI.159),
                            sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59))
                   ) @ #vk.77 )
              case cmac
              solve( !KU( f_.332, 'g'^(~ekI.158*~ekI.159) ) @ #vk.334 )
                case Init_1_case_1
                by solve( !KU( f_.362, ~ekI.159 ) @ #vk.365 )
              next
                case Init_1_case_2
                by solve( !KU( f_.362, ~ekI.158 ) @ #vk.365 )
              next
                case cexp
                by solve( !KU( f_.388, ~ekI.158 ) @ #vk.387 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( !KU( f_.76, sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59)
               ) @ #vk.75 )
          case csign
          solve( !KU( f_.85, ~ltkR.59 ) @ #vk.86 )
            case fresh
            solve( !KU( f_.78,
                        mac('g'^(~ekI.158*~ekI.159),
                            sign(<'g'^~ekI.158, 'g'^~ekI.159>, ~ltkR.59))
                   ) @ #vk.77 )
              case cmac
              solve( !KU( f_.332, 'g'^(~ekI.158*~ekI.159) ) @ #vk.334 )
                case Init_1_case_1
                by solve( !KU( f_.362, ~ekI.159 ) @ #vk.365 )
              next
                case Init_1_case_2
                by solve( !KU( f_.362, ~ekI.158 ) @ #vk.365 )
              next
                case cexp
                by solve( !KU( f_.388, ~ekI.158 ) @ #vk.387 )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( !KU( f_.163, 'g'^(~ekI.158*~ekI.159) ) @ #vk.164 )
          case Init_1_case_1
          by solve( !KU( f_.191, ~ekI.159 ) @ #vk.194 )
        next
          case Init_1_case_2
          by solve( !KU( f_.191, ~ekI.158 ) @ #vk.194 )
        next
          case cexp
          by solve( !KU( f_.217, ~ekI.158 ) @ #vk.216 )
        qed
      qed
    next
      case Resp_1
      solve( !KU( f_.28, KDF('g'^(~ekI.130*~ekR.131)) ) @ #vk.29 )
        case Sessionkey_Reveal_case_1
        solve( !KU( f_.159, sign(<'g'^x.191, 'g'^~tid.140>, ~ltkR.142)
               ) @ #vk.158 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          solve( splitEqs(1) )
            case split
            by contradiction // from formulas
          qed
        next
          case csign
          by solve( !KU( f_.236, ~ltkR.142 ) @ #vk.238 )
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( !KU( f_.159, sign(<'g'^x.191, 'g'^~tid.140>, ~ltkR.142)
               ) @ #vk.158 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          by solve( !KU( f_.236, ~ltkR.142 ) @ #vk.238 )
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( !KU( f_.159, sign(<'g'^x.191, 'g'^~tid.140>, ~ltkR.142)
               ) @ #vk.158 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          solve( !KU( f_.168, ~ltkR.142 ) @ #vk.169 )
            case fresh
            solve( !KU( f_.161,
                        mac('g'^(~ekI.130*~ekR.131), sign(<'g'^x.191, 'g'^~tid.140>, ~ltkR.142))
                   ) @ #vk.160 )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( splitEqs(1) )
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( !KU( f_.308, 'g'^(~ekI.130*~ekR.131) ) @ #vk.310 )
                case Init_1
                by solve( !KU( f_.338, ~ekR.131 ) @ #vk.341 )
              next
                case Resp_1
                by solve( !KU( f_.353, ~ekI.130 ) @ #vk.356 )
              next
                case cexp
                by solve( !KU( f_.364, ~ekI.130 ) @ #vk.363 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( !KU( f_.159, sign(<'g'^x.191, 'g'^~tid.140>, ~ltkR.142)
               ) @ #vk.158 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          solve( !KU( f_.168, ~ltkR.142 ) @ #vk.169 )
            case fresh
            solve( !KU( f_.161,
                        mac('g'^(~ekI.130*~ekR.131), sign(<'g'^x.191, 'g'^~tid.140>, ~ltkR.142))
                   ) @ #vk.160 )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( splitEqs(1) )
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( !KU( f_.308, 'g'^(~ekI.130*~ekR.131) ) @ #vk.310 )
                case Init_1
                by solve( !KU( f_.338, ~ekR.131 ) @ #vk.341 )
              next
                case Resp_1
                by solve( !KU( f_.353, ~ekI.130 ) @ #vk.356 )
              next
                case cexp
                by solve( !KU( f_.364, ~ekI.130 ) @ #vk.363 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( !KU( f_.155, sign(<'g'^x.191, 'g'^~tid.140>, ~ltkI.142)
               ) @ #vk.154 )
          case Init_2_case_1
          solve( splitEqs(1) )
            case split
            by contradiction // from formulas
          qed
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          by solve( !KU( f_.232, ~ltkI.142 ) @ #vk.234 )
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( !KU( f_.155, sign(<'g'^x.191, 'g'^~tid.140>, ~ltkI.142)
               ) @ #vk.154 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          by solve( !KU( f_.232, ~ltkI.142 ) @ #vk.234 )
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( !KU( f_.155, sign(<'g'^x.191, 'g'^~tid.140>, ~ltkI.142)
               ) @ #vk.154 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          solve( !KU( f_.161, ~ltkI.142 ) @ #vk.162 )
            case fresh
            solve( !KU( f_.157,
                        mac('g'^(~ekI.130*~ekR.131), sign(<'g'^x.191, 'g'^~tid.140>, ~ltkI.142))
                   ) @ #vk.156 )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( splitEqs(1) )
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( !KU( f_.304, 'g'^(~ekI.130*~ekR.131) ) @ #vk.306 )
                case Init_1
                by solve( !KU( f_.334, ~ekR.131 ) @ #vk.337 )
              next
                case Resp_1
                by solve( !KU( f_.349, ~ekI.130 ) @ #vk.352 )
              next
                case cexp
                by solve( !KU( f_.360, ~ekI.130 ) @ #vk.359 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( !KU( f_.155, sign(<'g'^x.191, 'g'^~tid.140>, ~ltkI.142)
               ) @ #vk.154 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          solve( !KU( f_.161, ~ltkI.142 ) @ #vk.162 )
            case fresh
            solve( !KU( f_.157,
                        mac('g'^(~ekI.130*~ekR.131), sign(<'g'^x.191, 'g'^~tid.140>, ~ltkI.142))
                   ) @ #vk.156 )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( splitEqs(1) )
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( !KU( f_.304, 'g'^(~ekI.130*~ekR.131) ) @ #vk.306 )
                case Init_1
                by solve( !KU( f_.334, ~ekR.131 ) @ #vk.337 )
              next
                case Resp_1
                by solve( !KU( f_.349, ~ekI.130 ) @ #vk.352 )
              next
                case cexp
                by solve( !KU( f_.360, ~ekI.130 ) @ #vk.359 )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( !KU( f_.135, 'g'^(~ekI.130*~ekR.131) ) @ #vk.136 )
          case Init_1
          by solve( !KU( f_.163, ~ekR.131 ) @ #vk.166 )
        next
          case Resp_1
          by solve( !KU( f_.178, ~ekI.130 ) @ #vk.181 )
        next
          case cexp
          by solve( !KU( f_.189, ~ekI.130 ) @ #vk.188 )
        qed
      qed
    next
      case csign
      by solve( !KU( f_.53, ~ltkR.8 ) @ #vk.55 )
    qed
  qed
next
  case Init_1_case_2
  by contradiction // from formulas
qed

lemma (modulo E) KI_Perfect_Forward_Secrecy_R:
  all-traces
  "not(Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
        (((((AcceptedR( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
            (not(Ex #r.8. Corrupt( I.1 ) @ #r.8))) &
           (not(Ex #r.9. Corrupt( R.2 ) @ #r.9))) &
          (K( sessKey.3 ) @ #k.5)) &
         (not(Ex #i2.10. SesskRev( ttest ) @ #i2.10))) &
        (not(Ex #i2.11 #i3.12 tpartner.13 kpartner.14.
              (SesskRev( tpartner.13 ) @ #i2.11) &
              (AcceptedI( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14
               ) @ #i3.12))))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all counter-examples:
"Ex ttest I.1 R.2 sessKey.3 #i1.4 #k.5 hki.6 hkr.7.
  (AcceptedR( ttest, I.1, R.2, hki.6, hkr.7, sessKey.3 ) @ #i1.4) &
  (K( sessKey.3 ) @ #k.5)
 &
  (All #r.8. (Corrupt( I.1 ) @ #r.8) ==> F) &
  (All #r.9. (Corrupt( R.2 ) @ #r.9) ==> F) &
  (All #i2.10. (SesskRev( ttest ) @ #i2.10) ==> F) &
  (All #i2.11 #i3.12 tpartner.13 kpartner.14.
    (SesskRev( tpartner.13 ) @ #i2.11) &
    (AcceptedI( tpartner.13, I.1, R.2, hki.6, hkr.7, kpartner.14 ) @ #i3.12)
   ==>
    F)"
*/
simplify
solve( (#i1.4, 0)[!Pk( $I.8, pk(~ltkI.8) )] )
  case Register_pk_evil
  by contradiction // from formulas
next
  case Register_pk_normal
  solve( (#i1.4, 1)[Resp_1( $I.8, $R.8, ~ltkR.8, ~ekR.8, hki.6 )] )
    case Resp_1_case_1
    solve( !KU( f_.21, sign(<hki.6, 'g'^~ekR.8>, ~ltkI.8) ) @ #vk.20 )
      case Init_2_case_1
      solve( !KU( f_.24, KDF('g'^(~ekR.190*~ekI.191)) ) @ #vk.25 )
        case Sessionkey_Reveal_case_1
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case Resp_1
          solve( !KU( f_.219, sign(<'g'^x.251, 'g'^~tid.200>, ~ltkR.202)
                 ) @ #vk.218 )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( splitEqs(1) )
          next
            case Resp_1
            solve( splitEqs(1) )
              case split
              by contradiction // from formulas
            qed
          next
            case csign
            by solve( !KU( f_.375, ~ltkR.202 ) @ #vk.377 )
          qed
        next
          case csign
          by solve( !KU( f_.296, ~ltkR.85 ) @ #vk.298 )
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case Resp_1
          solve( !KU( f_.219, sign(<'g'^x.251, 'g'^~tid.200>, ~ltkR.202)
                 ) @ #vk.218 )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( splitEqs(1) )
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case csign
            by solve( !KU( f_.375, ~ltkR.202 ) @ #vk.377 )
          qed
        next
          case csign
          by solve( !KU( f_.296, ~ltkR.85 ) @ #vk.298 )
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case Resp_1
          solve( !KU( f_.219, sign(<'g'^x.251, 'g'^~tid.200>, ~ltkR.202)
                 ) @ #vk.218 )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( splitEqs(1) )
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case csign
            solve( !KU( f_.228, ~ltkR.202 ) @ #vk.229 )
              case fresh
              solve( !KU( f_.221,
                          mac('g'^(~ekR.367*~ekI.368), sign(<'g'^x.251, 'g'^~tid.200>, ~ltkR.202))
                     ) @ #vk.220 )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                by solve( splitEqs(1) )
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( !KU( f_.447, 'g'^(~ekR.367*~ekI.368) ) @ #vk.449 )
                  case Init_1
                  by solve( !KU( f_.477, ~ekR.367 ) @ #vk.480 )
                next
                  case Resp_1
                  by solve( !KU( f_.492, ~ekI.368 ) @ #vk.495 )
                next
                  case cexp
                  by solve( !KU( f_.503, ~ekR.367 ) @ #vk.502 )
                qed
              qed
            qed
          qed
        next
          case csign
          by solve( !KU( f_.296, ~ltkR.85 ) @ #vk.298 )
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case Resp_1
          solve( !KU( f_.219, sign(<'g'^x.251, 'g'^~tid.200>, ~ltkR.202)
                 ) @ #vk.218 )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( splitEqs(1) )
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case csign
            solve( !KU( f_.228, ~ltkR.202 ) @ #vk.229 )
              case fresh
              solve( !KU( f_.221,
                          mac('g'^(~ekR.367*~ekI.368), sign(<'g'^x.251, 'g'^~tid.200>, ~ltkR.202))
                     ) @ #vk.220 )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                by solve( splitEqs(1) )
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( !KU( f_.447, 'g'^(~ekR.367*~ekI.368) ) @ #vk.449 )
                  case Init_1
                  by solve( !KU( f_.477, ~ekR.367 ) @ #vk.480 )
                next
                  case Resp_1
                  by solve( !KU( f_.492, ~ekI.368 ) @ #vk.495 )
                next
                  case cexp
                  by solve( !KU( f_.503, ~ekR.367 ) @ #vk.502 )
                qed
              qed
            qed
          qed
        next
          case csign
          by solve( !KU( f_.296, ~ltkR.85 ) @ #vk.298 )
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case Resp_1
          solve( !KU( f_.215, sign(<'g'^x.251, 'g'^~tid.200>, ~ltkI.202)
                 ) @ #vk.214 )
            case Init_2_case_1
            solve( splitEqs(1) )
              case split
              by contradiction // from formulas
            qed
          next
            case Init_2_case_2
            by solve( splitEqs(1) )
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case csign
            by solve( !KU( f_.371, ~ltkI.202 ) @ #vk.373 )
          qed
        next
          case csign
          by solve( !KU( f_.292, ~ltkR.85 ) @ #vk.294 )
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case Resp_1
          solve( !KU( f_.215, sign(<'g'^x.251, 'g'^~tid.200>, ~ltkI.202)
                 ) @ #vk.214 )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( splitEqs(1) )
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case csign
            by solve( !KU( f_.371, ~ltkI.202 ) @ #vk.373 )
          qed
        next
          case csign
          by solve( !KU( f_.292, ~ltkR.85 ) @ #vk.294 )
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case Resp_1
          solve( !KU( f_.215, sign(<'g'^x.251, 'g'^~tid.200>, ~ltkI.202)
                 ) @ #vk.214 )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( splitEqs(1) )
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case csign
            solve( !KU( f_.221, ~ltkI.202 ) @ #vk.222 )
              case fresh
              solve( !KU( f_.217,
                          mac('g'^(~ekR.363*~ekI.364), sign(<'g'^x.251, 'g'^~tid.200>, ~ltkI.202))
                     ) @ #vk.216 )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                by solve( splitEqs(1) )
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( !KU( f_.443, 'g'^(~ekR.363*~ekI.364) ) @ #vk.445 )
                  case Init_1
                  by solve( !KU( f_.473, ~ekR.363 ) @ #vk.476 )
                next
                  case Resp_1
                  by solve( !KU( f_.488, ~ekI.364 ) @ #vk.491 )
                next
                  case cexp
                  by solve( !KU( f_.499, ~ekR.363 ) @ #vk.498 )
                qed
              qed
            qed
          qed
        next
          case csign
          by solve( !KU( f_.292, ~ltkR.85 ) @ #vk.294 )
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case Resp_1
          solve( !KU( f_.215, sign(<'g'^x.251, 'g'^~tid.200>, ~ltkI.202)
                 ) @ #vk.214 )
            case Init_2_case_1
            by solve( splitEqs(1) )
          next
            case Init_2_case_2
            by solve( splitEqs(1) )
          next
            case Resp_1
            by solve( splitEqs(1) )
          next
            case csign
            solve( !KU( f_.221, ~ltkI.202 ) @ #vk.222 )
              case fresh
              solve( !KU( f_.217,
                          mac('g'^(~ekR.363*~ekI.364), sign(<'g'^x.251, 'g'^~tid.200>, ~ltkI.202))
                     ) @ #vk.216 )
                case Init_2_case_1
                by solve( splitEqs(1) )
              next
                case Init_2_case_2
                by solve( splitEqs(1) )
              next
                case Resp_1
                by solve( splitEqs(1) )
              next
                case cmac
                solve( !KU( f_.443, 'g'^(~ekR.363*~ekI.364) ) @ #vk.445 )
                  case Init_1
                  by solve( !KU( f_.473, ~ekR.363 ) @ #vk.476 )
                next
                  case Resp_1
                  by solve( !KU( f_.488, ~ekI.364 ) @ #vk.491 )
                next
                  case cexp
                  by solve( !KU( f_.499, ~ekR.363 ) @ #vk.498 )
                qed
              qed
            qed
          qed
        next
          case csign
          by solve( !KU( f_.292, ~ltkR.85 ) @ #vk.294 )
        qed
      next
        case cKDF
        solve( !KU( f_.195, 'g'^(~ekR.190*~ekI.191) ) @ #vk.196 )
          case Init_1
          by solve( !KU( f_.223, ~ekR.190 ) @ #vk.226 )
        next
          case Resp_1
          by solve( !KU( f_.238, ~ekI.191 ) @ #vk.241 )
        next
          case cexp
          by solve( !KU( f_.249, ~ekR.190 ) @ #vk.248 )
        qed
      qed
    next
      case Init_2_case_2
      solve( !KU( f_.24, KDF('g'^(~ekR.190*~ekI.191)) ) @ #vk.25 )
        case Sessionkey_Reveal_case_1
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case csign
          solve( !KU( f_.111, ~ltkR.85 ) @ #vk.112 )
            case fresh
            solve( !KU( f_.104,
                        mac('g'^(~ekR.190*~ekI.191),
                            sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85))
                   ) @ #vk.103 )
              case cmac
              solve( !KU( f_.368, 'g'^(~ekR.190*~ekI.191) ) @ #vk.370 )
                case Init_1
                by solve( !KU( f_.398, ~ekR.190 ) @ #vk.401 )
              next
                case Resp_1
                by solve( !KU( f_.413, ~ekI.191 ) @ #vk.416 )
              next
                case cexp
                by solve( !KU( f_.424, ~ekR.190 ) @ #vk.423 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case csign
          solve( !KU( f_.111, ~ltkR.85 ) @ #vk.112 )
            case fresh
            solve( !KU( f_.104,
                        mac('g'^(~ekR.190*~ekI.191),
                            sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85))
                   ) @ #vk.103 )
              case cmac
              solve( !KU( f_.368, 'g'^(~ekR.190*~ekI.191) ) @ #vk.370 )
                case Init_1
                by solve( !KU( f_.398, ~ekR.190 ) @ #vk.401 )
              next
                case Resp_1
                by solve( !KU( f_.413, ~ekI.191 ) @ #vk.416 )
              next
                case cexp
                by solve( !KU( f_.424, ~ekR.190 ) @ #vk.423 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case csign
          solve( !KU( f_.111, ~ltkR.85 ) @ #vk.112 )
            case fresh
            solve( !KU( f_.104,
                        mac('g'^(~ekR.190*~ekI.191),
                            sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85))
                   ) @ #vk.103 )
              case cmac
              solve( !KU( f_.368, 'g'^(~ekR.190*~ekI.191) ) @ #vk.370 )
                case Init_1
                by solve( !KU( f_.398, ~ekR.190 ) @ #vk.401 )
              next
                case Resp_1
                by solve( !KU( f_.413, ~ekI.191 ) @ #vk.416 )
              next
                case cexp
                by solve( !KU( f_.424, ~ekR.190 ) @ #vk.423 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case csign
          solve( !KU( f_.111, ~ltkR.85 ) @ #vk.112 )
            case fresh
            solve( !KU( f_.104,
                        mac('g'^(~ekR.190*~ekI.191),
                            sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85))
                   ) @ #vk.103 )
              case cmac
              solve( !KU( f_.368, 'g'^(~ekR.190*~ekI.191) ) @ #vk.370 )
                case Init_1
                by solve( !KU( f_.398, ~ekR.190 ) @ #vk.401 )
              next
                case Resp_1
                by solve( !KU( f_.413, ~ekI.191 ) @ #vk.416 )
              next
                case cexp
                by solve( !KU( f_.424, ~ekR.190 ) @ #vk.423 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case csign
          solve( !KU( f_.111, ~ltkR.85 ) @ #vk.112 )
            case fresh
            solve( !KU( f_.104,
                        mac('g'^(~ekR.190*~ekI.191),
                            sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85))
                   ) @ #vk.103 )
              case cmac
              solve( !KU( f_.364, 'g'^(~ekR.190*~ekI.191) ) @ #vk.366 )
                case Init_1
                by solve( !KU( f_.394, ~ekR.190 ) @ #vk.397 )
              next
                case Resp_1
                by solve( !KU( f_.409, ~ekI.191 ) @ #vk.412 )
              next
                case cexp
                by solve( !KU( f_.420, ~ekR.190 ) @ #vk.419 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case csign
          solve( !KU( f_.111, ~ltkR.85 ) @ #vk.112 )
            case fresh
            solve( !KU( f_.104,
                        mac('g'^(~ekR.190*~ekI.191),
                            sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85))
                   ) @ #vk.103 )
              case cmac
              solve( !KU( f_.364, 'g'^(~ekR.190*~ekI.191) ) @ #vk.366 )
                case Init_1
                by solve( !KU( f_.394, ~ekR.190 ) @ #vk.397 )
              next
                case Resp_1
                by solve( !KU( f_.409, ~ekI.191 ) @ #vk.412 )
              next
                case cexp
                by solve( !KU( f_.420, ~ekR.190 ) @ #vk.419 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case csign
          solve( !KU( f_.111, ~ltkR.85 ) @ #vk.112 )
            case fresh
            solve( !KU( f_.104,
                        mac('g'^(~ekR.190*~ekI.191),
                            sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85))
                   ) @ #vk.103 )
              case cmac
              solve( !KU( f_.364, 'g'^(~ekR.190*~ekI.191) ) @ #vk.366 )
                case Init_1
                by solve( !KU( f_.394, ~ekR.190 ) @ #vk.397 )
              next
                case Resp_1
                by solve( !KU( f_.409, ~ekI.191 ) @ #vk.412 )
              next
                case cexp
                by solve( !KU( f_.420, ~ekR.190 ) @ #vk.419 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( !KU( f_.102, sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85)
               ) @ #vk.101 )
          case csign
          solve( !KU( f_.111, ~ltkR.85 ) @ #vk.112 )
            case fresh
            solve( !KU( f_.104,
                        mac('g'^(~ekR.190*~ekI.191),
                            sign(<'g'^~ekR.190, 'g'^~ekI.191>, ~ltkR.85))
                   ) @ #vk.103 )
              case cmac
              solve( !KU( f_.364, 'g'^(~ekR.190*~ekI.191) ) @ #vk.366 )
                case Init_1
                by solve( !KU( f_.394, ~ekR.190 ) @ #vk.397 )
              next
                case Resp_1
                by solve( !KU( f_.409, ~ekI.191 ) @ #vk.412 )
              next
                case cexp
                by solve( !KU( f_.420, ~ekR.190 ) @ #vk.419 )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( !KU( f_.195, 'g'^(~ekR.190*~ekI.191) ) @ #vk.196 )
          case Init_1
          by solve( !KU( f_.223, ~ekR.190 ) @ #vk.226 )
        next
          case Resp_1
          by solve( !KU( f_.238, ~ekI.191 ) @ #vk.241 )
        next
          case cexp
          by solve( !KU( f_.249, ~ekR.190 ) @ #vk.248 )
        qed
      qed
    next
      case Resp_1
      solve( !KU( f_.24, KDF('g'^(~ekR.162*~ekR.163)) ) @ #vk.25 )
        case Sessionkey_Reveal_case_1
        solve( !KU( f_.191, sign(<'g'^x.223, 'g'^~tid.172>, ~ltkR.174)
               ) @ #vk.190 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          by solve( !KU( f_.268, ~ltkR.174 ) @ #vk.270 )
        qed
      next
        case Sessionkey_Reveal_case_2
        solve( !KU( f_.191, sign(<'g'^x.223, 'g'^~tid.172>, ~ltkR.174)
               ) @ #vk.190 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          by solve( !KU( f_.268, ~ltkR.174 ) @ #vk.270 )
        qed
      next
        case Sessionkey_Reveal_case_3
        solve( !KU( f_.191, sign(<'g'^x.223, 'g'^~tid.172>, ~ltkR.174)
               ) @ #vk.190 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          solve( !KU( f_.200, ~ltkR.174 ) @ #vk.201 )
            case fresh
            solve( !KU( f_.193,
                        mac('g'^(~ekR.162*~ekR.163), sign(<'g'^x.223, 'g'^~tid.172>, ~ltkR.174))
                   ) @ #vk.192 )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( splitEqs(1) )
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( !KU( f_.340, 'g'^(~ekR.162*~ekR.163) ) @ #vk.342 )
                case Resp_1_case_1
                by solve( !KU( f_.385, ~ekR.163 ) @ #vk.388 )
              next
                case Resp_1_case_2
                by solve( !KU( f_.385, ~ekR.162 ) @ #vk.388 )
              next
                case cexp
                by solve( !KU( f_.396, ~ekR.162 ) @ #vk.395 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_4
        solve( !KU( f_.191, sign(<'g'^x.223, 'g'^~tid.172>, ~ltkR.174)
               ) @ #vk.190 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          solve( !KU( f_.200, ~ltkR.174 ) @ #vk.201 )
            case fresh
            solve( !KU( f_.193,
                        mac('g'^(~ekR.162*~ekR.163), sign(<'g'^x.223, 'g'^~tid.172>, ~ltkR.174))
                   ) @ #vk.192 )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( splitEqs(1) )
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( !KU( f_.340, 'g'^(~ekR.162*~ekR.163) ) @ #vk.342 )
                case Resp_1_case_1
                by solve( !KU( f_.385, ~ekR.163 ) @ #vk.388 )
              next
                case Resp_1_case_2
                by solve( !KU( f_.385, ~ekR.162 ) @ #vk.388 )
              next
                case cexp
                by solve( !KU( f_.396, ~ekR.162 ) @ #vk.395 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_5
        solve( !KU( f_.187, sign(<'g'^x.223, 'g'^~tid.172>, ~ltkI.174)
               ) @ #vk.186 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          solve( splitEqs(1) )
            case split_case_1
            by contradiction // from formulas
          next
            case split_case_2
            solve( !KU( f_.23,
                        mac('g'^(~ekR.343*~ekR.344), sign(<'g'^~ekR.344, 'g'^~ekR.343>, ~ltkI.8))
                   ) @ #vk.22 )
              case Resp_1
              solve( !KU( f_.50, 'g'^~ekR.344 ) @ #vk.49 )
                case Resp_1
                solve( !KU( f_.96, 'g'^~ekR.343 ) @ #vk.95 )
                  case Resp_1
                  by contradiction // cyclic
                next
                  case cexp
                  by solve( !KU( f_.490, ~ekR.343 ) @ #vk.492 )
                qed
              next
                case cexp
                by solve( !KU( f_.427, ~ekR.344 ) @ #vk.429 )
              qed
            next
              case cmac
              solve( !KU( f_.350, 'g'^(~ekR.343*~ekR.344) ) @ #vk.352 )
                case Resp_1_case_1
                by solve( !KU( f_.395, ~ekR.344 ) @ #vk.398 )
              next
                case Resp_1_case_2
                by solve( !KU( f_.395, ~ekR.343 ) @ #vk.398 )
              next
                case cexp
                by solve( !KU( f_.406, ~ekR.343 ) @ #vk.405 )
              qed
            qed
          qed
        next
          case csign
          by solve( !KU( f_.264, ~ltkI.174 ) @ #vk.266 )
        qed
      next
        case Sessionkey_Reveal_case_6
        solve( !KU( f_.187, sign(<'g'^x.223, 'g'^~tid.172>, ~ltkI.174)
               ) @ #vk.186 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          by solve( !KU( f_.264, ~ltkI.174 ) @ #vk.266 )
        qed
      next
        case Sessionkey_Reveal_case_7
        solve( !KU( f_.187, sign(<'g'^x.223, 'g'^~tid.172>, ~ltkI.174)
               ) @ #vk.186 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          solve( !KU( f_.193, ~ltkI.174 ) @ #vk.194 )
            case fresh
            solve( !KU( f_.189,
                        mac('g'^(~ekR.162*~ekR.163), sign(<'g'^x.223, 'g'^~tid.172>, ~ltkI.174))
                   ) @ #vk.188 )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( splitEqs(1) )
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( !KU( f_.336, 'g'^(~ekR.162*~ekR.163) ) @ #vk.338 )
                case Resp_1_case_1
                by solve( !KU( f_.381, ~ekR.163 ) @ #vk.384 )
              next
                case Resp_1_case_2
                by solve( !KU( f_.381, ~ekR.162 ) @ #vk.384 )
              next
                case cexp
                by solve( !KU( f_.392, ~ekR.162 ) @ #vk.391 )
              qed
            qed
          qed
        qed
      next
        case Sessionkey_Reveal_case_8
        solve( !KU( f_.187, sign(<'g'^x.223, 'g'^~tid.172>, ~ltkI.174)
               ) @ #vk.186 )
          case Init_2_case_1
          by solve( splitEqs(1) )
        next
          case Init_2_case_2
          by solve( splitEqs(1) )
        next
          case Resp_1
          by solve( splitEqs(1) )
        next
          case csign
          solve( !KU( f_.193, ~ltkI.174 ) @ #vk.194 )
            case fresh
            solve( !KU( f_.189,
                        mac('g'^(~ekR.162*~ekR.163), sign(<'g'^x.223, 'g'^~tid.172>, ~ltkI.174))
                   ) @ #vk.188 )
              case Init_2_case_1
              by solve( splitEqs(1) )
            next
              case Init_2_case_2
              by solve( splitEqs(1) )
            next
              case Resp_1
              by solve( splitEqs(1) )
            next
              case cmac
              solve( !KU( f_.336, 'g'^(~ekR.162*~ekR.163) ) @ #vk.338 )
                case Resp_1_case_1
                by solve( !KU( f_.381, ~ekR.163 ) @ #vk.384 )
              next
                case Resp_1_case_2
                by solve( !KU( f_.381, ~ekR.162 ) @ #vk.384 )
              next
                case cexp
                by solve( !KU( f_.392, ~ekR.162 ) @ #vk.391 )
              qed
            qed
          qed
        qed
      next
        case cKDF
        solve( !KU( f_.167, 'g'^(~ekR.162*~ekR.163) ) @ #vk.168 )
          case Resp_1_case_1
          by solve( !KU( f_.210, ~ekR.163 ) @ #vk.213 )
        next
          case Resp_1_case_2
          by solve( !KU( f_.210, ~ekR.162 ) @ #vk.213 )
        next
          case cexp
          by solve( !KU( f_.221, ~ekR.162 ) @ #vk.220 )
        qed
      qed
    next
      case csign
      by solve( !KU( f_.79, ~ltkI.8 ) @ #vk.81 )
    qed
  next
    case Resp_1_case_2
    by contradiction // from formulas
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.6. OK.
 checking installation: OK.


analyzing: data/examples/csf12/STS_MAC_fix1.spthy

------------------------------------------------------------------------------
analyzed: data/examples/csf12/STS_MAC_fix1.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 24.214198s
  KI_Perfect_Forward_Secrecy_I (all-traces): verified (176 steps)
  KI_Perfect_Forward_Secrecy_R (all-traces): verified (251 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: data/examples/csf12/STS_MAC_fix1.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 24.214198s
  KI_Perfect_Forward_Secrecy_I (all-traces): verified (176 steps)
  KI_Perfect_Forward_Secrecy_R (all-traces): verified (251 steps)

==============================================================================
*/
