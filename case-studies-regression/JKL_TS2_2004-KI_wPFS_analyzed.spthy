theory JKL_TS2_2004 begin

// Function signature and definition of the equational theory E

builtin: diffie-hellman
functions: fst/1, h/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2

section{* Jeong, Katz, Lee : TS2 (2004) *}

rule (modulo E) generate_ltk:
   [ Fr( ~lk ) ] --> [ !Ltk( $A, ~lk ), !Pk( $A, 'g'^~lk ), Out( 'g'^~lk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~ekI ), !Ltk( $I, ~lkI ) ]
  --[ SidI_1( ~ekI, $I, $R, 'g'^~ekI ) ]->
   [ Init_1( ~ekI, $I, $R, ~lkI, 'g'^~ekI ), !Ephk( ~ekI ), Out( 'g'^~ekI )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_2:
   [ Init_1( ~ekI, $I, $R, ~lkI, hkI ), In( Y ), !Pk( $R, 'g'^~lkR ) ]
  --[ SidI_2( ~ekI, $I, $R, hkI, Y, h(<hkI, Y, Y^~ekI, 'g'^~lkR^~lkI>) )
  ]->
   [ !Sessk( ~ekI, h(<hkI, Y, Y^~ekI, 'g'^~lkR^~lkI>) ) ]

  /*
  rule (modulo AC) Init_2:
     [
     Init_1( ~ekI.3, $I.1, $R.2, ~lkI.4, hkI.7 ), In( Y.6 ),
     !Pk( $R.2, 'g'^~x.13 )
     ]
    --[
    SidI_2( ~ekI.3, $I.1, $R.2, hkI.7, Y.6,
            h(<hkI.7, Y.6, z.9, 'g'^(~lkI.4*~x.13)>)
    )
    ]->
     [ !Sessk( ~ekI.3, h(<hkI.7, Y.6, z.9, 'g'^(~lkI.4*~x.13)>) ) ]
  
    variants (modulo AC)
    1. ~ekI.3
             = ~ekI.220
       Y.6   = Y.221
       z.9   = Y.221^~ekI.220
    
    2. ~ekI.3
             = ~ekI.221
       Y.6   = z.222^inv(~ekI.221)
       z.9   = z.222
    
    3. ~ekI.3
             = ~ekI.231
       Y.6   = x.233^x.234
       z.9   = x.233^(~ekI.231*x.234)
    
    4. ~ekI.3
             = ~ekI.231
       Y.6   = x.233^inv((~ekI.231*x.234))
       z.9   = x.233^inv(x.234)
    
    5. ~ekI.3
             = ~ekI.231
       Y.6   = x.233^(x.234*inv(~ekI.231))
       z.9   = x.233^x.234
    
    6. ~ekI.3
             = ~ekI.241
       Y.6   = x.243^(x.244*inv((~ekI.241*x.245)))
       z.9   = x.243^(x.244*inv(x.245))
  */

rule (modulo E) Resp_1:
   [ In( X ), Fr( ~ekR ), !Ltk( $R, ~lkR ), !Pk( $I, 'g'^~lkI ) ]
  --[
  SidR_1( ~ekR, $I, $R, X, 'g'^~ekR,
          h(<X, 'g'^~ekR, X^~ekR, 'g'^~lkI^~lkR>)
  )
  ]->
   [
   Out( 'g'^~ekR ), !Ephk( ~ekR ),
   !Sessk( ~ekR, h(<X, 'g'^~ekR, X^~ekR, 'g'^~lkI^~lkR>) )
   ]

  /*
  rule (modulo AC) Resp_1:
     [ In( X.6 ), Fr( ~ekR.3 ), !Ltk( $R.2, ~lkR.5 ), !Pk( $I.1, 'g'^~x.13 ) ]
    --[
    SidR_1( ~ekR.3, $I.1, $R.2, X.6, 'g'^~ekR.3,
            h(<X.6, 'g'^~ekR.3, z.9, 'g'^(~lkR.5*~x.13)>)
    )
    ]->
     [
     Out( 'g'^~ekR.3 ), !Ephk( ~ekR.3 ),
     !Sessk( ~ekR.3, h(<X.6, 'g'^~ekR.3, z.9, 'g'^(~lkR.5*~x.13)>) )
     ]
  
    variants (modulo AC)
    1. ~ekR.3
             = ~ekR.323
       X.6   = X.324
       z.9   = X.324^~ekR.323
    
    2. ~ekR.3
             = ~ekR.323
       X.6   = z.324^inv(~ekR.323)
       z.9   = z.324
    
    3. ~ekR.3
             = ~ekR.337
       X.6   = x.339^x.340
       z.9   = x.339^(~ekR.337*x.340)
    
    4. ~ekR.3
             = ~ekR.337
       X.6   = x.339^inv((~ekR.337*x.340))
       z.9   = x.339^inv(x.340)
    
    5. ~ekR.3
             = ~ekR.337
       X.6   = x.339^(x.340*inv(~ekR.337))
       z.9   = x.339^x.340
    
    6. ~ekR.3
             = ~ekR.351
       X.6   = x.353^(x.354*inv((~ekR.351*x.355)))
       z.9   = x.353^(x.354*inv(x.355))
  */

rule (modulo E) Sessk_reveal:
   [ !Sessk( ~tid, k ) ] --[ SesskRev( ~tid ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ephk_reveal:
   [ !Ephk( ~ekI ) ] --[ EphkRev( ~ekI ) ]-> [ Out( ~ekI ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ltk_reveal:
   [ !Ltk( $A, k ) ] --[ LtkRev( $A ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

lemma (modulo E) JKL2008_2_initiator_key:
  "not(Ex #i1 #i2.1 ttest.2 I.3 R.4 k.5 hkI.6 hkR.7.
        ((((((SidI_2( ttest.2, I.3, R.4, hkI.6, hkR.7, k.5 ) @ #i1) &
             (K( k.5 ) @ #i2.1)) &
            (All #i3.8 t.9. (EphkRev( t.9 ) @ #i3.8) ==> (F))) &
           (All #i3.10. (SesskRev( ttest.2 ) @ #i3.10) ==> (F))) &
          (All #i3.11 #i4.12 tpartner.13 kpartner.14.
            ((SidR_1( tpartner.13, I.3, R.4, hkI.6, hkR.7, kpartner.14 ) @ #i3.11) &
             (SesskRev( tpartner.13 ) @ #i4.12)) ==>
            (F))) &
         (All #i3.15.
           (LtkRev( I.3 ) @ #i3.15) ==>
           (Ex #i4.16 tpartner.17 kpartner.18.
             SidR_1( tpartner.17, I.3, R.4, hkI.6, hkR.7, kpartner.18 ) @ #i4.16))) &
        (All #i3.19.
          (LtkRev( R.4 ) @ #i3.19) ==>
          (Ex #i4.20 tpartner.21 kpartner.22.
            SidR_1( tpartner.21, I.3, R.4, hkI.6, hkR.7, kpartner.22 ) @ #i4.20)))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all attacks:
"Ex #i1 #i2.1 ttest.2 I.3 R.4 k.5 hkI.6 hkR.7.
  (SidI_2( ttest.2, I.3, R.4, hkI.6, hkR.7, k.5 ) @ #i1) &
  (K( k.5 ) @ #i2.1)
 &
  (All #i3.8 t.9. (EphkRev( t.9 ) @ #i3.8) ==> F) &
  (All #i3.10. (SesskRev( ttest.2 ) @ #i3.10) ==> F) &
  (All #i3.11 #i4.12 tpartner.13 kpartner.14.
    (SidR_1( tpartner.13, I.3, R.4, hkI.6, hkR.7, kpartner.14 ) @ #i3.11) &
    (SesskRev( tpartner.13 ) @ #i4.12)
   ==>
    F) &
  (All #i3.15.
    (LtkRev( I.3 ) @ #i3.15)
   ==>
    Ex #i4.16 tpartner.17 kpartner.18.
     (SidR_1( tpartner.17, I.3, R.4, hkI.6, hkR.7, kpartner.18 ) @ #i4.16)
    &
     T) &
  (All #i3.19.
    (LtkRev( R.4 ) @ #i3.19)
   ==>
    Ex #i4.20 tpartner.21 kpartner.22.
     (SidR_1( tpartner.21, I.3, R.4, hkI.6, hkR.7, kpartner.22 ) @ #i4.20)
    &
     T)"
*/
simplify
solve( (#i1, 0)[Init_1( ~ekI.11, $I.9, $R.10, ~lkI.12, hkI.6 )] )
  case Init_1
  solve( (#i1, 2)[!Pk( $R.10, 'g'^~x.21 )] )
    case generate_ltk
    solve( (#i2.1, 0)[!KU( f_.24,
                           h(<'g'^~ekI.11, hkR.7, z.17, 'g'^(~lkI.12*~x.21)>)
                      )] /* may loop */ )
      case Sessk_reveal_case_3
      solve( (#vf.22, 0)[!KU( f_.23, 'g'^~tid.116 )] /* may loop */ )
        case Resp_1
        solve( (#vf.86, 0)[!KU( f_.87, 'g'^~ekI.115 )] /* may loop */ )
          case Init_1
          SOLVED (trace found)
        qed
      qed
    qed
  qed
qed

lemma (modulo E) JKL2008_2_responder_key:
  "not(Ex #i1 #i2.1 ttest.2 I.3 R.4 k.5 hkI.6 hkR.7.
        ((((((SidR_1( ttest.2, I.3, R.4, hkI.6, hkR.7, k.5 ) @ #i1) &
             (K( k.5 ) @ #i2.1)) &
            (All #i3.8 t.9. (EphkRev( t.9 ) @ #i3.8) ==> (F))) &
           (All #i3.10. (SesskRev( ttest.2 ) @ #i3.10) ==> (F))) &
          (All #i3.11 #i4.12 tpartner.13 kpartner.14.
            ((SidI_2( tpartner.13, I.3, R.4, hkI.6, hkR.7, kpartner.14 ) @ #i3.11) &
             (SesskRev( tpartner.13 ) @ #i4.12)) ==>
            (F))) &
         (All #i3.15.
           (LtkRev( I.3 ) @ #i3.15) ==>
           (Ex #i4.16 tpartner.17.
             SidI_1( tpartner.17, I.3, R.4, hkI.6 ) @ #i4.16))) &
        (All #i3.18.
          (LtkRev( R.4 ) @ #i3.18) ==>
          (Ex #i4.19 tpartner.20.
            SidI_1( tpartner.20, I.3, R.4, hkI.6 ) @ #i4.19)))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all attacks:
"Ex #i1 #i2.1 ttest.2 I.3 R.4 k.5 hkI.6 hkR.7.
  (SidR_1( ttest.2, I.3, R.4, hkI.6, hkR.7, k.5 ) @ #i1) &
  (K( k.5 ) @ #i2.1)
 &
  (All #i3.8 t.9. (EphkRev( t.9 ) @ #i3.8) ==> F) &
  (All #i3.10. (SesskRev( ttest.2 ) @ #i3.10) ==> F) &
  (All #i3.11 #i4.12 tpartner.13 kpartner.14.
    (SidI_2( tpartner.13, I.3, R.4, hkI.6, hkR.7, kpartner.14 ) @ #i3.11) &
    (SesskRev( tpartner.13 ) @ #i4.12)
   ==>
    F) &
  (All #i3.15.
    (LtkRev( I.3 ) @ #i3.15)
   ==>
    Ex #i4.16 tpartner.17.
     (SidI_1( tpartner.17, I.3, R.4, hkI.6 ) @ #i4.16)
    &
     T) &
  (All #i3.18.
    (LtkRev( R.4 ) @ #i3.18)
   ==>
    Ex #i4.19 tpartner.20.
     (SidI_1( tpartner.20, I.3, R.4, hkI.6 ) @ #i4.19)
    &
     T)"
*/
simplify
solve( (#i1, 2)[!Ltk( $R.10, ~lkR.13 )] )
  case generate_ltk
  solve( (#i1, 3)[!Pk( $I.9, 'g'^~x.21 )] )
    case generate_ltk
    solve( (#i2.1, 0)[!KU( f_.25,
                           h(<hkI.6, 'g'^~ekR.11, z.17, 'g'^(~lkR.13*~x.21)>)
                      )] /* may loop */ )
      case Sessk_reveal_case_1
      solve( (#vf.22, 0)[!KU( f_.23, 'g'^~tid.105 )] /* may loop */ )
        case Init_1
        solve( (#vf.75, 0)[!KU( f_.76, 'g'^~ekR.104 )] /* may loop */ )
          case Resp_1
          SOLVED (trace found)
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.6. OK.


analyzing: data/examples/csf12/JKL_TS2_2004-KI_wPFS.spthy

------------------------------------------------------------------------------
analyzed: data/examples/csf12/JKL_TS2_2004-KI_wPFS.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 0.642615s
  JKL2008_2_initiator_key: attack found (7 steps)
  JKL2008_2_responder_key: attack found (7 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: data/examples/csf12/JKL_TS2_2004-KI_wPFS.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 0.642615s
  JKL2008_2_initiator_key: attack found (7 steps)
  JKL2008_2_responder_key: attack found (7 steps)

==============================================================================
*/
