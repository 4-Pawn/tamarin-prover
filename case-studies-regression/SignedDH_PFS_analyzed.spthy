theory SignedDH begin

// Function signature and definition of the equational theory E

builtin: diffie-hellman
functions: fst/1, pair/2, pk/1, sign/2, snd/1, true/0, verify/3
equations:
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true()

section{* The Signed Diffie-Hellman Protocol *}

rule (modulo E) Register_pk:
   [ Fr( ~ltk ) ] --> [ !Ltk( $A, ~ltk ), !Pk( $A, pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Get_pk:
   [ !Pk( A, pk ) ] --> [ Out( pk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_ltk:
   [ !Ltk( A, ltk ) ] --[ LtkReveal( A ) ]-> [ Out( ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~ekI ), !Ltk( $I, ltkI ) ]
  -->
   [
   Init_1( $I, $R, ~ekI ),
   Out( <$I, $R, 'g'^~ekI, sign(<'1', $I, $R, 'g'^~ekI>, ltkI)> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_2:
   [
   Init_1( $I, $R, ~ekI ), !Pk( $R, pk(ltkR) ),
   In( <$R, $I, Y, sign(<'2', $R, $I, Y>, ltkR)> )
   ]
  --[ SessionKey( $I, $R, Y^~ekI ) ]->
   [ ]

  /*
  rule (modulo AC) Init_2:
     [
     Init_1( $I.1, $R.2, ~ekI.3 ), !Pk( $R.2, pk(ltkR.5) ),
     In( <$R.2, $I.1, Y.4, sign(<'2', $R.2, $I.1, Y.4>, ltkR.5)> )
     ]
    --[ SessionKey( $I.1, $R.2, z.7 ) ]->
     [ ]
  
    variants (modulo AC)
    1. ~ekI.3
             = ~ekI.20
       Y.4   = Y.21
       z.7   = Y.21^~ekI.20
    
    2. ~ekI.3
             = ~ekI.21
       Y.4   = z.22^inv(~ekI.21)
       z.7   = z.22
    
    3. ~ekI.3
             = ~ekI.22
       Y.4   = x.23^x.24
       z.7   = x.23^(~ekI.22*x.24)
    
    4. ~ekI.3
             = ~ekI.22
       Y.4   = x.23^inv((~ekI.22*x.24))
       z.7   = x.23^inv(x.24)
    
    5. ~ekI.3
             = ~ekI.22
       Y.4   = x.23^(x.24*inv(~ekI.22))
       z.7   = x.23^x.24
    
    6. ~ekI.3
             = ~ekI.23
       Y.4   = x.24^(x.25*inv((~ekI.23*x.26)))
       z.7   = x.24^(x.25*inv(x.26))
  */

rule (modulo E) Resp:
   [
   !Pk( $I, pk(ltkI) ), !Ltk( $R, ltkR ), Fr( ~ekR ),
   In( <$I, $R, X, sign(<'1', $I, $R, X>, ltkI)> )
   ]
  --[ SessionKey( $I, $R, X^~ekR ) ]->
   [ Out( <$R, $I, 'g'^~ekR, sign(<'2', $R, $I, 'g'^~ekR>, ltkR)> ) ]

  /*
  rule (modulo AC) Resp:
     [
     !Pk( $I.1, pk(ltkI.5) ), !Ltk( $R.2, ltkR.6 ), Fr( ~ekR.3 ),
     In( <$I.1, $R.2, X.4, sign(<'1', $I.1, $R.2, X.4>, ltkI.5)> )
     ]
    --[ SessionKey( $I.1, $R.2, z.10 ) ]->
     [
     Out( <$R.2, $I.1, 'g'^~ekR.3, sign(<'2', $R.2, $I.1, 'g'^~ekR.3>, ltkR.6)
          >
     )
     ]
  
    variants (modulo AC)
    1. ~ekR.3
             = ~ekR.102
       X.4   = X.103
       z.10  = X.103^~ekR.102
    
    2. ~ekR.3
             = ~ekR.104
       X.4   = z.105^inv(~ekR.104)
       z.10  = z.105
    
    3. ~ekR.3
             = ~ekR.110
       X.4   = x.111^x.112
       z.10  = x.111^(~ekR.110*x.112)
    
    4. ~ekR.3
             = ~ekR.110
       X.4   = x.111^inv((~ekR.110*x.112))
       z.10  = x.111^inv(x.112)
    
    5. ~ekR.3
             = ~ekR.110
       X.4   = x.111^(x.112*inv(~ekR.110))
       z.10  = x.111^x.112
    
    6. ~ekR.3
             = ~ekR.116
       X.4   = x.117^(x.118*inv((~ekR.116*x.119)))
       z.10  = x.117^(x.118*inv(x.119))
  */

lemma (modulo E) Perfect_Forward_Secrecy:
  "All I R.1 sessKey.2 #i.3 #k.4.
    ((SessionKey( I, R.1, sessKey.2 ) @ #i.3) & (K( sessKey.2 ) @ #k.4)) ==>
    ((Ex #r.5. (LtkReveal( I ) @ #r.5) & (#r.5 < #i.3)) |
     (Ex #r.6. (LtkReveal( R.1 ) @ #r.6) & (#r.6 < #i.3)))"
/* proof based on the same lemma modulo AC */
/*
guarded formula characterizing all attacks:
"Ex I R.1 sessKey.2 #i.3 #k.4.
  (SessionKey( I, R.1, sessKey.2 ) @ #i.3) & (K( sessKey.2 ) @ #k.4)
 &
  (All #r.5. (LtkReveal( I ) @ #r.5) ==> All . (#r.5 < #i.3) ==> F) &
  (All #r.6. (LtkReveal( R.1 ) @ #r.6) ==> All . (#r.6 < #i.3) ==> F)"
*/
simplify
solve( SessionKey( I, R.1, sessKey.2 ) @ #i.3 )
  case Init_2
  solve( (#i.3, 0)[Init_1( $I.7, $R.8, ~ekI.9 )] )
    case Init_1
    solve( (#i.3, 1)[!Pk( $R.8, pk(ltkR.11) )] )
      case Register_pk
      solve( KU((#vf.14, 0), sign(<'2', $R.8, $I.7, Y.10>, ~ltk.43)) )
        case Resp
        solve( (#k.4, 0)[!KU( f_.5, 'g'^(~ekI.101*~ekR.102) )] /* may loop */ )
          case Init_1
          by solve( (#vr.146, 1)[!KU( f_.149, ~ekR.164 )] /* may loop */ )
        next
          case Resp
          by solve( (#vr.156, 1)[!KU( f_.159, ~ekI.163 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.107, 1), ~ekI.101) )
        qed
      next
        case csign
        solve( (#vr.49, 1)[!KU( f_.53, ~ltk.43 )] /* may loop */ )
          case Reveal_ltk
          by contradiction // cyclic
        qed
      qed
    qed
  qed
next
  case Resp
  solve( (#i.3, 0)[!Pk( $I.7, pk(ltkI.11) )] )
    case Register_pk
    solve( (#i.3, 1)[!Ltk( $R.8, ltkR.12 )] )
      case Register_pk
      solve( KU((#vf.17, 0), sign(<'1', $I.7, $R.8, X.10>, ~ltk.27)) )
        case Init_1
        solve( (#k.4, 0)[!KU( f_.5, 'g'^(~ekR.94*~ekI.95) )] /* may loop */ )
          case Init_1
          by solve( (#vr.139, 1)[!KU( f_.142, ~ekR.156 )] /* may loop */ )
        next
          case Resp
          by solve( (#vr.149, 1)[!KU( f_.152, ~ekI.157 )] /* may loop */ )
        next
          case cexp
          by solve( KU((#vr.100, 1), ~ekR.94) )
        qed
      next
        case csign
        solve( (#vr.42, 1)[!KU( f_.46, ~ltk.27 )] /* may loop */ )
          case Reveal_ltk
          by contradiction // cyclic
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.6. OK.


analyzing: data/examples/csf12/SignedDH_PFS.spthy

------------------------------------------------------------------------------
analyzed: data/examples/csf12/SignedDH_PFS.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 0.740422s
  Perfect_Forward_Secrecy: complete proof (20 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: data/examples/csf12/SignedDH_PFS.spthy

  output:          case-studies/temp-analysis.spthy
  processing time: 0.740422s
  Perfect_Forward_Secrecy: complete proof (20 steps)

==============================================================================
*/
