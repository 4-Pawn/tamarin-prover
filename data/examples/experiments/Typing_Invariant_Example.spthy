theory CR_pk_Paper
begin

section{* The Running Example of Our CSF 10 Paper *}

/*
 * Protocol:	Example
 * Modeler: 	Simon Meier, Benedikt Schmidt
 * Date: 	June 2011
 *
 * Status: 	working
 */

builtins: asymmetric-encryption

/*
anb-proto CR
{
  1. C -> S: encA{'1',C,~k}pk(S)
  2. C <- S: encA{'2',~k}pk(C)
}
*/

// Public key infrastructure
rule Register_pk:
  [ Fr(~ltk) ] 
  --> 
  [ !Ltk($A, ~ltk), !Pk($A, pk(~ltk)) ]

rule Get_pk:
  [ !Pk(A, pk) ] 
  --> 
  [ Out(pk) ]

rule Reveal_ltk:
    [ !Ltk(A, ltk) ]
  --[ LtkReveal(A) ]->
    [ Out(ltk) ]

// Protocol

rule Init_1:
    [ Fr(~k), !Pk($S, pkS) ]
  --[ OUT_Init_1(aenc{'1', $I, ~k}pkS) ]->
    [ Init_1( $I, $S, ~k ), Out( aenc{'1', $I, ~k}pkS ) ]

rule Init_2:
    [ Init_1( $I, $S, ~k ), !Ltk($I, ltkI), In( aenc{'2', ~k}pk(ltkI) ) ]
  --[ SessKeyI( $I, $S, ~k )               ]->
    [] 

rule Serv_1:
    [ !Ltk($S, ltkS), !Pk(I, pkI), In(aenc{'1', I, m}pk(ltkS) ) ]
  --[ SessKeyS( I, $S, m)

    , IN_Serv_1(I, m, aenc{'1', I, m}pk(ltkS)) 
    
    ]->

    [ Out( aenc{'2', m}pkI ) ]

// Typing property

lemma Typing [typing]:
  "All I m enc #i.
      IN_Serv_1(I, m, enc) @ i
      ==>
    ( (Ex #o. OUT_Init_1(enc) @ o & o < i)
    | (m --| i)
    )
  "

/*
  "not(Ex I m enc #i.
      IN_Serv_1(I, m, enc) @ i
    & (All #o. OUT_Init_1(enc) @ o ==> i < o)
    & (m --| i ==> F)
   )
  "
*/

// Security properties

lemma Init_secrecy:
  "not(
     Ex I S k #ii #ik.
         SessKeyI(I, S, k) @ ii
       & K(k) @ ik 
       & (All #ir. LtkReveal(I) @ ir ==> ik < ir)
       & (All #ir. LtkReveal(S) @ ir ==> ik < ir)
   )
  "

lemma Init_auth:
  "not (
    Ex I S k #ii.
      SessKeyI(I, S, k) @ ii
      &
      (All #ir.  LtkReveal(S)   @ ir ==> ii < ir)
      &
      (All #is.  SessKeyS(I, S, k) @ is ==> ii < is))
  "

end
