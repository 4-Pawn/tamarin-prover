theory MinimalWrap
begin

builtin: symmetric-encryption

rule NewKey: 
  [ Fr(~h), Fr(~key) ] 
  --[Create(~h,~key)]-> 
  [ !Store(~h,~key), Out(~h) ]

rule Wrap:
  [ !Store(h1,~k1), !Store(h2,~k2), In(<h1,h2>)] 
  --[Wrap(~k1,~k2)]->
  [ Out(senc(~k1,~k2)) ]

/* The 'reuse' attribute marks this property such that it should be used in
 * proof of later theorems. This is what we'd like to do with such a property
 * which proves that no created key can be deduced by the adversary. The
 * 'invariant' attribute denotes that this property must is an inductive
 * invariant of normal dependency graphs. Better names are up for dips ;-)
 *
 * Tamarin can prove this property automatically.
 */
lemma Created_key_secret [reuse, invariant]:
  "not(Ex #i #j h k. Create(h, k) @ i & Ded(k) @ j) "


end
